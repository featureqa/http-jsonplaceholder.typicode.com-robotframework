<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210205 08:57:11.053" rpa="false">
<suite id="s1" name="TS001 GET Posts" source="C:\typicodetests\http-jsonplaceholder.typicode.com-robotframework\RobotAutomation\TestCases\GetPostsTC\TS001_GET_Posts.robot">
<test id="s1-t1" name="TC001 VALIDATE GET ALL POSTS ENDPOINT">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="APIHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 08:57:11.946" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 08:57:11.944" endtime="20210205 08:57:11.946"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 08:57:11.948" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:11.946" endtime="20210205 08:57:11.948"></status>
</kw>
<msg timestamp="20210205 08:57:11.949" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:11.943" endtime="20210205 08:57:11.949"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>size</arg>
<arg>allposts</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:11.953" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 08:57:11.951" endtime="20210205 08:57:11.953"></status>
</kw>
<msg timestamp="20210205 08:57:11.954" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 08:57:11.949" endtime="20210205 08:57:11.954"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>user</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${segmentationcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:11.958" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 08:57:11.956" endtime="20210205 08:57:11.958"></status>
</kw>
<msg timestamp="20210205 08:57:11.958" level="INFO">${segmentationcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:11.954" endtime="20210205 08:57:11.959"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>user</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${singleuserid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:11.961" level="INFO">${tempvalue} = 3</msg>
<status status="PASS" starttime="20210205 08:57:11.960" endtime="20210205 08:57:11.961"></status>
</kw>
<msg timestamp="20210205 08:57:11.961" level="INFO">${singleuserid} = 3</msg>
<status status="PASS" starttime="20210205 08:57:11.959" endtime="20210205 08:57:11.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:11.964" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:11.962" endtime="20210205 08:57:11.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>GET_Posts.json</arg>
</arguments>
<msg timestamp="20210205 08:57:11.967" level="INFO">${templatefile} = GET_Posts.json</msg>
<status status="PASS" starttime="20210205 08:57:11.965" endtime="20210205 08:57:11.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 08:57:11.969" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 08:57:11.967" endtime="20210205 08:57:11.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${segmentcnt}</arg>
<arg>${segmentationcount}</arg>
</arguments>
<msg timestamp="20210205 08:57:11.971" level="INFO">${segmentcnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:11.970" endtime="20210205 08:57:11.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${singleuser}</arg>
<arg>${singleuserid}</arg>
</arguments>
<msg timestamp="20210205 08:57:11.974" level="INFO">${singleuser} = 3</msg>
<status status="PASS" starttime="20210205 08:57:11.972" endtime="20210205 08:57:11.974"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:11.942" endtime="20210205 08:57:11.974"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_All_Posts</arg>
<arg>${base_url}</arg>
<arg>/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:11.979" level="INFO">Creating Session using : alias=Get_All_Posts, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:11.978" endtime="20210205 08:57:11.980"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:12.161" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:12.161" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db3e504aa74e2e902a862f44edbefdb631612533432; expires=Sun, 07-Mar-21 13:57:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612488045', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '16611', 'cf-request-id': '08141497a90000f0fe59bfe000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=IVc6fgkprLIpTBiBI7pYa5cEg2lV%2FVgsJfQZWovdpPddvWOAeLRs5vtlH%2BqECc3NEACpR%2FzvW4qehuNHPaqv6AMxykoFTohrRqySrPGnhw5xOaQBgDD9EtL%2Fi5Ks"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd239f798af0fe-IAD'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210205 08:57:12.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:11.980" endtime="20210205 08:57:12.162"></status>
</kw>
<msg timestamp="20210205 08:57:12.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:11.976" endtime="20210205 08:57:12.163"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>All</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.166" endtime="20210205 08:57:12.186"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.165" endtime="20210205 08:57:12.186"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.164" endtime="20210205 08:57:12.187"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.190" endtime="20210205 08:57:12.191"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.188" endtime="20210205 08:57:12.191"></status>
</kw>
<kw name="VALIDATE RESPONSE SIZE" library="APIHelper">
<arguments>
<arg>${templatefile}</arg>
<arg>size</arg>
<arg>allposts</arg>
<arg>${response}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idlist}</var>
</assign>
<msg timestamp="20210205 08:57:12.194" level="INFO">@{idlist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.194" endtime="20210205 08:57:12.194"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.196" endtime="20210205 08:57:12.197"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.195" endtime="20210205 08:57:12.197"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.197" endtime="20210205 08:57:12.198"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.197" endtime="20210205 08:57:12.198"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.198" endtime="20210205 08:57:12.198"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.198" endtime="20210205 08:57:12.199"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.199" endtime="20210205 08:57:12.199"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.199" endtime="20210205 08:57:12.199"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.200" endtime="20210205 08:57:12.200"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.199" endtime="20210205 08:57:12.200"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.201" endtime="20210205 08:57:12.201"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.200" endtime="20210205 08:57:12.201"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.202" endtime="20210205 08:57:12.203"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.202" endtime="20210205 08:57:12.203"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.203" endtime="20210205 08:57:12.204"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.203" endtime="20210205 08:57:12.204"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.204" endtime="20210205 08:57:12.205"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.204" endtime="20210205 08:57:12.205"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.205" endtime="20210205 08:57:12.206"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.205" endtime="20210205 08:57:12.206"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.206" endtime="20210205 08:57:12.207"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.206" endtime="20210205 08:57:12.207"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.207" endtime="20210205 08:57:12.207"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.207" endtime="20210205 08:57:12.207"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.208" endtime="20210205 08:57:12.208"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.208" endtime="20210205 08:57:12.208"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.208" endtime="20210205 08:57:12.209"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.208" endtime="20210205 08:57:12.209"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.209" endtime="20210205 08:57:12.209"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.209" endtime="20210205 08:57:12.209"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.210" endtime="20210205 08:57:12.210"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.210" endtime="20210205 08:57:12.210"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.210" endtime="20210205 08:57:12.211"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.210" endtime="20210205 08:57:12.211"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.211" endtime="20210205 08:57:12.211"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.211" endtime="20210205 08:57:12.211"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.212" endtime="20210205 08:57:12.212"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.212" endtime="20210205 08:57:12.212"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.212" endtime="20210205 08:57:12.213"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.212" endtime="20210205 08:57:12.213"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.214" endtime="20210205 08:57:12.215"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.214" endtime="20210205 08:57:12.215"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.215" endtime="20210205 08:57:12.216"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.215" endtime="20210205 08:57:12.216"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.217" endtime="20210205 08:57:12.217"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.216" endtime="20210205 08:57:12.217"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.218" endtime="20210205 08:57:12.219"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.218" endtime="20210205 08:57:12.219"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.219" endtime="20210205 08:57:12.220"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.219" endtime="20210205 08:57:12.220"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.221" endtime="20210205 08:57:12.221"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.220" endtime="20210205 08:57:12.221"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.221" endtime="20210205 08:57:12.222"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.221" endtime="20210205 08:57:12.222"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.222" endtime="20210205 08:57:12.222"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.222" endtime="20210205 08:57:12.222"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.222" endtime="20210205 08:57:12.223"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.222" endtime="20210205 08:57:12.223"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.223" endtime="20210205 08:57:12.223"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.223" endtime="20210205 08:57:12.223"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.223" endtime="20210205 08:57:12.224"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.223" endtime="20210205 08:57:12.224"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.224" endtime="20210205 08:57:12.224"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.224" endtime="20210205 08:57:12.224"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.225" endtime="20210205 08:57:12.225"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.225" endtime="20210205 08:57:12.225"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.225" endtime="20210205 08:57:12.226"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.225" endtime="20210205 08:57:12.226"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.226" endtime="20210205 08:57:12.226"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.226" endtime="20210205 08:57:12.226"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.227" endtime="20210205 08:57:12.227"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.226" endtime="20210205 08:57:12.227"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.227" endtime="20210205 08:57:12.227"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.227" endtime="20210205 08:57:12.227"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.228" endtime="20210205 08:57:12.228"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.227" endtime="20210205 08:57:12.228"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.228" endtime="20210205 08:57:12.228"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.228" endtime="20210205 08:57:12.228"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.229" endtime="20210205 08:57:12.229"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.228" endtime="20210205 08:57:12.229"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.229" endtime="20210205 08:57:12.230"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.229" endtime="20210205 08:57:12.230"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.230" endtime="20210205 08:57:12.231"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.230" endtime="20210205 08:57:12.231"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.231" endtime="20210205 08:57:12.231"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.231" endtime="20210205 08:57:12.231"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.232" endtime="20210205 08:57:12.232"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.231" endtime="20210205 08:57:12.232"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.232" endtime="20210205 08:57:12.232"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.232" endtime="20210205 08:57:12.232"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.233" endtime="20210205 08:57:12.233"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.233" endtime="20210205 08:57:12.233"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.233" endtime="20210205 08:57:12.233"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.233" endtime="20210205 08:57:12.233"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.234" endtime="20210205 08:57:12.234"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.233" endtime="20210205 08:57:12.234"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.234" endtime="20210205 08:57:12.234"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.234" endtime="20210205 08:57:12.234"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.235" endtime="20210205 08:57:12.236"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.235" endtime="20210205 08:57:12.236"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.236" endtime="20210205 08:57:12.236"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.236" endtime="20210205 08:57:12.236"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.236" endtime="20210205 08:57:12.237"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.236" endtime="20210205 08:57:12.237"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.237" endtime="20210205 08:57:12.237"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.237" endtime="20210205 08:57:12.237"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.237" endtime="20210205 08:57:12.237"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.237" endtime="20210205 08:57:12.237"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.238" endtime="20210205 08:57:12.238"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.238" endtime="20210205 08:57:12.238"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.238" endtime="20210205 08:57:12.238"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.238" endtime="20210205 08:57:12.238"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.238" endtime="20210205 08:57:12.239"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.238" endtime="20210205 08:57:12.239"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.239" endtime="20210205 08:57:12.239"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.239" endtime="20210205 08:57:12.239"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.239" endtime="20210205 08:57:12.239"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.239" endtime="20210205 08:57:12.240"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.240" endtime="20210205 08:57:12.240"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.240" endtime="20210205 08:57:12.240"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.240" endtime="20210205 08:57:12.240"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.240" endtime="20210205 08:57:12.240"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.241" endtime="20210205 08:57:12.241"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.240" endtime="20210205 08:57:12.241"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.241" endtime="20210205 08:57:12.241"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.241" endtime="20210205 08:57:12.241"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.241" endtime="20210205 08:57:12.242"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.241" endtime="20210205 08:57:12.242"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.242" endtime="20210205 08:57:12.242"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.242" endtime="20210205 08:57:12.242"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.243" endtime="20210205 08:57:12.243"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.242" endtime="20210205 08:57:12.243"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.243" endtime="20210205 08:57:12.244"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.243" endtime="20210205 08:57:12.244"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.244" endtime="20210205 08:57:12.245"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.244" endtime="20210205 08:57:12.245"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.245" endtime="20210205 08:57:12.246"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.245" endtime="20210205 08:57:12.246"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.246" endtime="20210205 08:57:12.247"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.246" endtime="20210205 08:57:12.247"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.247" endtime="20210205 08:57:12.247"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.247" endtime="20210205 08:57:12.247"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.247" endtime="20210205 08:57:12.248"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.247" endtime="20210205 08:57:12.248"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.249" endtime="20210205 08:57:12.249"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.248" endtime="20210205 08:57:12.249"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.249" endtime="20210205 08:57:12.251"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.249" endtime="20210205 08:57:12.251"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.251" endtime="20210205 08:57:12.251"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.251" endtime="20210205 08:57:12.251"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.251" endtime="20210205 08:57:12.252"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.251" endtime="20210205 08:57:12.252"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.252" endtime="20210205 08:57:12.252"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.252" endtime="20210205 08:57:12.252"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.252" endtime="20210205 08:57:12.253"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.252" endtime="20210205 08:57:12.253"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.253" endtime="20210205 08:57:12.253"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.253" endtime="20210205 08:57:12.253"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.254" endtime="20210205 08:57:12.254"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.254" endtime="20210205 08:57:12.254"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.254" endtime="20210205 08:57:12.255"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.254" endtime="20210205 08:57:12.255"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.255" endtime="20210205 08:57:12.256"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.255" endtime="20210205 08:57:12.256"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.256" endtime="20210205 08:57:12.256"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.256" endtime="20210205 08:57:12.256"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.256" endtime="20210205 08:57:12.257"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.256" endtime="20210205 08:57:12.257"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.257" endtime="20210205 08:57:12.257"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.257" endtime="20210205 08:57:12.257"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.257" endtime="20210205 08:57:12.258"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.257" endtime="20210205 08:57:12.258"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.258" endtime="20210205 08:57:12.259"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.258" endtime="20210205 08:57:12.259"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.259" endtime="20210205 08:57:12.259"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.259" endtime="20210205 08:57:12.259"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.259" endtime="20210205 08:57:12.260"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.259" endtime="20210205 08:57:12.260"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.260" endtime="20210205 08:57:12.260"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.260" endtime="20210205 08:57:12.260"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.261" endtime="20210205 08:57:12.261"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.261" endtime="20210205 08:57:12.261"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.262" endtime="20210205 08:57:12.262"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.261" endtime="20210205 08:57:12.263"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.263" endtime="20210205 08:57:12.264"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.263" endtime="20210205 08:57:12.264"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.264" endtime="20210205 08:57:12.265"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.264" endtime="20210205 08:57:12.265"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.265" endtime="20210205 08:57:12.265"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.265" endtime="20210205 08:57:12.266"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.266" endtime="20210205 08:57:12.267"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.266" endtime="20210205 08:57:12.267"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.267" endtime="20210205 08:57:12.268"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.267" endtime="20210205 08:57:12.268"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.268" endtime="20210205 08:57:12.268"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.268" endtime="20210205 08:57:12.268"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.269" endtime="20210205 08:57:12.269"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.268" endtime="20210205 08:57:12.269"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.269" endtime="20210205 08:57:12.269"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.269" endtime="20210205 08:57:12.269"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.195" endtime="20210205 08:57:12.269"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${idlist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 08:57:12.270" level="INFO">Length is 100</msg>
<msg timestamp="20210205 08:57:12.270" level="INFO">${cnt} = 100</msg>
<status status="PASS" starttime="20210205 08:57:12.270" endtime="20210205 08:57:12.270"></status>
</kw>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${expectedsize}</var>
</assign>
<msg timestamp="20210205 08:57:12.271" level="INFO">${expectedsize} = 100</msg>
<status status="PASS" starttime="20210205 08:57:12.270" endtime="20210205 08:57:12.271"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${cnt}</arg>
<arg>${expectedsize}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.271" endtime="20210205 08:57:12.271"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idlist}</var>
</assign>
<msg timestamp="20210205 08:57:12.271" level="INFO">@{idlist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.271" endtime="20210205 08:57:12.271"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.193" endtime="20210205 08:57:12.272"></status>
</kw>
<kw name="VALIDATE RESPONSE SEGMENTATION" library="APIHelper">
<arguments>
<arg>${singleuser}</arg>
<arg>${segmentcnt}</arg>
<arg>${response}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{useridlist}</var>
</assign>
<msg timestamp="20210205 08:57:12.273" level="INFO">@{useridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.273" endtime="20210205 08:57:12.273"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.274" endtime="20210205 08:57:12.274"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.274" endtime="20210205 08:57:12.274"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.274" endtime="20210205 08:57:12.275"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.274" endtime="20210205 08:57:12.275"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.276" endtime="20210205 08:57:12.276"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.275" endtime="20210205 08:57:12.276"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.277" endtime="20210205 08:57:12.277"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.276" endtime="20210205 08:57:12.277"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.278" endtime="20210205 08:57:12.278"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.277" endtime="20210205 08:57:12.278"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.279" endtime="20210205 08:57:12.279"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.279" endtime="20210205 08:57:12.280"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.280" endtime="20210205 08:57:12.281"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.280" endtime="20210205 08:57:12.281"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.281" endtime="20210205 08:57:12.282"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.281" endtime="20210205 08:57:12.282"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.283" endtime="20210205 08:57:12.283"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.283" endtime="20210205 08:57:12.283"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.284" endtime="20210205 08:57:12.284"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.283" endtime="20210205 08:57:12.284"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.284" endtime="20210205 08:57:12.285"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.284" endtime="20210205 08:57:12.285"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.285" endtime="20210205 08:57:12.286"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.285" endtime="20210205 08:57:12.286"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.286" endtime="20210205 08:57:12.286"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.286" endtime="20210205 08:57:12.287"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.287" endtime="20210205 08:57:12.287"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.287" endtime="20210205 08:57:12.287"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.288" endtime="20210205 08:57:12.288"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.287" endtime="20210205 08:57:12.288"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.288" endtime="20210205 08:57:12.289"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.288" endtime="20210205 08:57:12.289"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.289" endtime="20210205 08:57:12.290"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.289" endtime="20210205 08:57:12.290"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.290" endtime="20210205 08:57:12.290"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.290" endtime="20210205 08:57:12.290"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.291" endtime="20210205 08:57:12.291"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.290" endtime="20210205 08:57:12.291"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.291" endtime="20210205 08:57:12.292"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.291" endtime="20210205 08:57:12.292"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.292" endtime="20210205 08:57:12.293"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.292" endtime="20210205 08:57:12.293"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.292" endtime="20210205 08:57:12.293"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.294" endtime="20210205 08:57:12.294"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.293" endtime="20210205 08:57:12.294"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.293" endtime="20210205 08:57:12.294"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.295" endtime="20210205 08:57:12.296"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.295" endtime="20210205 08:57:12.296"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.294" endtime="20210205 08:57:12.296"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.297" endtime="20210205 08:57:12.297"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.296" endtime="20210205 08:57:12.298"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.296" endtime="20210205 08:57:12.298"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.299" endtime="20210205 08:57:12.300"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.298" endtime="20210205 08:57:12.301"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.298" endtime="20210205 08:57:12.301"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.303" endtime="20210205 08:57:12.304"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.302" endtime="20210205 08:57:12.304"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.302" endtime="20210205 08:57:12.304"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.306" endtime="20210205 08:57:12.306"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.305" endtime="20210205 08:57:12.307"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.304" endtime="20210205 08:57:12.307"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.308" endtime="20210205 08:57:12.308"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.307" endtime="20210205 08:57:12.308"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.307" endtime="20210205 08:57:12.309"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.310" endtime="20210205 08:57:12.310"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.309" endtime="20210205 08:57:12.310"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.309" endtime="20210205 08:57:12.310"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.311" endtime="20210205 08:57:12.311"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.310" endtime="20210205 08:57:12.311"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.310" endtime="20210205 08:57:12.311"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.312" endtime="20210205 08:57:12.312"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.311" endtime="20210205 08:57:12.312"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.312" endtime="20210205 08:57:12.313"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.312" endtime="20210205 08:57:12.313"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.314" endtime="20210205 08:57:12.315"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.314" endtime="20210205 08:57:12.315"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.316" endtime="20210205 08:57:12.316"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.316" endtime="20210205 08:57:12.316"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.317" endtime="20210205 08:57:12.317"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.317" endtime="20210205 08:57:12.317"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.317" endtime="20210205 08:57:12.318"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.317" endtime="20210205 08:57:12.318"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.318" endtime="20210205 08:57:12.319"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.318" endtime="20210205 08:57:12.319"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.319" endtime="20210205 08:57:12.319"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.319" endtime="20210205 08:57:12.319"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.320" endtime="20210205 08:57:12.320"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.320" endtime="20210205 08:57:12.320"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.321" endtime="20210205 08:57:12.321"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.320" endtime="20210205 08:57:12.321"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.321" endtime="20210205 08:57:12.322"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.321" endtime="20210205 08:57:12.322"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.322" endtime="20210205 08:57:12.322"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.322" endtime="20210205 08:57:12.323"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.323" endtime="20210205 08:57:12.323"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.323" endtime="20210205 08:57:12.324"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.324" endtime="20210205 08:57:12.324"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.324" endtime="20210205 08:57:12.324"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.325" endtime="20210205 08:57:12.325"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.325" endtime="20210205 08:57:12.325"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.326" endtime="20210205 08:57:12.326"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.325" endtime="20210205 08:57:12.326"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.327" endtime="20210205 08:57:12.327"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.327" endtime="20210205 08:57:12.327"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.327" endtime="20210205 08:57:12.328"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.327" endtime="20210205 08:57:12.328"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.328" endtime="20210205 08:57:12.329"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.328" endtime="20210205 08:57:12.329"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.329" endtime="20210205 08:57:12.329"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.329" endtime="20210205 08:57:12.330"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.330" endtime="20210205 08:57:12.331"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.330" endtime="20210205 08:57:12.331"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.331" endtime="20210205 08:57:12.332"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.331" endtime="20210205 08:57:12.332"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.332" endtime="20210205 08:57:12.333"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.332" endtime="20210205 08:57:12.333"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.333" endtime="20210205 08:57:12.334"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.333" endtime="20210205 08:57:12.334"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.334" endtime="20210205 08:57:12.334"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.334" endtime="20210205 08:57:12.334"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.335" endtime="20210205 08:57:12.335"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.334" endtime="20210205 08:57:12.335"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.335" endtime="20210205 08:57:12.336"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.335" endtime="20210205 08:57:12.336"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.336" endtime="20210205 08:57:12.336"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.336" endtime="20210205 08:57:12.336"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.336" endtime="20210205 08:57:12.337"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.336" endtime="20210205 08:57:12.337"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.337" endtime="20210205 08:57:12.337"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.337" endtime="20210205 08:57:12.337"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.337" endtime="20210205 08:57:12.338"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.337" endtime="20210205 08:57:12.338"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.338" endtime="20210205 08:57:12.338"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.338" endtime="20210205 08:57:12.338"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.338" endtime="20210205 08:57:12.339"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.338" endtime="20210205 08:57:12.339"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.339" endtime="20210205 08:57:12.339"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.339" endtime="20210205 08:57:12.339"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.340" endtime="20210205 08:57:12.340"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.339" endtime="20210205 08:57:12.340"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.340" endtime="20210205 08:57:12.340"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.340" endtime="20210205 08:57:12.340"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.341" endtime="20210205 08:57:12.341"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.341" endtime="20210205 08:57:12.341"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.341" endtime="20210205 08:57:12.341"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.341" endtime="20210205 08:57:12.341"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.342" endtime="20210205 08:57:12.342"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.342" endtime="20210205 08:57:12.342"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.342" endtime="20210205 08:57:12.342"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.342" endtime="20210205 08:57:12.342"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.343" endtime="20210205 08:57:12.343"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.343" endtime="20210205 08:57:12.343"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.343" endtime="20210205 08:57:12.343"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.343" endtime="20210205 08:57:12.343"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.344" endtime="20210205 08:57:12.344"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.344" endtime="20210205 08:57:12.344"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.344" endtime="20210205 08:57:12.344"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.344" endtime="20210205 08:57:12.344"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.345" endtime="20210205 08:57:12.345"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.345" endtime="20210205 08:57:12.345"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.345" endtime="20210205 08:57:12.345"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.345" endtime="20210205 08:57:12.345"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.346" endtime="20210205 08:57:12.346"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.346" endtime="20210205 08:57:12.346"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.347" endtime="20210205 08:57:12.347"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.346" endtime="20210205 08:57:12.347"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.347" endtime="20210205 08:57:12.348"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.347" endtime="20210205 08:57:12.348"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.348" endtime="20210205 08:57:12.348"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.348" endtime="20210205 08:57:12.348"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.348" endtime="20210205 08:57:12.349"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.348" endtime="20210205 08:57:12.349"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.349" endtime="20210205 08:57:12.349"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.349" endtime="20210205 08:57:12.349"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.350" endtime="20210205 08:57:12.350"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.349" endtime="20210205 08:57:12.350"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.350" endtime="20210205 08:57:12.351"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.350" endtime="20210205 08:57:12.351"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.351" endtime="20210205 08:57:12.351"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.351" endtime="20210205 08:57:12.351"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.352" endtime="20210205 08:57:12.352"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.352" endtime="20210205 08:57:12.352"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.353" endtime="20210205 08:57:12.353"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.353" endtime="20210205 08:57:12.353"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.353" endtime="20210205 08:57:12.354"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.353" endtime="20210205 08:57:12.354"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.354" endtime="20210205 08:57:12.354"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.354" endtime="20210205 08:57:12.354"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.354" endtime="20210205 08:57:12.355"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.354" endtime="20210205 08:57:12.355"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.355" endtime="20210205 08:57:12.355"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.355" endtime="20210205 08:57:12.355"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.356" endtime="20210205 08:57:12.356"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.355" endtime="20210205 08:57:12.356"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.356" endtime="20210205 08:57:12.357"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.356" endtime="20210205 08:57:12.357"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.357" endtime="20210205 08:57:12.357"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.357" endtime="20210205 08:57:12.357"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.358" endtime="20210205 08:57:12.358"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.358" endtime="20210205 08:57:12.358"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.358" endtime="20210205 08:57:12.359"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.358" endtime="20210205 08:57:12.359"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.359" endtime="20210205 08:57:12.360"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.359" endtime="20210205 08:57:12.360"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.360" endtime="20210205 08:57:12.360"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.360" endtime="20210205 08:57:12.360"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.361" endtime="20210205 08:57:12.361"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.360" endtime="20210205 08:57:12.361"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${id}"</arg>
<arg>Append To List</arg>
<arg>${useridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.361" endtime="20210205 08:57:12.361"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.361" endtime="20210205 08:57:12.362"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.273" endtime="20210205 08:57:12.362"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${useridlist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 08:57:12.362" level="INFO">Length is 10</msg>
<msg timestamp="20210205 08:57:12.362" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:12.362" endtime="20210205 08:57:12.362"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${cnt}</arg>
<arg>${segmentsize}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.362" endtime="20210205 08:57:12.363"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{useridlist}</var>
</assign>
<msg timestamp="20210205 08:57:12.363" level="INFO">@{useridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.363" endtime="20210205 08:57:12.363"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.272" endtime="20210205 08:57:12.363"></status>
</kw>
<doc>Validate Get All Posts REST endpoint status code, response size and segmentation</doc>
<tags>
<tag>Positive</tag>
</tags>
<status status="PASS" starttime="20210205 08:57:11.940" endtime="20210205 08:57:12.364" critical="yes"></status>
</test>
<test id="s1-t2" name="TC002 VALIDATE GET POST BY ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="APIHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 08:57:12.368" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 08:57:12.367" endtime="20210205 08:57:12.368"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 08:57:12.370" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:12.369" endtime="20210205 08:57:12.370"></status>
</kw>
<msg timestamp="20210205 08:57:12.370" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:12.366" endtime="20210205 08:57:12.370"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>size</arg>
<arg>allposts</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.373" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 08:57:12.372" endtime="20210205 08:57:12.373"></status>
</kw>
<msg timestamp="20210205 08:57:12.374" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 08:57:12.371" endtime="20210205 08:57:12.374"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>user</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${segmentationcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.376" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 08:57:12.375" endtime="20210205 08:57:12.376"></status>
</kw>
<msg timestamp="20210205 08:57:12.376" level="INFO">${segmentationcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:12.374" endtime="20210205 08:57:12.377"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>user</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${singleuserid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.378" level="INFO">${tempvalue} = 3</msg>
<status status="PASS" starttime="20210205 08:57:12.377" endtime="20210205 08:57:12.378"></status>
</kw>
<msg timestamp="20210205 08:57:12.379" level="INFO">${singleuserid} = 3</msg>
<status status="PASS" starttime="20210205 08:57:12.377" endtime="20210205 08:57:12.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.380" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:12.379" endtime="20210205 08:57:12.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>GET_Posts.json</arg>
</arguments>
<msg timestamp="20210205 08:57:12.382" level="INFO">${templatefile} = GET_Posts.json</msg>
<status status="PASS" starttime="20210205 08:57:12.381" endtime="20210205 08:57:12.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.383" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 08:57:12.382" endtime="20210205 08:57:12.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${segmentcnt}</arg>
<arg>${segmentationcount}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.384" level="INFO">${segmentcnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:12.383" endtime="20210205 08:57:12.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${singleuser}</arg>
<arg>${singleuserid}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.384" level="INFO">${singleuser} = 3</msg>
<status status="PASS" starttime="20210205 08:57:12.384" endtime="20210205 08:57:12.384"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.366" endtime="20210205 08:57:12.384"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${allpostcnt}</arg>
</arguments>
<assign>
<var>${allpostnum}</var>
</assign>
<msg timestamp="20210205 08:57:12.385" level="INFO">${allpostnum} = 100</msg>
<status status="PASS" starttime="20210205 08:57:12.385" endtime="20210205 08:57:12.385"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${allpostnum+1} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.403" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:12.402" endtime="20210205 08:57:12.404"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:12.450" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:12.450" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcf1ffd5ca3cb2ea75e01017551082b871612533432; expires=Sun, 07-Mar-21 13:57:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612516849', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '16610', 'cf-request-id': '08141498d400007431f3380000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=GrhmYMTMmQhNduTxkHYDAVAFdtZuObhAiKb5u3zoy9npEZeuy4Vkgre37ug8LRF1JLyIm6YgOnCrdU0tDOo7jU%2Bk8lzD7fEXgYFyIlyUl3j2LNhbY5C02eMiPejv"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23a15e507431-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<msg timestamp="20210205 08:57:12.450" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.404" endtime="20210205 08:57:12.450"></status>
</kw>
<msg timestamp="20210205 08:57:12.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.401" endtime="20210205 08:57:12.451"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.453" endtime="20210205 08:57:12.456"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.452" endtime="20210205 08:57:12.456"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.451" endtime="20210205 08:57:12.456"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.457" endtime="20210205 08:57:12.457"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.456" endtime="20210205 08:57:12.458"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.459" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.458" endtime="20210205 08:57:12.459"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.522" level="INFO">${idvalue} = [1]</msg>
<status status="PASS" starttime="20210205 08:57:12.459" endtime="20210205 08:57:12.522"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:12.523" level="INFO">${responseid} = 1</msg>
<status status="PASS" starttime="20210205 08:57:12.522" endtime="20210205 08:57:12.523"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.523" endtime="20210205 08:57:12.524"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.524" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.524" endtime="20210205 08:57:12.524"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.458" endtime="20210205 08:57:12.524"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.401" endtime="20210205 08:57:12.525"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.526" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:12.526" endtime="20210205 08:57:12.527"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:12.565" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/2 
 path_url=/posts/2 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:12.566" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/2 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=daea98692545d1b4461d513c6820bae171612533432; expires=Sun, 07-Mar-21 13:57:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612529090', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"116-jnDuMpjju89+9j7e0BqkdFsVRjs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4388', 'cf-request-id': '081414994e00003818a50d0000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=5UQjKWsKTGbmXy28lHGasKzVCtswGyV0LGQxFDaS5d9eQPCHF1zS81H%2BGRWVvC0a38zYQeR70F8vi2gwtK%2FuscCoyuYeJ%2BfZgP5d595fNqRCZQaLAx4V86kzourp"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23a218993818-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 2,
  "title": "qui est esse",
  "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
} 
 </msg>
<msg timestamp="20210205 08:57:12.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.527" endtime="20210205 08:57:12.566"></status>
</kw>
<msg timestamp="20210205 08:57:12.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.525" endtime="20210205 08:57:12.566"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.568" endtime="20210205 08:57:12.571"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.567" endtime="20210205 08:57:12.571"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.566" endtime="20210205 08:57:12.571"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.572" endtime="20210205 08:57:12.573"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.571" endtime="20210205 08:57:12.573"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.574" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.574" endtime="20210205 08:57:12.574"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.627" level="INFO">${idvalue} = [2]</msg>
<status status="PASS" starttime="20210205 08:57:12.575" endtime="20210205 08:57:12.627"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:12.628" level="INFO">${responseid} = 2</msg>
<status status="PASS" starttime="20210205 08:57:12.627" endtime="20210205 08:57:12.628"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.629" endtime="20210205 08:57:12.629"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.630" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.630" endtime="20210205 08:57:12.630"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.573" endtime="20210205 08:57:12.630"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.525" endtime="20210205 08:57:12.630"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.631" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:12.631" endtime="20210205 08:57:12.632"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:12.675" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/3 
 path_url=/posts/3 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:12.675" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/3 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9468e65839f0fd80ec0f6a14b84c261c1612533432; expires=Sun, 07-Mar-21 13:57:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612321319', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11b-USacuIw5a/iXAGdNKBvqr/TbMTc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '3045', 'cf-request-id': '08141499b7000074829db87000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mSWutaz9ggnTijoZrzdRSGZWXKBR6867214YZjjl2Av35FktMGOzsr2XpDEAkgoEAvsMU11bo%2FNUtIwf3Sj%2FgmLn%2B11B84MXWEDABj2t4DoxW2O%2BSlGKyWSwHIYH"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23a2bb867482-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 3,
  "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
  "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
} 
 </msg>
<msg timestamp="20210205 08:57:12.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.632" endtime="20210205 08:57:12.676"></status>
</kw>
<msg timestamp="20210205 08:57:12.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.630" endtime="20210205 08:57:12.676"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.677" endtime="20210205 08:57:12.679"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.677" endtime="20210205 08:57:12.679"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.676" endtime="20210205 08:57:12.679"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.679" endtime="20210205 08:57:12.680"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.679" endtime="20210205 08:57:12.680"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.681" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.680" endtime="20210205 08:57:12.681"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.715" level="INFO">${idvalue} = [3]</msg>
<status status="PASS" starttime="20210205 08:57:12.681" endtime="20210205 08:57:12.715"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:12.716" level="INFO">${responseid} = 3</msg>
<status status="PASS" starttime="20210205 08:57:12.715" endtime="20210205 08:57:12.716"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.716" endtime="20210205 08:57:12.716"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.717" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.716" endtime="20210205 08:57:12.717"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.680" endtime="20210205 08:57:12.717"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.630" endtime="20210205 08:57:12.717"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.718" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:12.717" endtime="20210205 08:57:12.718"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:12.803" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/4 
 path_url=/posts/4 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:12.803" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/4 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5ef8dedf46f8fc2f1c2b91199153994e1612533432; expires=Sun, 07-Mar-21 13:57:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1610211040', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10e-HqG77o1RAmatkSwR36f4+Io6g1E"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '0814149a090000f468323d8000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=pOBOnl3hGi%2BnwbTPebqs1c4NwWi5Qyx2PELmmE8sO10nK3yj8XnNGvU1vr5qIK2c6w9gmJhDtI0zLREaEOoYOeIuulLXA4Fgm8%2Bc0Xp58cseo0Un8KWOaGgx1s82"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23a34d36f468-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 4,
  "title": "eum et est occaecati",
  "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
} 
 </msg>
<msg timestamp="20210205 08:57:12.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.718" endtime="20210205 08:57:12.803"></status>
</kw>
<msg timestamp="20210205 08:57:12.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.717" endtime="20210205 08:57:12.804"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.805" endtime="20210205 08:57:12.807"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.804" endtime="20210205 08:57:12.807"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.804" endtime="20210205 08:57:12.807"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.807" endtime="20210205 08:57:12.808"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.807" endtime="20210205 08:57:12.808"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.809" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.808" endtime="20210205 08:57:12.809"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.838" level="INFO">${idvalue} = [4]</msg>
<status status="PASS" starttime="20210205 08:57:12.809" endtime="20210205 08:57:12.839"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:12.840" level="INFO">${responseid} = 4</msg>
<status status="PASS" starttime="20210205 08:57:12.839" endtime="20210205 08:57:12.840"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.840" endtime="20210205 08:57:12.841"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.841" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.841" endtime="20210205 08:57:12.841"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.808" endtime="20210205 08:57:12.842"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.717" endtime="20210205 08:57:12.842"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.843" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:12.843" endtime="20210205 08:57:12.844"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:12.917" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/5 
 path_url=/posts/5 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:12.917" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/5 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0359850bfab3867bc5fcce2a3f60fb741612533432; expires=Sun, 07-Mar-21 13:57:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612053918', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-IivojO0CtPZmcMK0iydTbsfG7Wc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '0814149a870000295373809000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=0Zq98pYllUoattdpZEGqdjqmGq7T8nAuT1tKvjRgj%2BFfHBqqKArt7nclohYpHCUThgpvMAcggu6mXMRkjuHX5%2BhNPT7KDfrkwPPxkL3Wq7kOkqZpoj9V7AhPOHD4"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23a40d8e2953-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 5,
  "title": "nesciunt quas odio",
  "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
} 
 </msg>
<msg timestamp="20210205 08:57:12.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.844" endtime="20210205 08:57:12.918"></status>
</kw>
<msg timestamp="20210205 08:57:12.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.842" endtime="20210205 08:57:12.918"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.921" endtime="20210205 08:57:12.923"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.920" endtime="20210205 08:57:12.923"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.918" endtime="20210205 08:57:12.924"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.925" endtime="20210205 08:57:12.926"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.924" endtime="20210205 08:57:12.926"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.927" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.927" endtime="20210205 08:57:12.927"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.992" level="INFO">${idvalue} = [5]</msg>
<status status="PASS" starttime="20210205 08:57:12.928" endtime="20210205 08:57:12.992"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:12.993" level="INFO">${responseid} = 5</msg>
<status status="PASS" starttime="20210205 08:57:12.993" endtime="20210205 08:57:12.993"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:12.994" endtime="20210205 08:57:12.994"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:12.995" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:12.994" endtime="20210205 08:57:12.995"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.926" endtime="20210205 08:57:12.995"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.842" endtime="20210205 08:57:12.996"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:12.997" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:12.997" endtime="20210205 08:57:12.998"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:13.038" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/6 
 path_url=/posts/6 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:13.039" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/6 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d10fa99ac9d54c9dd6c315acdc3526bf41612533433; expires=Sun, 07-Mar-21 13:57:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612531790', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-kxIuVC3UpKrGIRfIBmsZMsJaaiA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '1680', 'cf-request-id': '0814149b22000009a834a1e000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2FyCqwUKGyBoJ1nFKZKjU1U5j5gi2YZLjS%2BYTcZ1YtHDWShA6UWoOR1RD69XMZAoDtaFwiyCLUW0DWM%2BtQPj0VlvmvLlEQGxeMSJbgul1KfHK9jYvpD%2FQA2Y7zu67"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23a5080809a8-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 6,
  "title": "dolorem eum magni eos aperiam quia",
  "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
} 
 </msg>
<msg timestamp="20210205 08:57:13.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.998" endtime="20210205 08:57:13.039"></status>
</kw>
<msg timestamp="20210205 08:57:13.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:12.996" endtime="20210205 08:57:13.039"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:13.040" endtime="20210205 08:57:13.042"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.040" endtime="20210205 08:57:13.042"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.039" endtime="20210205 08:57:13.042"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:13.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.043" endtime="20210205 08:57:13.043"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.042" endtime="20210205 08:57:13.043"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.044" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:13.044" endtime="20210205 08:57:13.044"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.085" level="INFO">${idvalue} = [6]</msg>
<status status="PASS" starttime="20210205 08:57:13.044" endtime="20210205 08:57:13.085"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:13.086" level="INFO">${responseid} = 6</msg>
<status status="PASS" starttime="20210205 08:57:13.086" endtime="20210205 08:57:13.086"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:13.086" endtime="20210205 08:57:13.086"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.087" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:13.086" endtime="20210205 08:57:13.087"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.043" endtime="20210205 08:57:13.087"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.996" endtime="20210205 08:57:13.087"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:13.088" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:13.087" endtime="20210205 08:57:13.088"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:13.149" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/7 
 path_url=/posts/7 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:13.150" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/7 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbf2b08b5f0fa5827b7ed1b02b2c6d73d1612533433; expires=Sun, 07-Mar-21 13:57:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612307332', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-wrK4SLERwov0EbpkNAKTHsvGWBs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '0814149b7e000038716b2a1000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BgTCdDMcnL8UbQ6kZddWNszH6Aoh0P1aX5fexZuMz3btbGDCZKkwFfVvtKHz70Gq%2F3f%2B5SLNms3OoRcYfyKLn%2BY0TF2QwuqcjeHB3NgLYXmJ8sS%2BVLEew4rHLSl9"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23a59ee23871-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 7,
  "title": "magnam facilis autem",
  "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
} 
 </msg>
<msg timestamp="20210205 08:57:13.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.088" endtime="20210205 08:57:13.150"></status>
</kw>
<msg timestamp="20210205 08:57:13.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.087" endtime="20210205 08:57:13.151"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:13.153" endtime="20210205 08:57:13.156"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.152" endtime="20210205 08:57:13.156"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.151" endtime="20210205 08:57:13.156"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:13.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.157" endtime="20210205 08:57:13.158"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.156" endtime="20210205 08:57:13.158"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.159" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:13.159" endtime="20210205 08:57:13.160"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.224" level="INFO">${idvalue} = [7]</msg>
<status status="PASS" starttime="20210205 08:57:13.160" endtime="20210205 08:57:13.224"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:13.225" level="INFO">${responseid} = 7</msg>
<status status="PASS" starttime="20210205 08:57:13.224" endtime="20210205 08:57:13.225"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:13.225" endtime="20210205 08:57:13.226"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.226" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:13.226" endtime="20210205 08:57:13.226"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.158" endtime="20210205 08:57:13.227"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.087" endtime="20210205 08:57:13.227"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:13.229" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:13.228" endtime="20210205 08:57:13.229"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:13.590" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/8 
 path_url=/posts/8 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:13.590" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/8 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d85a7b971eb82d5a9872bd3ce9805d5c61612533433; expires=Sun, 07-Mar-21 13:57:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"104-Yd+P3vUk4gJ20H3qrEyZIqbProI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '0814149c510000cef8ac20d000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=tg2cl3V%2FZAS%2Fc1z70vwEnWDXi5xy15ZrCqVtcWHGq65UV9EEulvgEwBEQYkAesnJel6fvUz2Ri5DMQtrC7%2BFaVd8nYWvOBwF8PoBwzDGNBEDsby%2BYhOZQ46W2ErT"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23a6edf6cef8-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 8,
  "title": "dolorem dolore est ipsam",
  "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
} 
 </msg>
<msg timestamp="20210205 08:57:13.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.230" endtime="20210205 08:57:13.591"></status>
</kw>
<msg timestamp="20210205 08:57:13.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.227" endtime="20210205 08:57:13.591"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:13.594" endtime="20210205 08:57:13.596"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.593" endtime="20210205 08:57:13.597"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.592" endtime="20210205 08:57:13.597"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:13.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.598" endtime="20210205 08:57:13.599"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.597" endtime="20210205 08:57:13.599"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.601" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:13.600" endtime="20210205 08:57:13.601"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.665" level="INFO">${idvalue} = [8]</msg>
<status status="PASS" starttime="20210205 08:57:13.601" endtime="20210205 08:57:13.666"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:13.667" level="INFO">${responseid} = 8</msg>
<status status="PASS" starttime="20210205 08:57:13.666" endtime="20210205 08:57:13.667"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:13.667" endtime="20210205 08:57:13.667"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.668" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:13.668" endtime="20210205 08:57:13.668"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.599" endtime="20210205 08:57:13.668"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.227" endtime="20210205 08:57:13.668"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:13.670" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:13.670" endtime="20210205 08:57:13.671"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:13.868" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/9 
 path_url=/posts/9 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:13.868" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/9 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9662a5c344339c9e4ae2cfeee91f6cc51612533433; expires=Sun, 07-Mar-21 13:57:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '994', 'x-ratelimit-reset': '1612493026', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"f6-mPDZopc4bkupX1TAvUQz4Bpbp5s"', 'via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '0814149dc80000f0fae7194000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=5bTyY2ooQnM8TwWgE%2BFw5UDTr%2B8EuwwhaTa8Cbf07eUHbvCVzuqHtcHSsr1Vciar8S6FjRthWw3bMsG1pVadeHaHJScAFaeAx9RdLNSqD7ohaFxRw4%2Fm5W2Bb%2FKn"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23a9497df0fa-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 9,
  "title": "nesciunt iure omnis dolorem tempora et accusantium",
  "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
} 
 </msg>
<msg timestamp="20210205 08:57:13.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.671" endtime="20210205 08:57:13.869"></status>
</kw>
<msg timestamp="20210205 08:57:13.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.669" endtime="20210205 08:57:13.869"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:13.872" endtime="20210205 08:57:13.874"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.871" endtime="20210205 08:57:13.874"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.870" endtime="20210205 08:57:13.875"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:13.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.876" endtime="20210205 08:57:13.877"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.875" endtime="20210205 08:57:13.878"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.879" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:13.879" endtime="20210205 08:57:13.879"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.943" level="INFO">${idvalue} = [9]</msg>
<status status="PASS" starttime="20210205 08:57:13.879" endtime="20210205 08:57:13.943"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:13.943" level="INFO">${responseid} = 9</msg>
<status status="PASS" starttime="20210205 08:57:13.943" endtime="20210205 08:57:13.943"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:13.944" endtime="20210205 08:57:13.944"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:13.944" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:13.944" endtime="20210205 08:57:13.944"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.878" endtime="20210205 08:57:13.945"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.669" endtime="20210205 08:57:13.945"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:13.946" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:13.945" endtime="20210205 08:57:13.946"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:14.147" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/10 
 path_url=/posts/10 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:14.147" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/10 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5d23ead7dc179338d9520b61a08030c91612533434; expires=Sun, 07-Mar-21 13:57:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1612269749', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d9-iWGkhNuCVU3QUpWXcSkr72qX524"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '0814149ed50000f0d5759c8000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=h2U3jQl92RevNRcB1%2BUrpuS3fKIvgxGTISyFJ%2FKAR1IjCS1ZY7dteLkvR9c%2BNOOl6jtPdRJ9HnYRO8S03dQiCIrzVoPs%2B5d5U6r%2Fi4QLOBLDrW75a1LeKOJOpbnQ"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23aaedeaf0d5-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 10,
  "title": "optio molestias id quia eum",
  "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
} 
 </msg>
<msg timestamp="20210205 08:57:14.148" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.946" endtime="20210205 08:57:14.148"></status>
</kw>
<msg timestamp="20210205 08:57:14.148" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:13.945" endtime="20210205 08:57:14.148"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:14.151" endtime="20210205 08:57:14.154"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.150" endtime="20210205 08:57:14.154"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.149" endtime="20210205 08:57:14.154"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:14.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.156" endtime="20210205 08:57:14.156"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.154" endtime="20210205 08:57:14.156"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.158" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:14.157" endtime="20210205 08:57:14.158"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.221" level="INFO">${idvalue} = [10]</msg>
<status status="PASS" starttime="20210205 08:57:14.158" endtime="20210205 08:57:14.221"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:14.222" level="INFO">${responseid} = 10</msg>
<status status="PASS" starttime="20210205 08:57:14.222" endtime="20210205 08:57:14.222"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:14.223" endtime="20210205 08:57:14.223"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.224" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:14.223" endtime="20210205 08:57:14.224"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.157" endtime="20210205 08:57:14.224"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:13.945" endtime="20210205 08:57:14.224"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:14.226" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:14.226" endtime="20210205 08:57:14.227"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:14.430" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/11 
 path_url=/posts/11 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:14.430" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/11 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d55d9057a970baa997fc2f545d77793a71612533434; expires=Sun, 07-Mar-21 13:57:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '831', 'X-Ratelimit-Reset': '1611749100', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-uIZ0aYbaIRT3eH//+EjRpRGAwRw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '0814149ff20000cf5c04841000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=GeL0FCJ4B3Izj31J1JxME%2BEEEYua%2B00oArN3XBLf04MnmaXW%2FuJOXACMFQwiOYrhiHNXy2fuKSHFL1BXRPbjac2TNWEJ8y2S97rrO5J1V3trDmbfEWzeE0TyFgrk"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23acb8fdcf5c-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 11,
  "title": "et ea vero quia laudantium autem",
  "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
} 
 </msg>
<msg timestamp="20210205 08:57:14.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.227" endtime="20210205 08:57:14.431"></status>
</kw>
<msg timestamp="20210205 08:57:14.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.225" endtime="20210205 08:57:14.431"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:14.434" endtime="20210205 08:57:14.436"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.432" endtime="20210205 08:57:14.437"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.431" endtime="20210205 08:57:14.437"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:14.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.438" endtime="20210205 08:57:14.439"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.437" endtime="20210205 08:57:14.439"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.441" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:14.440" endtime="20210205 08:57:14.441"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.504" level="INFO">${idvalue} = [11]</msg>
<status status="PASS" starttime="20210205 08:57:14.441" endtime="20210205 08:57:14.504"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:14.505" level="INFO">${responseid} = 11</msg>
<status status="PASS" starttime="20210205 08:57:14.504" endtime="20210205 08:57:14.505"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:14.505" endtime="20210205 08:57:14.506"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.506" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:14.506" endtime="20210205 08:57:14.506"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.439" endtime="20210205 08:57:14.507"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.224" endtime="20210205 08:57:14.507"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:14.509" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:14.508" endtime="20210205 08:57:14.510"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:14.622" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/12 
 path_url=/posts/12 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:14.622" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/12 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d058d0225dc3763d7b2d510e5588359521612533434; expires=Sun, 07-Mar-21 13:57:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '813', 'X-Ratelimit-Reset': '1611749100', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fa-Kb6iNtCKEzLRQ8QyZ5zRPuKRNgs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414a10a0000e11e4f011000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=U0KxiSSdYprrLG7brY8f8VRIRuu8v71xkPS32IQR9ktcOa90kYw8eB4ySeu8virFK3L09vBcQBuuGyE3GJSvwwxuBoG9jqf%2FEr6ZW4J0A1gaX3GR2L6l2Hmz6G0d"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23ae7be3e11e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 12,
  "title": "in quibusdam tempore odit est dolorem",
  "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
} 
 </msg>
<msg timestamp="20210205 08:57:14.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.510" endtime="20210205 08:57:14.622"></status>
</kw>
<msg timestamp="20210205 08:57:14.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.507" endtime="20210205 08:57:14.623"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:14.625" endtime="20210205 08:57:14.628"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.624" endtime="20210205 08:57:14.628"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.623" endtime="20210205 08:57:14.629"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:14.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.630" endtime="20210205 08:57:14.630"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.629" endtime="20210205 08:57:14.631"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.632" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:14.632" endtime="20210205 08:57:14.632"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.696" level="INFO">${idvalue} = [12]</msg>
<status status="PASS" starttime="20210205 08:57:14.633" endtime="20210205 08:57:14.696"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:14.697" level="INFO">${responseid} = 12</msg>
<status status="PASS" starttime="20210205 08:57:14.696" endtime="20210205 08:57:14.697"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:14.697" endtime="20210205 08:57:14.697"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.698" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:14.698" endtime="20210205 08:57:14.698"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.631" endtime="20210205 08:57:14.698"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.507" endtime="20210205 08:57:14.698"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:14.701" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:14.701" endtime="20210205 08:57:14.702"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:14.762" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/13 
 path_url=/posts/13 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:14.762" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/13 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d564e7a4b8612a8a9b696179d1ff4d2061612533434; expires=Sun, 07-Mar-21 13:57:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '796', 'X-Ratelimit-Reset': '1611749100', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"150-jmPMxXQIZLCEEVRunU0Zippecws"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414a1cc0000032308a2c000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2FZLeTtNOMdLwhho7FV0Eg4imOfAJiotuTqgaW2VDoW%2B6Eft0b5wXwISsKhQWyBlecwzRM3UYHvCX8fzTe%2FxaYWD7ajI2L7AzUylVKxJ0xXD3h4QGdrWXe5ojGoud"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23afaabb0323-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 13,
  "title": "dolorum ut in voluptas mollitia et saepe quo animi",
  "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
} 
 </msg>
<msg timestamp="20210205 08:57:14.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.702" endtime="20210205 08:57:14.763"></status>
</kw>
<msg timestamp="20210205 08:57:14.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.699" endtime="20210205 08:57:14.763"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:14.766" endtime="20210205 08:57:14.768"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.765" endtime="20210205 08:57:14.768"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.764" endtime="20210205 08:57:14.769"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:14.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.770" endtime="20210205 08:57:14.771"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.769" endtime="20210205 08:57:14.771"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.772" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:14.772" endtime="20210205 08:57:14.772"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.835" level="INFO">${idvalue} = [13]</msg>
<status status="PASS" starttime="20210205 08:57:14.773" endtime="20210205 08:57:14.836"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:14.837" level="INFO">${responseid} = 13</msg>
<status status="PASS" starttime="20210205 08:57:14.836" endtime="20210205 08:57:14.837"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:14.837" endtime="20210205 08:57:14.838"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:14.838" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:14.838" endtime="20210205 08:57:14.839"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.771" endtime="20210205 08:57:14.839"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.699" endtime="20210205 08:57:14.839"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:14.841" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:14.840" endtime="20210205 08:57:14.841"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:14.993" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/14 
 path_url=/posts/14 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:14.993" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/14 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d485b7f08aa7108bffe08e55caef413b81612533435; expires=Sun, 07-Mar-21 13:57:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '779', 'X-Ratelimit-Reset': '1611749100', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e6-a5waiJMRxEr5D9vgRbpDZ2ofS4U"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414a2aa000038535ba29000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ZCeiSSYv55Wo5MXve33ph%2BrOB8kugMqfbEubWbsUAvGz6JQKdOLXZ3DBLpFd8Aei1DIJfSvplRtlJMNwywJo3PQqEbvcIqA16m%2FoPvFFey1sfC17bfExRS79bQAZ"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23b11c843853-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 14,
  "title": "voluptatem eligendi optio",
  "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
} 
 </msg>
<msg timestamp="20210205 08:57:14.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.842" endtime="20210205 08:57:14.994"></status>
</kw>
<msg timestamp="20210205 08:57:14.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:14.839" endtime="20210205 08:57:14.994"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:14.997" endtime="20210205 08:57:15.000"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.996" endtime="20210205 08:57:15.000"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.995" endtime="20210205 08:57:15.000"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:15.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.001" endtime="20210205 08:57:15.002"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.000" endtime="20210205 08:57:15.002"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.004" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:15.003" endtime="20210205 08:57:15.004"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.066" level="INFO">${idvalue} = [14]</msg>
<status status="PASS" starttime="20210205 08:57:15.004" endtime="20210205 08:57:15.066"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:15.067" level="INFO">${responseid} = 14</msg>
<status status="PASS" starttime="20210205 08:57:15.067" endtime="20210205 08:57:15.067"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:15.067" endtime="20210205 08:57:15.068"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.069" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:15.068" endtime="20210205 08:57:15.069"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.002" endtime="20210205 08:57:15.069"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:14.839" endtime="20210205 08:57:15.069"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:15.071" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:15.070" endtime="20210205 08:57:15.071"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:15.209" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/15 
 path_url=/posts/15 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:15.209" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/15 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de4c798a6539fc4eef80eaa661cdbb8531612533435; expires=Sun, 07-Mar-21 13:57:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612193164', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"eb-g42jCAr46rCEFHt8pUWS/uASMcA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414a33c0000384d1b29f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=r2B3OxvAfZgtXSDhEU5g4Hr1oLX4xRS0cmxlLCw0Izo9Rot4x1RuYX%2FA%2BeFTDFZT8uvbq4%2BaqaczUR4SRHWEUZhV5lPXw66nhdTJ7008bu%2BwLBcJmY2WL5P%2FrmTb"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23b1f8f9384d-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 15,
  "title": "eveniet quod temporibus",
  "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
} 
 </msg>
<msg timestamp="20210205 08:57:15.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.072" endtime="20210205 08:57:15.210"></status>
</kw>
<msg timestamp="20210205 08:57:15.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.070" endtime="20210205 08:57:15.210"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:15.213" endtime="20210205 08:57:15.216"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.212" endtime="20210205 08:57:15.216"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.211" endtime="20210205 08:57:15.216"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:15.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.217" endtime="20210205 08:57:15.218"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.216" endtime="20210205 08:57:15.218"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.220" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:15.219" endtime="20210205 08:57:15.220"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.281" level="INFO">${idvalue} = [15]</msg>
<status status="PASS" starttime="20210205 08:57:15.220" endtime="20210205 08:57:15.281"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:15.282" level="INFO">${responseid} = 15</msg>
<status status="PASS" starttime="20210205 08:57:15.281" endtime="20210205 08:57:15.282"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:15.282" endtime="20210205 08:57:15.283"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.283" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:15.283" endtime="20210205 08:57:15.284"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.218" endtime="20210205 08:57:15.284"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.069" endtime="20210205 08:57:15.284"></status>
</kw>
<kw name="${i} = 16" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:15.286" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:15.285" endtime="20210205 08:57:15.286"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:15.476" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/16 
 path_url=/posts/16 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:15.476" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/16 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de6e6fda90588a35618fe02ba6bbcf8a31612533435; expires=Sun, 07-Mar-21 13:57:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"139-Ry5LVphQL/+x/ADbFfrczHgqqDs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414a4140000cf34db39b000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=q1E9XkBM01b3NM8HoHcKS5EfamD6lFGFuCVr2obV2ee0TGXAsceWDfRT282jyGusSeRQeEnW67O2aNjH5vsCXX6DxSi9XgGtyAgYcCR4pKjhqi6oOk1A%2FqF3NPpc"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23b35937cf34-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 16,
  "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
  "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
} 
 </msg>
<msg timestamp="20210205 08:57:15.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.287" endtime="20210205 08:57:15.477"></status>
</kw>
<msg timestamp="20210205 08:57:15.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.284" endtime="20210205 08:57:15.477"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:15.480" endtime="20210205 08:57:15.483"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.479" endtime="20210205 08:57:15.483"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.478" endtime="20210205 08:57:15.483"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:15.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.484" endtime="20210205 08:57:15.485"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.483" endtime="20210205 08:57:15.485"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.487" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:15.486" endtime="20210205 08:57:15.487"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.536" level="INFO">${idvalue} = [16]</msg>
<status status="PASS" starttime="20210205 08:57:15.487" endtime="20210205 08:57:15.536"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:15.536" level="INFO">${responseid} = 16</msg>
<status status="PASS" starttime="20210205 08:57:15.536" endtime="20210205 08:57:15.536"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:15.536" endtime="20210205 08:57:15.537"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.537" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:15.537" endtime="20210205 08:57:15.537"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.485" endtime="20210205 08:57:15.537"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.284" endtime="20210205 08:57:15.537"></status>
</kw>
<kw name="${i} = 17" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:15.538" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:15.538" endtime="20210205 08:57:15.538"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:15.594" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/17 
 path_url=/posts/17 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:15.595" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/17 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df046c44d6a7ae3ce63884645eb5928fa1612533435; expires=Sun, 07-Mar-21 13:57:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '967', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-Y7y9zgdEq0WndoXZmQZBsN4+z14"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414a50b00000316b8a03000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Yujb4x8MI283381LLqOH99ihLllPbsRs5zdYylaSKddiXVhuf8ozQCfyyulVbBcikzXOxdhyW5f36uZ3qzWQZ2YbnV%2BLr8m5XmZbhQGnF9BE%2FX0CjFvAupAiMCwI"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23b4de840316-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 17,
  "title": "fugit voluptas sed molestias voluptatem provident",
  "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
} 
 </msg>
<msg timestamp="20210205 08:57:15.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.538" endtime="20210205 08:57:15.595"></status>
</kw>
<msg timestamp="20210205 08:57:15.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.537" endtime="20210205 08:57:15.596"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:15.599" endtime="20210205 08:57:15.603"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.597" endtime="20210205 08:57:15.603"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.596" endtime="20210205 08:57:15.603"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:15.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.605" endtime="20210205 08:57:15.606"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.604" endtime="20210205 08:57:15.606"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.608" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:15.608" endtime="20210205 08:57:15.608"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.658" level="INFO">${idvalue} = [17]</msg>
<status status="PASS" starttime="20210205 08:57:15.609" endtime="20210205 08:57:15.658"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:15.658" level="INFO">${responseid} = 17</msg>
<status status="PASS" starttime="20210205 08:57:15.658" endtime="20210205 08:57:15.658"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:15.658" endtime="20210205 08:57:15.659"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.659" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:15.659" endtime="20210205 08:57:15.659"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.607" endtime="20210205 08:57:15.659"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.537" endtime="20210205 08:57:15.659"></status>
</kw>
<kw name="${i} = 18" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:15.660" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:15.660" endtime="20210205 08:57:15.661"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:15.826" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/18 
 path_url=/posts/18 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:15.826" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/18 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da555a93c4e04be2a0574f53d3a31f0771612533435; expires=Sun, 07-Mar-21 13:57:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '950', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d6-gBDS8x9CZAqgdjWUPWV0jWIQ7ps"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414a5cf0000f9f74fa06000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2Bhg69ZwXyd28waPVIceA0m8DivBHeXxdwaNhUen4xMfbQKsqqJsM8dUvHE83YwGpfTPKbmk4lV2qOzwutSc3cA8ANTf0k0CkKn7FPIjJBNXBDY1Sj%2FjXt2%2Bontoq"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23b61a0df9f7-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 18,
  "title": "voluptate et itaque vero tempora molestiae",
  "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
} 
 </msg>
<msg timestamp="20210205 08:57:15.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.661" endtime="20210205 08:57:15.827"></status>
</kw>
<msg timestamp="20210205 08:57:15.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.659" endtime="20210205 08:57:15.827"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:15.830" endtime="20210205 08:57:15.833"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.829" endtime="20210205 08:57:15.833"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.828" endtime="20210205 08:57:15.833"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:15.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.835" endtime="20210205 08:57:15.835"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.834" endtime="20210205 08:57:15.835"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.837" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:15.836" endtime="20210205 08:57:15.837"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.899" level="INFO">${idvalue} = [18]</msg>
<status status="PASS" starttime="20210205 08:57:15.837" endtime="20210205 08:57:15.899"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:15.900" level="INFO">${responseid} = 18</msg>
<status status="PASS" starttime="20210205 08:57:15.899" endtime="20210205 08:57:15.900"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:15.900" endtime="20210205 08:57:15.901"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:15.902" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:15.901" endtime="20210205 08:57:15.902"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.836" endtime="20210205 08:57:15.902"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.659" endtime="20210205 08:57:15.902"></status>
</kw>
<kw name="${i} = 19" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:15.904" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:15.903" endtime="20210205 08:57:15.904"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:16.060" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/19 
 path_url=/posts/19 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:16.060" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/19 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d6f65a185357c233d54b4c1ca8c8a10961612533436; expires=Sun, 07-Mar-21 13:57:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '933', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f5-6MONAVAj01S9sHCgIVhhm8kT8bk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414a6d800002922db18a000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=5if29axklRdVtWUkWv4jDUne%2BzlZ8Isrnr2CxyKwrpCTiHoUs11wc9ciS5IrWkb6wyxbZA48LNul0cw0ffp%2BejmQFhOw%2F%2FBcw62GnkOVQyL2M0sJhZl8fTOCPudh"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23b7bf792922-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 19,
  "title": "adipisci placeat illum aut reiciendis qui",
  "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
} 
 </msg>
<msg timestamp="20210205 08:57:16.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.904" endtime="20210205 08:57:16.060"></status>
</kw>
<msg timestamp="20210205 08:57:16.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:15.902" endtime="20210205 08:57:16.061"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:16.064" endtime="20210205 08:57:16.066"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.062" endtime="20210205 08:57:16.066"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.061" endtime="20210205 08:57:16.067"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:16.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.068" endtime="20210205 08:57:16.069"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.067" endtime="20210205 08:57:16.069"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.070" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:16.070" endtime="20210205 08:57:16.070"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.133" level="INFO">${idvalue} = [19]</msg>
<status status="PASS" starttime="20210205 08:57:16.071" endtime="20210205 08:57:16.133"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:16.134" level="INFO">${responseid} = 19</msg>
<status status="PASS" starttime="20210205 08:57:16.133" endtime="20210205 08:57:16.134"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:16.134" endtime="20210205 08:57:16.134"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.135" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:16.135" endtime="20210205 08:57:16.135"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.069" endtime="20210205 08:57:16.135"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:15.902" endtime="20210205 08:57:16.135"></status>
</kw>
<kw name="${i} = 20" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:16.137" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:16.137" endtime="20210205 08:57:16.138"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:16.323" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/20 
 path_url=/posts/20 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:16.323" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/20 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dac7380d14476ffc515143bea43034dfb1612533436; expires=Sun, 07-Mar-21 13:57:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '990', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-B2D4HCXMgAW5NzE2tV3HVA4JP6M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414a7d80000387deb915000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=wYLc88jYdK7LfmafusWlwyExvyg9DszELnhGQ8an7NqOXPKNBQhgMbVLe46rCKocAXYJ5hdW0QQnJL%2FDu7zi5443yLgO%2FUsVMQ0%2FbG%2BMlq3Bc9WJMxZ3KOY8s91W"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23b95d59387d-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 20,
  "title": "doloribus ad provident suscipit at",
  "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
} 
 </msg>
<msg timestamp="20210205 08:57:16.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.138" endtime="20210205 08:57:16.324"></status>
</kw>
<msg timestamp="20210205 08:57:16.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.136" endtime="20210205 08:57:16.324"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:16.327" endtime="20210205 08:57:16.330"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.326" endtime="20210205 08:57:16.330"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.325" endtime="20210205 08:57:16.330"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:16.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.332" endtime="20210205 08:57:16.333"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.330" endtime="20210205 08:57:16.333"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.334" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:16.334" endtime="20210205 08:57:16.334"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.398" level="INFO">${idvalue} = [20]</msg>
<status status="PASS" starttime="20210205 08:57:16.335" endtime="20210205 08:57:16.398"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:16.399" level="INFO">${responseid} = 20</msg>
<status status="PASS" starttime="20210205 08:57:16.398" endtime="20210205 08:57:16.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:16.399" endtime="20210205 08:57:16.400"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.400" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:16.400" endtime="20210205 08:57:16.400"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.333" endtime="20210205 08:57:16.401"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.136" endtime="20210205 08:57:16.401"></status>
</kw>
<kw name="${i} = 21" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:16.402" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:16.402" endtime="20210205 08:57:16.403"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:16.562" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/21 
 path_url=/posts/21 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:16.562" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/21 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d870355f5e0b1aa0966c3bfba48cf70c81612533436; expires=Sun, 07-Mar-21 13:57:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612531910', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"117-mvqE9pMkp/BxthnOAO6lQoihz2M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '1577', 'cf-request-id': '081414a8e600003878858f5000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=k%2B15%2B4Mf%2FH898HL24LAdXpNRbMJKwFrFN9q9CqBuf6rikR%2FCV960q7gGUK%2Fgg8rsM5b%2BZhwBVMtHNXZLYYigeaOyB%2Fr%2BPEMqwYyFp8CVlVCJ0f8QNw8Djck9u2Ff"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23bb0a113878-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 21,
  "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
  "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
} 
 </msg>
<msg timestamp="20210205 08:57:16.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.403" endtime="20210205 08:57:16.563"></status>
</kw>
<msg timestamp="20210205 08:57:16.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.401" endtime="20210205 08:57:16.563"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:16.565" endtime="20210205 08:57:16.568"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.564" endtime="20210205 08:57:16.568"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.563" endtime="20210205 08:57:16.569"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:16.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.570" endtime="20210205 08:57:16.570"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.569" endtime="20210205 08:57:16.571"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.572" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:16.572" endtime="20210205 08:57:16.572"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.619" level="INFO">${idvalue} = [21]</msg>
<status status="PASS" starttime="20210205 08:57:16.573" endtime="20210205 08:57:16.619"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:16.619" level="INFO">${responseid} = 21</msg>
<status status="PASS" starttime="20210205 08:57:16.619" endtime="20210205 08:57:16.619"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:16.619" endtime="20210205 08:57:16.619"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.620" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:16.620" endtime="20210205 08:57:16.620"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.571" endtime="20210205 08:57:16.620"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.401" endtime="20210205 08:57:16.620"></status>
</kw>
<kw name="${i} = 22" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:16.621" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:16.620" endtime="20210205 08:57:16.621"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:16.800" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/22 
 path_url=/posts/22 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:16.800" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/22 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dce3cbfd4c8dba1fb521a237818c6ee1b1612533436; expires=Sun, 07-Mar-21 13:57:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '882', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e6-PXw6heQCz2Yay/FrkPvuks+op8Y"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414a953000074a74ebe3000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2B9rC3hFVt6IvbjzgfJwy%2Fni653asJFtZeN9bnT8H16CF7yJc9RMOzNfXk%2FXSTfbuWx8Q6jzju4sdrhw%2BL4xuJFIt8tDbZk1tF3j7hZ8%2BQfMDIZH1uhkjVOBKel1F"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23bbbdf374a7-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 22,
  "title": "dolor sint quo a velit explicabo quia nam",
  "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
} 
 </msg>
<msg timestamp="20210205 08:57:16.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.621" endtime="20210205 08:57:16.801"></status>
</kw>
<msg timestamp="20210205 08:57:16.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.620" endtime="20210205 08:57:16.801"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:16.803" endtime="20210205 08:57:16.806"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.802" endtime="20210205 08:57:16.806"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.802" endtime="20210205 08:57:16.807"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:16.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.808" endtime="20210205 08:57:16.809"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.807" endtime="20210205 08:57:16.809"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.810" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:16.810" endtime="20210205 08:57:16.810"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.871" level="INFO">${idvalue} = [22]</msg>
<status status="PASS" starttime="20210205 08:57:16.811" endtime="20210205 08:57:16.872"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:16.873" level="INFO">${responseid} = 22</msg>
<status status="PASS" starttime="20210205 08:57:16.872" endtime="20210205 08:57:16.873"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:16.873" endtime="20210205 08:57:16.874"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:16.874" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:16.874" endtime="20210205 08:57:16.874"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.809" endtime="20210205 08:57:16.874"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.620" endtime="20210205 08:57:16.875"></status>
</kw>
<kw name="${i} = 23" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:16.876" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:16.876" endtime="20210205 08:57:16.877"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:17.067" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/23 
 path_url=/posts/23 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:17.067" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/23 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de533b3bd74ff911277422827975ca3681612533437; expires=Sun, 07-Mar-21 13:57:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '865', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-2cknVyBv5gWr1s/pxvkFBL7N/38"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414aa4f00002a63108a6000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=9qlbr4VB%2Fj8itiFdjSwJg5qDkeNxb%2BwpbZS8U%2F0A0u2XJb9DPOWcAn8%2BshA0wo76jNH8ysA9omY3e%2FnGqJg5kS2yIQ8L40dDHQAa0qR11OzBzf02uQeA1ScVgd3R"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23bd4ee32a63-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 23,
  "title": "maxime id vitae nihil numquam",
  "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
} 
 </msg>
<msg timestamp="20210205 08:57:17.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.877" endtime="20210205 08:57:17.068"></status>
</kw>
<msg timestamp="20210205 08:57:17.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:16.875" endtime="20210205 08:57:17.068"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:17.071" endtime="20210205 08:57:17.073"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.070" endtime="20210205 08:57:17.074"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.069" endtime="20210205 08:57:17.074"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:17.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.075" endtime="20210205 08:57:17.076"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.074" endtime="20210205 08:57:17.076"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.077" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:17.077" endtime="20210205 08:57:17.077"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.139" level="INFO">${idvalue} = [23]</msg>
<status status="PASS" starttime="20210205 08:57:17.078" endtime="20210205 08:57:17.139"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:17.140" level="INFO">${responseid} = 23</msg>
<status status="PASS" starttime="20210205 08:57:17.139" endtime="20210205 08:57:17.140"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:17.140" endtime="20210205 08:57:17.141"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.141" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:17.141" endtime="20210205 08:57:17.142"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.076" endtime="20210205 08:57:17.142"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:16.875" endtime="20210205 08:57:17.142"></status>
</kw>
<kw name="${i} = 24" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:17.144" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:17.143" endtime="20210205 08:57:17.145"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:17.331" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/24 
 path_url=/posts/24 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:17.331" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/24 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dba304c05e1a7a250372b3e5ae1cda6961612533437; expires=Sun, 07-Mar-21 13:57:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '848', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f3-ifVym0pMyH3QE/zD+bJosWWZ/xY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414ab5600000dc68b1a6000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ljRt9Ezr6Vbm5i3YC7rt%2FC%2BvuSRl53hCxx9Dm8ls4bOlU0I6F7G1lTlezE9eSVEKpivjRgy7qlVa0qkYMstkjC170E1wfIM9034oIeKAjl2JEPdEduBWMAxR%2BaRe"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23bef8270dc6-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 24,
  "title": "autem hic labore sunt dolores incidunt",
  "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
} 
 </msg>
<msg timestamp="20210205 08:57:17.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.145" endtime="20210205 08:57:17.332"></status>
</kw>
<msg timestamp="20210205 08:57:17.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.142" endtime="20210205 08:57:17.332"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:17.335" endtime="20210205 08:57:17.338"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.334" endtime="20210205 08:57:17.338"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.333" endtime="20210205 08:57:17.338"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:17.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.339" endtime="20210205 08:57:17.340"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.338" endtime="20210205 08:57:17.340"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.342" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:17.341" endtime="20210205 08:57:17.342"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.375" level="INFO">${idvalue} = [24]</msg>
<status status="PASS" starttime="20210205 08:57:17.342" endtime="20210205 08:57:17.375"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:17.376" level="INFO">${responseid} = 24</msg>
<status status="PASS" starttime="20210205 08:57:17.375" endtime="20210205 08:57:17.376"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:17.376" endtime="20210205 08:57:17.376"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.376" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:17.376" endtime="20210205 08:57:17.376"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.340" endtime="20210205 08:57:17.376"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.142" endtime="20210205 08:57:17.376"></status>
</kw>
<kw name="${i} = 25" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:17.377" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:17.377" endtime="20210205 08:57:17.378"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:17.448" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/25 
 path_url=/posts/25 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:17.448" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/25 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3e6d89609cf46cc7111ccdfb9446e3061612533437; expires=Sun, 07-Mar-21 13:57:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '831', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ed-5nZjsj4lJ1lY/Chj2v9voa/MRVw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414ac450000ea6ee09e9000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Fu2KJQQ2KRe0SklX%2BrzIVcgUCddTRWP4QFsFAAZZGW3BooDCw1ZJ2bjgXSX%2FRKJI8SenOQwPXhcrhMfmO9qgp2XaeA5S1wAAKpCQmSD68%2B6uZJm4va5zBW0xiOU5"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23c068b0ea6e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 25,
  "title": "rem alias distinctio quo quis",
  "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
} 
 </msg>
<msg timestamp="20210205 08:57:17.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.378" endtime="20210205 08:57:17.449"></status>
</kw>
<msg timestamp="20210205 08:57:17.450" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.377" endtime="20210205 08:57:17.450"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:17.452" endtime="20210205 08:57:17.455"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.451" endtime="20210205 08:57:17.455"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.450" endtime="20210205 08:57:17.455"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:17.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.456" endtime="20210205 08:57:17.457"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.455" endtime="20210205 08:57:17.457"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.459" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:17.458" endtime="20210205 08:57:17.459"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.494" level="INFO">${idvalue} = [25]</msg>
<status status="PASS" starttime="20210205 08:57:17.459" endtime="20210205 08:57:17.494"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:17.495" level="INFO">${responseid} = 25</msg>
<status status="PASS" starttime="20210205 08:57:17.495" endtime="20210205 08:57:17.495"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:17.495" endtime="20210205 08:57:17.495"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.495" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:17.495" endtime="20210205 08:57:17.495"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.458" endtime="20210205 08:57:17.496"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.377" endtime="20210205 08:57:17.496"></status>
</kw>
<kw name="${i} = 26" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:17.496" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:17.496" endtime="20210205 08:57:17.497"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:17.649" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/26 
 path_url=/posts/26 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:17.649" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/26 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de8a78e950f101b7c8a30f140e1f435251612533437; expires=Sun, 07-Mar-21 13:57:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '814', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"103-nvdlqF1XCHpBd3+QuyEzLJ0DKRU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414ad100000c1a291178000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2FPFcXlZyMmSlBgOr4kW%2FxYM%2FvKCku4N44%2FrnRin6HitBXvJhiUGu%2BsOXyV7T8jLwOKQRo7DxFes7hNSP6EQcCLxRR%2FjZ81GvWI6R3Ax5vOi%2FcKwmaoNvhSgdIUb8"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23c1babfc1a2-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 26,
  "title": "est et quae odit qui non",
  "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
} 
 </msg>
<msg timestamp="20210205 08:57:17.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.497" endtime="20210205 08:57:17.650"></status>
</kw>
<msg timestamp="20210205 08:57:17.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.496" endtime="20210205 08:57:17.650"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:17.653" endtime="20210205 08:57:17.656"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.652" endtime="20210205 08:57:17.656"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.651" endtime="20210205 08:57:17.656"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:17.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.658" endtime="20210205 08:57:17.658"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.656" endtime="20210205 08:57:17.658"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.660" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:17.659" endtime="20210205 08:57:17.660"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.723" level="INFO">${idvalue} = [26]</msg>
<status status="PASS" starttime="20210205 08:57:17.660" endtime="20210205 08:57:17.723"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:17.724" level="INFO">${responseid} = 26</msg>
<status status="PASS" starttime="20210205 08:57:17.724" endtime="20210205 08:57:17.724"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:17.724" endtime="20210205 08:57:17.725"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.726" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:17.725" endtime="20210205 08:57:17.726"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.659" endtime="20210205 08:57:17.726"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.496" endtime="20210205 08:57:17.726"></status>
</kw>
<kw name="${i} = 27" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:17.728" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:17.727" endtime="20210205 08:57:17.728"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:17.913" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/27 
 path_url=/posts/27 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:17.913" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/27 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd39720e167701db1d1ffdf52979739801612533437; expires=Sun, 07-Mar-21 13:57:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '797', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-qKM2azhXtnWXfnWclKp4KhCN+BA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414ae1800002a6faf0da000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=wa2h2eG8pWmafS0%2FkB%2BqjKrie1F%2FUJZP9G871NXaLHXFL2kA5chaRg3L1MscREv29%2Beb7b%2FOVAmArOHfQl0mFBDJ%2FVuYoeNhYVmSn0Hnipagt5o3xWUDZh%2FxGC6j"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23c35ae12a6f-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 27,
  "title": "quasi id et eos tenetur aut quo autem",
  "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
} 
 </msg>
<msg timestamp="20210205 08:57:17.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.729" endtime="20210205 08:57:17.914"></status>
</kw>
<msg timestamp="20210205 08:57:17.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.726" endtime="20210205 08:57:17.914"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:17.917" endtime="20210205 08:57:17.919"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.916" endtime="20210205 08:57:17.920"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.915" endtime="20210205 08:57:17.920"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:17.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.921" endtime="20210205 08:57:17.922"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.920" endtime="20210205 08:57:17.922"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.923" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:17.923" endtime="20210205 08:57:17.924"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.968" level="INFO">${idvalue} = [27]</msg>
<status status="PASS" starttime="20210205 08:57:17.924" endtime="20210205 08:57:17.968"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:17.969" level="INFO">${responseid} = 27</msg>
<status status="PASS" starttime="20210205 08:57:17.968" endtime="20210205 08:57:17.969"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:17.969" endtime="20210205 08:57:17.969"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:17.969" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:17.969" endtime="20210205 08:57:17.969"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.922" endtime="20210205 08:57:17.969"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.726" endtime="20210205 08:57:17.970"></status>
</kw>
<kw name="${i} = 28" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:17.972" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:17.971" endtime="20210205 08:57:17.972"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:18.127" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/28 
 path_url=/posts/28 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:18.127" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/28 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d051725b80e92342c5b4cffc228f443f31612533438; expires=Sun, 07-Mar-21 13:57:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '780', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f9-AEZ+sXaihdyQslUCCBcxh7QHSIc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414ae91000025ed37a54000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=UX51u2mQkRnVpF5Niy%2BUll8a%2FMBhhioxfgP1sWgK4tbaH1%2Br3RWCDhcbGNMfws2YJifZSqkqhflH8khQqaw2o6UxsieG07Waj9Yv%2BDynHMkMkGeasxen1y6%2BuVrJ"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23c41c9625ed-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 28,
  "title": "delectus ullam et corporis nulla voluptas sequi",
  "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
} 
 </msg>
<msg timestamp="20210205 08:57:18.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.972" endtime="20210205 08:57:18.128"></status>
</kw>
<msg timestamp="20210205 08:57:18.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:17.970" endtime="20210205 08:57:18.128"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:18.131" endtime="20210205 08:57:18.133"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.129" endtime="20210205 08:57:18.134"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.128" endtime="20210205 08:57:18.134"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:18.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.135" endtime="20210205 08:57:18.136"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.134" endtime="20210205 08:57:18.136"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.137" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:18.137" endtime="20210205 08:57:18.138"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.199" level="INFO">${idvalue} = [28]</msg>
<status status="PASS" starttime="20210205 08:57:18.138" endtime="20210205 08:57:18.199"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:18.200" level="INFO">${responseid} = 28</msg>
<status status="PASS" starttime="20210205 08:57:18.200" endtime="20210205 08:57:18.200"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:18.201" endtime="20210205 08:57:18.201"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.202" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:18.201" endtime="20210205 08:57:18.202"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.136" endtime="20210205 08:57:18.202"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:17.970" endtime="20210205 08:57:18.202"></status>
</kw>
<kw name="${i} = 29" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:18.204" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:18.204" endtime="20210205 08:57:18.205"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:18.262" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/29 
 path_url=/posts/29 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:18.262" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/29 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dfb52980bb48826f2ed375abd9b17ede01612533438; expires=Sun, 07-Mar-21 13:57:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612324980', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-s0ld/Dvp7Q01gQ2gs/shmGjHA3Q"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414af7b000037eda8adc000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=6xYFa8KmsxA8QPebrZMPCNyovMgdzxxdPscQSmj9iCjIjmdrKHmzwl4vJYwl033hSoWK58luhqV9IBic033fLITRPpqXH6rdndpGIBCR0wgh62Wq9N57Pf%2FjOcwh"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23c59d8737ed-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 29,
  "title": "iusto eius quod necessitatibus culpa ea",
  "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
} 
 </msg>
<msg timestamp="20210205 08:57:18.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.205" endtime="20210205 08:57:18.263"></status>
</kw>
<msg timestamp="20210205 08:57:18.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.203" endtime="20210205 08:57:18.263"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:18.266" endtime="20210205 08:57:18.268"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.265" endtime="20210205 08:57:18.268"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.263" endtime="20210205 08:57:18.269"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:18.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.270" endtime="20210205 08:57:18.271"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.269" endtime="20210205 08:57:18.271"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.272" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:18.272" endtime="20210205 08:57:18.273"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.371" level="INFO">${idvalue} = [29]</msg>
<status status="PASS" starttime="20210205 08:57:18.273" endtime="20210205 08:57:18.371"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:18.372" level="INFO">${responseid} = 29</msg>
<status status="PASS" starttime="20210205 08:57:18.372" endtime="20210205 08:57:18.372"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:18.372" endtime="20210205 08:57:18.373"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.374" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:18.373" endtime="20210205 08:57:18.374"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.271" endtime="20210205 08:57:18.374"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.203" endtime="20210205 08:57:18.374"></status>
</kw>
<kw name="${i} = 30" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:18.376" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:18.375" endtime="20210205 08:57:18.376"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:18.439" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/30 
 path_url=/posts/30 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:18.439" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/30 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df964864ecb99bc8f9485a575a7fb1c911612533438; expires=Sun, 07-Mar-21 13:57:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '746', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-p/fED6+/tICtAVNeMV6EIhtgIes"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b02c0000cef8950cb000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ND%2Bx2hozA5kzYXD7sh93cZxotSzL8RxywmGMA1LpgwpvkYJejrh8MRBvb6rJ6YGQ%2F8mP5NpMEO9lh7S2cv6oHir95F5exmzHvompIBSJ3m6ttMP9XUROoBsbZHNB"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23c6a80ecef8-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 30,
  "title": "a quo magni similique perferendis",
  "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
} 
 </msg>
<msg timestamp="20210205 08:57:18.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.377" endtime="20210205 08:57:18.440"></status>
</kw>
<msg timestamp="20210205 08:57:18.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.374" endtime="20210205 08:57:18.440"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:18.442" endtime="20210205 08:57:18.445"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.441" endtime="20210205 08:57:18.445"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.440" endtime="20210205 08:57:18.446"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:18.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.447" endtime="20210205 08:57:18.448"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.446" endtime="20210205 08:57:18.448"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.450" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:18.449" endtime="20210205 08:57:18.450"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.511" level="INFO">${idvalue} = [30]</msg>
<status status="PASS" starttime="20210205 08:57:18.450" endtime="20210205 08:57:18.511"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:18.512" level="INFO">${responseid} = 30</msg>
<status status="PASS" starttime="20210205 08:57:18.512" endtime="20210205 08:57:18.512"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:18.513" endtime="20210205 08:57:18.513"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.514" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:18.513" endtime="20210205 08:57:18.514"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.448" endtime="20210205 08:57:18.515"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.374" endtime="20210205 08:57:18.515"></status>
</kw>
<kw name="${i} = 31" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:18.516" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:18.516" endtime="20210205 08:57:18.517"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:18.658" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/31 
 path_url=/posts/31 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:18.658" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/31 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9769e0835d436f43301a5ccbdc6b2b9a1612533438; expires=Sun, 07-Mar-21 13:57:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '729', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"114-fvaKvcE5R6RW/jKcF4ij0mXJXnI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b0b0000073a9e305c000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=nZKM%2BmQI7bUqBLqunBvCLG6wE4eqfQzowJ4eoSc0E46UyK0fqm4c5urepRsvB3QjDZVQmcaxqixWNAAb289YforA%2F%2BCgD6tL2JlAv06u9e87A81oWgIqWAGdleZX"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23c7792b73a9-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 31,
  "title": "ullam ut quidem id aut vel consequuntur",
  "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
} 
 </msg>
<msg timestamp="20210205 08:57:18.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.517" endtime="20210205 08:57:18.658"></status>
</kw>
<msg timestamp="20210205 08:57:18.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.515" endtime="20210205 08:57:18.659"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:18.661" endtime="20210205 08:57:18.664"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.660" endtime="20210205 08:57:18.664"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.659" endtime="20210205 08:57:18.664"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:18.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.666" endtime="20210205 08:57:18.666"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.665" endtime="20210205 08:57:18.666"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.668" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:18.668" endtime="20210205 08:57:18.668"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.720" level="INFO">${idvalue} = [31]</msg>
<status status="PASS" starttime="20210205 08:57:18.668" endtime="20210205 08:57:18.720"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:18.721" level="INFO">${responseid} = 31</msg>
<status status="PASS" starttime="20210205 08:57:18.720" endtime="20210205 08:57:18.721"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:18.721" endtime="20210205 08:57:18.722"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.723" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:18.722" endtime="20210205 08:57:18.723"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.667" endtime="20210205 08:57:18.723"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.515" endtime="20210205 08:57:18.723"></status>
</kw>
<kw name="${i} = 32" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:18.725" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:18.724" endtime="20210205 08:57:18.725"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:18.801" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/32 
 path_url=/posts/32 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:18.801" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/32 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dfb740c75590b1bfe1519fe31051234661612533438; expires=Sun, 07-Mar-21 13:57:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '978', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"118-gU6x6yKuGnLxOVfx4b/csDm80xc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b1820000e0ea6017e000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=6NKh8kQN2BBCRTldF0xsWLIhNPl45tFlzaShA99z3OXYDPCZGCmlkSKH%2BBL71zCNLSK6cEq9Gb9whx1pKKpRkvHMKvhYTR31mKX21B%2FZUNOhVnbGvozKikyUAtmK"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23c8cb74e0ea-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 32,
  "title": "doloremque illum aliquid sunt",
  "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
} 
 </msg>
<msg timestamp="20210205 08:57:18.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.725" endtime="20210205 08:57:18.802"></status>
</kw>
<msg timestamp="20210205 08:57:18.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.723" endtime="20210205 08:57:18.802"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:18.805" endtime="20210205 08:57:18.808"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.803" endtime="20210205 08:57:18.808"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.802" endtime="20210205 08:57:18.808"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:18.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.810" endtime="20210205 08:57:18.810"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.809" endtime="20210205 08:57:18.811"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.812" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:18.812" endtime="20210205 08:57:18.812"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.874" level="INFO">${idvalue} = [32]</msg>
<status status="PASS" starttime="20210205 08:57:18.812" endtime="20210205 08:57:18.874"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:18.875" level="INFO">${responseid} = 32</msg>
<status status="PASS" starttime="20210205 08:57:18.874" endtime="20210205 08:57:18.875"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:18.875" endtime="20210205 08:57:18.876"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.877" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:18.876" endtime="20210205 08:57:18.877"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.811" endtime="20210205 08:57:18.877"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.723" endtime="20210205 08:57:18.877"></status>
</kw>
<kw name="${i} = 33" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:18.879" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:18.878" endtime="20210205 08:57:18.879"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:18.975" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/33 
 path_url=/posts/33 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:18.975" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/33 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4542c64c833f7e68614e71e18f6b4c441612533439; expires=Sun, 07-Mar-21 13:57:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '972', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e4-eJS5AAgYswVFXcpPGUc/6yS0JGs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b23e0000e0b26d2ee000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=2ByrJozSUbENYP3jNs47TbTudTuzLcMwu%2Bj1gEuDR3rXC2z4MMsoOp4o4W2k69JKSRPoZEXv3OKGrZV%2F3EBsAhGQh2tv%2Fem3Y1ipwPQRN55jLuLYxnIyBj%2BMj2Ns"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23c9f81be0b2-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 33,
  "title": "qui explicabo molestiae dolorem",
  "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
} 
 </msg>
<msg timestamp="20210205 08:57:18.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.880" endtime="20210205 08:57:18.976"></status>
</kw>
<msg timestamp="20210205 08:57:18.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.877" endtime="20210205 08:57:18.976"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:18.979" endtime="20210205 08:57:18.981"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.978" endtime="20210205 08:57:18.982"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.977" endtime="20210205 08:57:18.982"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:18.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:18.983" endtime="20210205 08:57:18.984"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.982" endtime="20210205 08:57:18.984"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:18.985" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:18.985" endtime="20210205 08:57:18.985"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.023" level="INFO">${idvalue} = [33]</msg>
<status status="PASS" starttime="20210205 08:57:18.986" endtime="20210205 08:57:19.023"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:19.024" level="INFO">${responseid} = 33</msg>
<status status="PASS" starttime="20210205 08:57:19.023" endtime="20210205 08:57:19.024"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.024" endtime="20210205 08:57:19.024"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.024" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.024" endtime="20210205 08:57:19.024"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.984" endtime="20210205 08:57:19.024"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:18.877" endtime="20210205 08:57:19.024"></status>
</kw>
<kw name="${i} = 34" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.025" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:19.025" endtime="20210205 08:57:19.026"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:19.084" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/34 
 path_url=/posts/34 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:19.084" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/34 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de49e0556cb2f0ba288c5c97b61d6bdd11612533439; expires=Sun, 07-Mar-21 13:57:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '972', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"125-Vy2bCExpJwbgL2QLF7SvYE5QZaQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b2b100000dda6d9a7000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=B%2BLs2N%2BpL5yUn6lcgKkp7SYSlqhLY5IQO9q2D1rmQm%2BcoS%2BsVBFhM0LnOC4SNBIB3Xes9fhupNJ5%2BECTEknj84uqNO3pqhWwRT77L41sdJrfS015%2BKDKcWYkaVty"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23caad6c0dda-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 34,
  "title": "magnam ut rerum iure",
  "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
} 
 </msg>
<msg timestamp="20210205 08:57:19.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.026" endtime="20210205 08:57:19.085"></status>
</kw>
<msg timestamp="20210205 08:57:19.086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.025" endtime="20210205 08:57:19.086"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.089" endtime="20210205 08:57:19.092"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.087" endtime="20210205 08:57:19.092"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.086" endtime="20210205 08:57:19.092"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.093" endtime="20210205 08:57:19.094"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.092" endtime="20210205 08:57:19.094"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.096" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.096" endtime="20210205 08:57:19.096"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.159" level="INFO">${idvalue} = [34]</msg>
<status status="PASS" starttime="20210205 08:57:19.096" endtime="20210205 08:57:19.159"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:19.160" level="INFO">${responseid} = 34</msg>
<status status="PASS" starttime="20210205 08:57:19.159" endtime="20210205 08:57:19.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.160" endtime="20210205 08:57:19.161"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.162" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.161" endtime="20210205 08:57:19.162"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.095" endtime="20210205 08:57:19.162"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.025" endtime="20210205 08:57:19.162"></status>
</kw>
<kw name="${i} = 35" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.164" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:19.163" endtime="20210205 08:57:19.165"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:19.258" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/35 
 path_url=/posts/35 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:19.259" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/35 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d71e49a32e11ca2cc44c60b46e315c28c1612533439; expires=Sun, 07-Mar-21 13:57:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '970', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11b-iEiJpVAW3iKhqKkCM+WpQc2jSXM"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b33f00000df3d5218000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=f14B%2BfLESOkrTbFxkpLOfrJ07euJ9CocDj%2FiNncxSgY%2F6n4QKE6S0izGftc5XBj3PTrGXU96eQQBZsEJRy41%2BHuLw%2FXOkovUvMJGReZNpDAZFXub6qjNh221Y7sa"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23cb98eb0df3-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 35,
  "title": "id nihil consequatur molestias animi provident",
  "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
} 
 </msg>
<msg timestamp="20210205 08:57:19.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.165" endtime="20210205 08:57:19.259"></status>
</kw>
<msg timestamp="20210205 08:57:19.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.162" endtime="20210205 08:57:19.260"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.262" endtime="20210205 08:57:19.265"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.261" endtime="20210205 08:57:19.265"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.260" endtime="20210205 08:57:19.265"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.266" endtime="20210205 08:57:19.267"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.265" endtime="20210205 08:57:19.267"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.268" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.268" endtime="20210205 08:57:19.269"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.299" level="INFO">${idvalue} = [35]</msg>
<status status="PASS" starttime="20210205 08:57:19.269" endtime="20210205 08:57:19.299"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:19.299" level="INFO">${responseid} = 35</msg>
<status status="PASS" starttime="20210205 08:57:19.299" endtime="20210205 08:57:19.299"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.300" endtime="20210205 08:57:19.300"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.300" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.300" endtime="20210205 08:57:19.300"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.267" endtime="20210205 08:57:19.300"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.162" endtime="20210205 08:57:19.300"></status>
</kw>
<kw name="${i} = 36" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.301" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:19.301" endtime="20210205 08:57:19.301"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:19.351" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/36 
 path_url=/posts/36 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:19.352" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/36 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0f905f7a1a86bb43d3c3490dbf5450ef1612533439; expires=Sun, 07-Mar-21 13:57:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '969', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"137-0d4vuWkf3JGVhfhGGDlsOUqEBTg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b3c000000db2d6074000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=FR5spl87BH9SnETXAsOB2%2BhbaF%2B9Br%2FtGFaBuuCmbytOsJXXGjSrj7BErDkHjxpwFmntye5DtTqGK453zbp1Y6heCRjJH0D02BHBseU2t3tNKgwz%2FQXkOIbtqTa7"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23cc6adb0db2-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 36,
  "title": "fuga nam accusamus voluptas reiciendis itaque",
  "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
} 
 </msg>
<msg timestamp="20210205 08:57:19.352" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.301" endtime="20210205 08:57:19.352"></status>
</kw>
<msg timestamp="20210205 08:57:19.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.300" endtime="20210205 08:57:19.353"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.355" endtime="20210205 08:57:19.358"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.354" endtime="20210205 08:57:19.359"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.353" endtime="20210205 08:57:19.359"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.360" endtime="20210205 08:57:19.361"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.359" endtime="20210205 08:57:19.361"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.362" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.362" endtime="20210205 08:57:19.362"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.408" level="INFO">${idvalue} = [36]</msg>
<status status="PASS" starttime="20210205 08:57:19.363" endtime="20210205 08:57:19.409"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:19.409" level="INFO">${responseid} = 36</msg>
<status status="PASS" starttime="20210205 08:57:19.409" endtime="20210205 08:57:19.409"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.409" endtime="20210205 08:57:19.409"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.410" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.409" endtime="20210205 08:57:19.410"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.361" endtime="20210205 08:57:19.410"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.300" endtime="20210205 08:57:19.410"></status>
</kw>
<kw name="${i} = 37" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.410" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:19.410" endtime="20210205 08:57:19.411"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:19.476" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/37 
 path_url=/posts/37 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:19.476" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/37 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de5dfa9fa87b1c901ac946a1b36e41d691612533439; expires=Sun, 07-Mar-21 13:57:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612411377', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10d-xivyKLJTyyTwJlVChjsxbkyN93k"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b43500007419072a3000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=8cYP2Qnusy860vsf7zq5CFjmLoUrzHkMCExd8f6Xax0SZnuo9Ee5%2FpsdN2wxPo1bw%2FzeE8FYaNwlMp%2FBiC1tJwfcct7Q7WcpXtPkNaONI718u%2Fl36O%2ByK%2Bn9bul%2F"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23cd2de37419-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 37,
  "title": "provident vel ut sit ratione est",
  "body": "debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nvoluptates omnis consequatur aut enim officiis in quam qui"
} 
 </msg>
<msg timestamp="20210205 08:57:19.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.411" endtime="20210205 08:57:19.477"></status>
</kw>
<msg timestamp="20210205 08:57:19.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.410" endtime="20210205 08:57:19.477"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.480" endtime="20210205 08:57:19.482"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.479" endtime="20210205 08:57:19.483"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.478" endtime="20210205 08:57:19.483"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.484" endtime="20210205 08:57:19.485"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.483" endtime="20210205 08:57:19.485"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.486" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.486" endtime="20210205 08:57:19.486"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.548" level="INFO">${idvalue} = [37]</msg>
<status status="PASS" starttime="20210205 08:57:19.487" endtime="20210205 08:57:19.548"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:19.549" level="INFO">${responseid} = 37</msg>
<status status="PASS" starttime="20210205 08:57:19.549" endtime="20210205 08:57:19.549"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.550" endtime="20210205 08:57:19.550"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.551" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.550" endtime="20210205 08:57:19.551"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.485" endtime="20210205 08:57:19.551"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.410" endtime="20210205 08:57:19.551"></status>
</kw>
<kw name="${i} = 38" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.553" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:19.552" endtime="20210205 08:57:19.553"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:19.605" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/38 
 path_url=/posts/38 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:19.606" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/38 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d24bde2674ca3b16003ece6ac40095ff61612533439; expires=Sun, 07-Mar-21 13:57:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '967', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"13a-HzjuaEKBfsU2W89T3U0Yxx0R1zE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b4bb0000eaae800cb000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mdw9AEV0c4sjqOM2IJLktOLjQnOFJLIB%2BYizINoDhpvWuIAsEXzOHJEo0hTiU%2Fs76V9NX8HcYnbgDaPkeRihCDYJdk2HKFSfMeskohB64GuXJy81qSeRJeQEZq6Z"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23cdfb40eaae-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 38,
  "title": "explicabo et eos deleniti nostrum ab id repellendus",
  "body": "animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus ea\nrerum repudiandae quia voluptatem delectus fugit aut id quia\nratione optio eos iusto veniam iure"
} 
 </msg>
<msg timestamp="20210205 08:57:19.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.554" endtime="20210205 08:57:19.606"></status>
</kw>
<msg timestamp="20210205 08:57:19.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.551" endtime="20210205 08:57:19.607"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.609" endtime="20210205 08:57:19.612"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.608" endtime="20210205 08:57:19.612"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.607" endtime="20210205 08:57:19.613"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.614" endtime="20210205 08:57:19.614"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.613" endtime="20210205 08:57:19.615"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.617" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.616" endtime="20210205 08:57:19.617"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.680" level="INFO">${idvalue} = [38]</msg>
<status status="PASS" starttime="20210205 08:57:19.617" endtime="20210205 08:57:19.680"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:19.681" level="INFO">${responseid} = 38</msg>
<status status="PASS" starttime="20210205 08:57:19.681" endtime="20210205 08:57:19.681"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.682" endtime="20210205 08:57:19.682"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.683" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.682" endtime="20210205 08:57:19.683"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.615" endtime="20210205 08:57:19.683"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.551" endtime="20210205 08:57:19.683"></status>
</kw>
<kw name="${i} = 39" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.685" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:19.684" endtime="20210205 08:57:19.685"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:19.750" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/39 
 path_url=/posts/39 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:19.750" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/39 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db6b3b25ab26a45213e3e107e4bb918cf1612533439; expires=Sun, 07-Mar-21 13:57:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '966', 'X-Ratelimit-Reset': '1611283708', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11e-UefH5pVf0iJOGuchVJ4dBA7q9aw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b545000073c916ba7000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=JExaes1tpIYtsFHe2DNsJPRM9RyvveTEAXz0bv8DYAytlpPGm0tdGUVJhc%2FZpPEJ6w9fCMldRI1OSeEL5gC%2B7MgqY2dM0D2ad6sZh3r4ZRJ%2FY8%2FevppNMNrEVdjZ"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23ced83273c9-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 39,
  "title": "eos dolorem iste accusantium est eaque quam",
  "body": "corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti asperiores fuga aut\nvoluptas sapiente vel dolore minus voluptatem incidunt ex"
} 
 </msg>
<msg timestamp="20210205 08:57:19.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.686" endtime="20210205 08:57:19.751"></status>
</kw>
<msg timestamp="20210205 08:57:19.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.683" endtime="20210205 08:57:19.751"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.754" endtime="20210205 08:57:19.757"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.753" endtime="20210205 08:57:19.757"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.752" endtime="20210205 08:57:19.757"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.758" endtime="20210205 08:57:19.759"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.757" endtime="20210205 08:57:19.759"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.761" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.761" endtime="20210205 08:57:19.761"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.802" level="INFO">${idvalue} = [39]</msg>
<status status="PASS" starttime="20210205 08:57:19.761" endtime="20210205 08:57:19.802"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:19.802" level="INFO">${responseid} = 39</msg>
<status status="PASS" starttime="20210205 08:57:19.802" endtime="20210205 08:57:19.802"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.802" endtime="20210205 08:57:19.803"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.803" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.803" endtime="20210205 08:57:19.803"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.760" endtime="20210205 08:57:19.803"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.683" endtime="20210205 08:57:19.803"></status>
</kw>
<kw name="${i} = 40" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.804" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:19.804" endtime="20210205 08:57:19.804"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:19.866" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/40 
 path_url=/posts/40 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:19.867" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/40 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2c0c9fd020ee87d1e1a316dc162dc7c51612533439; expires=Sun, 07-Mar-21 13:57:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '966', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f4-I7RG0h0Rd47Iq9Rj+KpOcUnz3RA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b5ba0000f0d9cc27f000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=02%2B%2F2OwCNfJgH1Albg1%2F92qwU4vwBPPrmwRg7XyXjI7jOcnGnHjg90ZX67ZuKHRLggIXtUKOOvF9bdsYyN08Nc1IGTdvGkVXFmt%2FCOKZMpNBTbSb5WOLfL2ILusV"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23cf8b44f0d9-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 40,
  "title": "enim quo cumque",
  "body": "ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptatem iure quasi maxime voluptas nam"
} 
 </msg>
<msg timestamp="20210205 08:57:19.867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.804" endtime="20210205 08:57:19.867"></status>
</kw>
<msg timestamp="20210205 08:57:19.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.803" endtime="20210205 08:57:19.868"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.870" endtime="20210205 08:57:19.873"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.869" endtime="20210205 08:57:19.873"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.868" endtime="20210205 08:57:19.873"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.874" endtime="20210205 08:57:19.875"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.873" endtime="20210205 08:57:19.875"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.877" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.876" endtime="20210205 08:57:19.877"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.940" level="INFO">${idvalue} = [40]</msg>
<status status="PASS" starttime="20210205 08:57:19.877" endtime="20210205 08:57:19.940"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:19.941" level="INFO">${responseid} = 40</msg>
<status status="PASS" starttime="20210205 08:57:19.940" endtime="20210205 08:57:19.941"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:19.941" endtime="20210205 08:57:19.942"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:19.942" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:19.942" endtime="20210205 08:57:19.942"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.876" endtime="20210205 08:57:19.943"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.803" endtime="20210205 08:57:19.943"></status>
</kw>
<kw name="${i} = 41" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:19.945" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:19.944" endtime="20210205 08:57:19.945"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:20.016" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/41 
 path_url=/posts/41 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:20.016" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/41 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da0595ef72678137ea63689ee14c24c521612533440; expires=Sun, 07-Mar-21 13:57:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '964', 'X-Ratelimit-Reset': '1611283708', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"100-Q8c9gEwMpBLWIJsW0KobJ16pdlE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b647000073d11caeb000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=nLZnxPUaa7NUwF0suObDyG8gTzk4fpe1081y3QDvIufQOqNs%2BHhMAb%2BLh9SH%2Fl9mY2bMQ9NpodZCzsXoR%2FMWDJchgvbFjXZYjxqjWXC1nOCb%2BFUfTFp%2BRneNVe8v"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d079a773d1-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 41,
  "title": "non est facere",
  "body": "molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\nnam quidem est ducimus sunt debitis saepe"
} 
 </msg>
<msg timestamp="20210205 08:57:20.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.946" endtime="20210205 08:57:20.017"></status>
</kw>
<msg timestamp="20210205 08:57:20.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:19.943" endtime="20210205 08:57:20.017"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.020" endtime="20210205 08:57:20.023"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.019" endtime="20210205 08:57:20.023"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.018" endtime="20210205 08:57:20.023"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.025" endtime="20210205 08:57:20.026"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.024" endtime="20210205 08:57:20.026"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.027" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.027" endtime="20210205 08:57:20.027"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.075" level="INFO">${idvalue} = [41]</msg>
<status status="PASS" starttime="20210205 08:57:20.028" endtime="20210205 08:57:20.075"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:20.076" level="INFO">${responseid} = 41</msg>
<status status="PASS" starttime="20210205 08:57:20.075" endtime="20210205 08:57:20.076"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.076" endtime="20210205 08:57:20.077"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.078" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.077" endtime="20210205 08:57:20.078"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.026" endtime="20210205 08:57:20.078"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:19.943" endtime="20210205 08:57:20.078"></status>
</kw>
<kw name="${i} = 42" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.081" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:20.080" endtime="20210205 08:57:20.081"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:20.137" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/42 
 path_url=/posts/42 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:20.137" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/42 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d648caf0f077bb86e698e2c6617fe40e81612533440; expires=Sun, 07-Mar-21 13:57:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612405316', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"131-uHddi0mgHIPmmzZ13FEZKREc9o4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '16555', 'cf-request-id': '081414b6d8000003104418c000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=kUN6aXemtItSDLVgWCXcC30hdnwz74TQOE50mB2a%2FFCpw3m%2BqH1dXPSaVqkcZSEbd8hytGqcwD39aZKUJvqK7rO8BfszDQsEoS6fpeo76b4tXrfO3fSidIK0%2BRDg"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d15ac50310-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 42,
  "title": "commodi ullam sint et excepturi error explicabo praesentium voluptas",
  "body": "odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis aliquam sunt sequi nulla dolorem\nnon facere repellendus voluptates quia\nratione harum vitae ut"
} 
 </msg>
<msg timestamp="20210205 08:57:20.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.081" endtime="20210205 08:57:20.138"></status>
</kw>
<msg timestamp="20210205 08:57:20.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.079" endtime="20210205 08:57:20.138"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.141" endtime="20210205 08:57:20.144"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.140" endtime="20210205 08:57:20.144"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.139" endtime="20210205 08:57:20.144"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.146" endtime="20210205 08:57:20.146"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.144" endtime="20210205 08:57:20.147"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.148" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.148" endtime="20210205 08:57:20.148"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.190" level="INFO">${idvalue} = [42]</msg>
<status status="PASS" starttime="20210205 08:57:20.148" endtime="20210205 08:57:20.190"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:20.191" level="INFO">${responseid} = 42</msg>
<status status="PASS" starttime="20210205 08:57:20.191" endtime="20210205 08:57:20.191"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.191" endtime="20210205 08:57:20.191"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.192" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.191" endtime="20210205 08:57:20.192"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.147" endtime="20210205 08:57:20.192"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.079" endtime="20210205 08:57:20.192"></status>
</kw>
<kw name="${i} = 43" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.192" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:20.192" endtime="20210205 08:57:20.193"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:20.255" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/43 
 path_url=/posts/43 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:20.255" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/43 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d909726fab5442293111b3979895225ca1612533440; expires=Sun, 07-Mar-21 13:57:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '965', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"149-CIe5MorMt/6eiC+lMhHtDjhofck"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b74000000dcadc2d2000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2FI4K5efeE0YG3V%2B1cBEU4efERtNwrQ0OvRpiBUAtrtzdN3lmEHQYhCDexkIllnYt8Tbb7Qm9opr1MQcRR5%2B3a66oMZJmKq8XZkjT%2FeDwbpyARF2xaEPshLbk5jb5"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d20d2e0dca-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 43,
  "title": "eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis",
  "body": "similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexercitationem quos nam commodi possimus cum odio nihil nulla\ndolorum exercitationem magnam ex et a et distinctio debitis"
} 
 </msg>
<msg timestamp="20210205 08:57:20.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.193" endtime="20210205 08:57:20.256"></status>
</kw>
<msg timestamp="20210205 08:57:20.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.192" endtime="20210205 08:57:20.256"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.259" endtime="20210205 08:57:20.261"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.258" endtime="20210205 08:57:20.261"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.257" endtime="20210205 08:57:20.262"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.263" endtime="20210205 08:57:20.263"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.262" endtime="20210205 08:57:20.264"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.265" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.265" endtime="20210205 08:57:20.265"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.310" level="INFO">${idvalue} = [43]</msg>
<status status="PASS" starttime="20210205 08:57:20.265" endtime="20210205 08:57:20.310"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:20.310" level="INFO">${responseid} = 43</msg>
<status status="PASS" starttime="20210205 08:57:20.310" endtime="20210205 08:57:20.310"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.310" endtime="20210205 08:57:20.311"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.311" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.311" endtime="20210205 08:57:20.311"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.264" endtime="20210205 08:57:20.311"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.192" endtime="20210205 08:57:20.311"></status>
</kw>
<kw name="${i} = 44" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.312" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:20.312" endtime="20210205 08:57:20.312"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:20.367" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/44 
 path_url=/posts/44 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:20.367" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/44 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de4c20507ab67f95645961fbb850e153d1612533440; expires=Sun, 07-Mar-21 13:57:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '964', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f9-qeEI4xhxJyQd+h1AmBEbRcZU5LE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b7b20000384ef0a55000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=NiV1Ablac41s9xmx2Nj%2FyNPrBPYwpJnriaT13k1dYWSWEYKhvi%2BodPlebSputvKMnfqq1T%2FyY3fljcjDhyN2J6%2FhF78kl7x7JL2kg957dGZgV6f6PRw3UIyuT7Ou"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d2b816384e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 44,
  "title": "optio dolor molestias sit",
  "body": "temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iure quam sed maxime ut distinctio quae"
} 
 </msg>
<msg timestamp="20210205 08:57:20.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.312" endtime="20210205 08:57:20.367"></status>
</kw>
<msg timestamp="20210205 08:57:20.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.311" endtime="20210205 08:57:20.368"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.370" endtime="20210205 08:57:20.373"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.369" endtime="20210205 08:57:20.373"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.368" endtime="20210205 08:57:20.373"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.375" endtime="20210205 08:57:20.375"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.374" endtime="20210205 08:57:20.375"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.377" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.376" endtime="20210205 08:57:20.377"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.425" level="INFO">${idvalue} = [44]</msg>
<status status="PASS" starttime="20210205 08:57:20.377" endtime="20210205 08:57:20.425"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:20.425" level="INFO">${responseid} = 44</msg>
<status status="PASS" starttime="20210205 08:57:20.425" endtime="20210205 08:57:20.425"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.426" endtime="20210205 08:57:20.426"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.426" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.426" endtime="20210205 08:57:20.426"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.376" endtime="20210205 08:57:20.426"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.311" endtime="20210205 08:57:20.426"></status>
</kw>
<kw name="${i} = 45" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.427" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:20.427" endtime="20210205 08:57:20.427"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:20.513" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/45 
 path_url=/posts/45 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:20.514" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/45 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db06081ac54d787b7f798467b8fe873451612533440; expires=Sun, 07-Mar-21 13:57:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '963', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ed-rWKwMfMntbkO4fMbZo0ZEINfI8c"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b8260000ea14e40d8000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Zo5YdRxQVoD2vtdooQJQIaON9yUCJnjSiX3SF3qfArC2x%2FNxFt6gwtme%2FNiX4XHxsHI0sBhPFN4Y%2BqlcaNk9Btta%2B5%2F5RHr5G1qoZokDbk%2FanY6BPu%2FqnElCT2tU"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d37930ea14-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 45,
  "title": "ut numquam possimus omnis eius suscipit laudantium iure",
  "body": "est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum repellendus dolorem autem"
} 
 </msg>
<msg timestamp="20210205 08:57:20.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.427" endtime="20210205 08:57:20.514"></status>
</kw>
<msg timestamp="20210205 08:57:20.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.426" endtime="20210205 08:57:20.515"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.517" endtime="20210205 08:57:20.520"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.516" endtime="20210205 08:57:20.520"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.515" endtime="20210205 08:57:20.520"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.522" endtime="20210205 08:57:20.523"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.521" endtime="20210205 08:57:20.523"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.524" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.524" endtime="20210205 08:57:20.525"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.575" level="INFO">${idvalue} = [45]</msg>
<status status="PASS" starttime="20210205 08:57:20.525" endtime="20210205 08:57:20.575"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:20.576" level="INFO">${responseid} = 45</msg>
<status status="PASS" starttime="20210205 08:57:20.575" endtime="20210205 08:57:20.576"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.576" endtime="20210205 08:57:20.576"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.576" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.576" endtime="20210205 08:57:20.576"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.523" endtime="20210205 08:57:20.577"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.426" endtime="20210205 08:57:20.577"></status>
</kw>
<kw name="${i} = 46" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.577" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:20.577" endtime="20210205 08:57:20.578"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:20.649" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/46 
 path_url=/posts/46 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:20.649" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/46 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc1da557af2cc81125dc452d3f320f0921612533440; expires=Sun, 07-Mar-21 13:57:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '962', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d0-OhfTd80AsvDHSFm9T0Fi068MWcY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b8bb0000ea5e40a7e000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ycMGEGFAJwpnfCUsqsNnjMMbdu0t6d63ccFb%2Fs9ooDOuqekFwWTaAwFqIrq4bj79DfvOdKd5RD2IgjJJ7Yi0aJ92fHBGUYMZqBLeT9YOsZpMZmb3%2FksIwPZu0UMl"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d45aa1ea5e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 46,
  "title": "aut quo modi neque nostrum ducimus",
  "body": "voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid"
} 
 </msg>
<msg timestamp="20210205 08:57:20.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.578" endtime="20210205 08:57:20.650"></status>
</kw>
<msg timestamp="20210205 08:57:20.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.577" endtime="20210205 08:57:20.650"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.653" endtime="20210205 08:57:20.656"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.652" endtime="20210205 08:57:20.656"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.650" endtime="20210205 08:57:20.656"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.658" endtime="20210205 08:57:20.658"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.657" endtime="20210205 08:57:20.659"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.660" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.660" endtime="20210205 08:57:20.660"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.702" level="INFO">${idvalue} = [46]</msg>
<status status="PASS" starttime="20210205 08:57:20.660" endtime="20210205 08:57:20.702"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:20.702" level="INFO">${responseid} = 46</msg>
<status status="PASS" starttime="20210205 08:57:20.702" endtime="20210205 08:57:20.702"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.703" endtime="20210205 08:57:20.703"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.703" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.703" endtime="20210205 08:57:20.703"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.659" endtime="20210205 08:57:20.703"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.577" endtime="20210205 08:57:20.703"></status>
</kw>
<kw name="${i} = 47" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.704" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:20.704" endtime="20210205 08:57:20.704"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:20.759" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/47 
 path_url=/posts/47 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:20.759" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/47 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df0cdb98f7028a72f3624f9d6c86da9911612533440; expires=Sun, 07-Mar-21 13:57:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '956', 'X-Ratelimit-Reset': '1611704501', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"109-s96ANlpy6qW0Y5CU7Xc8LI9hFKE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b9390000746e68a9d000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=DdGExrlD3QTKB1CWq0yQVTLgNYc69xju0KQBog3M%2BGnvwREePFo8rdOQChiHAm%2Fnb0tqzQP20PUWLAxSa8vpZ6vQO7oxgeMeCV1jBpUHOIE4Qqhh2rlw%2FGnrNjvf"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d52c7d746e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 47,
  "title": "quibusdam cumque rem aut deserunt",
  "body": "voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beatae rerum ea iure soluta nostrum\neligendi et voluptate"
} 
 </msg>
<msg timestamp="20210205 08:57:20.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.705" endtime="20210205 08:57:20.760"></status>
</kw>
<msg timestamp="20210205 08:57:20.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.704" endtime="20210205 08:57:20.760"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.762" endtime="20210205 08:57:20.765"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.761" endtime="20210205 08:57:20.765"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.760" endtime="20210205 08:57:20.766"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.767" endtime="20210205 08:57:20.768"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.766" endtime="20210205 08:57:20.768"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.769" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.769" endtime="20210205 08:57:20.770"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.831" level="INFO">${idvalue} = [47]</msg>
<status status="PASS" starttime="20210205 08:57:20.770" endtime="20210205 08:57:20.831"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:20.832" level="INFO">${responseid} = 47</msg>
<status status="PASS" starttime="20210205 08:57:20.831" endtime="20210205 08:57:20.832"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.833" endtime="20210205 08:57:20.833"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.834" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.833" endtime="20210205 08:57:20.834"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.768" endtime="20210205 08:57:20.834"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.704" endtime="20210205 08:57:20.834"></status>
</kw>
<kw name="${i} = 48" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.836" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:20.836" endtime="20210205 08:57:20.836"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:20.910" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/48 
 path_url=/posts/48 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:20.910" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/48 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d006d8908a4ce5e338ad08e0578b07cdc1612533440; expires=Sun, 07-Mar-21 13:57:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '961', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"107-td+hSQ4ZRU5RdRcCg9ZABJ7WwQI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414b9c100002a0f139fc000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=XCZfkQSdwCCwLPR2iYyWURR8TXl75YMASEtu5Cxq0IEYBMgGkJ3mn0Qqp17OfY8zwjRx8VjNAHlLW8m7PmCH2VZDMmJATViAMmPBusmXNvjb3ksq%2BG1I0FtRKDdy"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d6099b2a0f-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 48,
  "title": "ut voluptatem illum ea doloribus itaque eos",
  "body": "voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab deleniti\nlaudantium repellat ad ut et autem reprehenderit"
} 
 </msg>
<msg timestamp="20210205 08:57:20.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.837" endtime="20210205 08:57:20.911"></status>
</kw>
<msg timestamp="20210205 08:57:20.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.835" endtime="20210205 08:57:20.911"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.914" endtime="20210205 08:57:20.916"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.913" endtime="20210205 08:57:20.917"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.911" endtime="20210205 08:57:20.917"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.918" endtime="20210205 08:57:20.919"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.917" endtime="20210205 08:57:20.919"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.921" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.920" endtime="20210205 08:57:20.921"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.987" level="INFO">${idvalue} = [48]</msg>
<status status="PASS" starttime="20210205 08:57:20.921" endtime="20210205 08:57:20.987"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:20.988" level="INFO">${responseid} = 48</msg>
<status status="PASS" starttime="20210205 08:57:20.987" endtime="20210205 08:57:20.988"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:20.988" endtime="20210205 08:57:20.989"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:20.989" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:20.989" endtime="20210205 08:57:20.990"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.919" endtime="20210205 08:57:20.990"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.834" endtime="20210205 08:57:20.990"></status>
</kw>
<kw name="${i} = 49" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:20.992" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:20.991" endtime="20210205 08:57:20.992"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:21.048" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/49 
 path_url=/posts/49 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:21.048" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/49 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0d27f25c6c7581da387ee3db8f85d1c31612533441; expires=Sun, 07-Mar-21 13:57:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612152217', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"112-lKkCmj93YmY7yVGzoTlsICQTIV8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414ba5c00000da67120c000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=s5%2BzqqVE0NY9I9pE2dJ3JMr0xsEtSfhpoTr3r3Q96yJERzW1bRzQP73rdJVEQi3%2FT2dfToBJGpq%2FEyb9pi7il9SomlOxSSovrYkfMtzJBpxvY1xXA8emMzHsth4Z"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d6fc280da6-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 49,
  "title": "laborum non sunt aut ut assumenda perspiciatis voluptas",
  "body": "inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum veritatis non\nquibusdam officiis aspernatur cumque aut commodi aut"
} 
 </msg>
<msg timestamp="20210205 08:57:21.049" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.992" endtime="20210205 08:57:21.049"></status>
</kw>
<msg timestamp="20210205 08:57:21.049" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:20.990" endtime="20210205 08:57:21.049"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.052" endtime="20210205 08:57:21.055"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.051" endtime="20210205 08:57:21.055"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.050" endtime="20210205 08:57:21.055"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.056" endtime="20210205 08:57:21.057"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.055" endtime="20210205 08:57:21.057"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.059" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.058" endtime="20210205 08:57:21.059"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.120" level="INFO">${idvalue} = [49]</msg>
<status status="PASS" starttime="20210205 08:57:21.059" endtime="20210205 08:57:21.120"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:21.122" level="INFO">${responseid} = 49</msg>
<status status="PASS" starttime="20210205 08:57:21.121" endtime="20210205 08:57:21.122"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.122" endtime="20210205 08:57:21.122"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.123" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.123" endtime="20210205 08:57:21.123"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.057" endtime="20210205 08:57:21.123"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:20.990" endtime="20210205 08:57:21.123"></status>
</kw>
<kw name="${i} = 50" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.125" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:21.125" endtime="20210205 08:57:21.126"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:21.193" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/50 
 path_url=/posts/50 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:21.193" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/50 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0d8b1c527e60c6e0e8127a3f782eb5081612533441; expires=Sun, 07-Mar-21 13:57:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612411557', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"14d-XND1VIG+pZHF+RVMSi1awppS1XI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414bae70000ea9aeb8fe000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Eb8P0auozRI5mVYHu5tZ2KXUhNaJSvWRv3QJQWhv84SJcwzW%2Bh52dlUt7sWJ6XiMZC%2BBKb4UKcgM3bdttmxQjHG7pCIsqkZXdl6ibkUe6cC7Es9hmInwERtOoq9M"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d7da35ea9a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 50,
  "title": "repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem",
  "body": "error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi et est et voluptates\nquia distinctio ab amet quaerat molestiae et vitae\nadipisci impedit sequi nesciunt quis consectetur"
} 
 </msg>
<msg timestamp="20210205 08:57:21.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.126" endtime="20210205 08:57:21.194"></status>
</kw>
<msg timestamp="20210205 08:57:21.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.124" endtime="20210205 08:57:21.195"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.197" endtime="20210205 08:57:21.200"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.196" endtime="20210205 08:57:21.200"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.195" endtime="20210205 08:57:21.200"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.201" endtime="20210205 08:57:21.202"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.200" endtime="20210205 08:57:21.202"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.204" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.203" endtime="20210205 08:57:21.204"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.243" level="INFO">${idvalue} = [50]</msg>
<status status="PASS" starttime="20210205 08:57:21.204" endtime="20210205 08:57:21.243"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:21.243" level="INFO">${responseid} = 50</msg>
<status status="PASS" starttime="20210205 08:57:21.243" endtime="20210205 08:57:21.243"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.243" endtime="20210205 08:57:21.244"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.244" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.244" endtime="20210205 08:57:21.244"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.203" endtime="20210205 08:57:21.244"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.124" endtime="20210205 08:57:21.244"></status>
</kw>
<kw name="${i} = 51" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.245" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:21.245" endtime="20210205 08:57:21.245"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:21.306" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/51 
 path_url=/posts/51 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:21.306" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/51 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db39b8c6626807dfe992155f8f8ef6ca81612533441; expires=Sun, 07-Mar-21 13:57:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '958', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ec-KSZLw8b2VyQH0CoS7Z65vSSln78"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414bb5900000093a90a6000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=wzejut06M2sZMIWok0gZh1sFBe6fraVbyuifG67D9kE758x0nk0qwjmYhJjqyV%2BdAqo0GtlHzFFpV0wPo3K2obrj1RdGBYGANdU3%2FUyTUPUcCihOp8KEAw2fVik1"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d88a0f0093-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 51,
  "title": "soluta aliquam aperiam consequatur illo quis voluptas",
  "body": "sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores sit consectetur dolorem"
} 
 </msg>
<msg timestamp="20210205 08:57:21.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.245" endtime="20210205 08:57:21.307"></status>
</kw>
<msg timestamp="20210205 08:57:21.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.244" endtime="20210205 08:57:21.307"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.309" endtime="20210205 08:57:21.312"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.308" endtime="20210205 08:57:21.312"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.307" endtime="20210205 08:57:21.313"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.314" endtime="20210205 08:57:21.314"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.313" endtime="20210205 08:57:21.315"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.316" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.316" endtime="20210205 08:57:21.316"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.379" level="INFO">${idvalue} = [51]</msg>
<status status="PASS" starttime="20210205 08:57:21.316" endtime="20210205 08:57:21.379"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:21.380" level="INFO">${responseid} = 51</msg>
<status status="PASS" starttime="20210205 08:57:21.379" endtime="20210205 08:57:21.380"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.380" endtime="20210205 08:57:21.381"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.381" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.381" endtime="20210205 08:57:21.381"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.315" endtime="20210205 08:57:21.382"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.244" endtime="20210205 08:57:21.382"></status>
</kw>
<kw name="${i} = 52" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.384" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:21.383" endtime="20210205 08:57:21.385"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:21.456" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/52 
 path_url=/posts/52 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:21.456" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/52 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1f5562f6f6cd60795816a129c0a522001612533441; expires=Sun, 07-Mar-21 13:57:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '957', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11d-WmrD+HyY132p7brEZQ1rec9ZC6E"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414bbe7000038593ba2f000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=T5ZmVEsT7BVLgnSSh2%2BBBXd2cz6WNucPh0C3zP13c6haL8PCqA3osAZepToAwbxodl9Uaf64F6gK9rX8tsMqjpmot9kPdLuyL7ncuoTFbE8Ob1VHrix1dPjMXTpf"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23d97fb03859-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 52,
  "title": "qui enim et consequuntur quia animi quis voluptate quibusdam",
  "body": "iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iusto accusantium provident architecto\nsoluta esse reprehenderit qui laborum"
} 
 </msg>
<msg timestamp="20210205 08:57:21.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.385" endtime="20210205 08:57:21.457"></status>
</kw>
<msg timestamp="20210205 08:57:21.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.382" endtime="20210205 08:57:21.457"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.460" endtime="20210205 08:57:21.463"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.459" endtime="20210205 08:57:21.463"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.458" endtime="20210205 08:57:21.463"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.465" endtime="20210205 08:57:21.465"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.463" endtime="20210205 08:57:21.465"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.467" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.466" endtime="20210205 08:57:21.467"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.530" level="INFO">${idvalue} = [52]</msg>
<status status="PASS" starttime="20210205 08:57:21.467" endtime="20210205 08:57:21.530"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:21.531" level="INFO">${responseid} = 52</msg>
<status status="PASS" starttime="20210205 08:57:21.530" endtime="20210205 08:57:21.531"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.531" endtime="20210205 08:57:21.532"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.532" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.532" endtime="20210205 08:57:21.533"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.466" endtime="20210205 08:57:21.533"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.382" endtime="20210205 08:57:21.533"></status>
</kw>
<kw name="${i} = 53" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.535" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:21.534" endtime="20210205 08:57:21.535"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:21.592" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/53 
 path_url=/posts/53 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:21.592" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/53 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d28e3698f96735fce59e68e59b5c99d311612533441; expires=Sun, 07-Mar-21 13:57:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '956', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-X55YQF6JtuvUfAW398enLPpXN4M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414bc82000025208780b000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=B%2BuMFnRWmt5y1uhQpMbU5Vje7BbHqEGLXe94lieHhm5CKia%2F4seZQOZ8hLWOfrBrEQHcO3XF8jyWEdP%2BRfQl6e5CK9Vgs%2Flu%2Bl2FNldlraoEmtyu4HlkZvH8J8bS"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23da6c0d2520-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 53,
  "title": "ut quo aut ducimus alias",
  "body": "minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quidem veritatis sunt non explicabo similique"
} 
 </msg>
<msg timestamp="20210205 08:57:21.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.535" endtime="20210205 08:57:21.593"></status>
</kw>
<msg timestamp="20210205 08:57:21.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.533" endtime="20210205 08:57:21.593"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.595" endtime="20210205 08:57:21.598"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.594" endtime="20210205 08:57:21.598"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.593" endtime="20210205 08:57:21.599"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.600" endtime="20210205 08:57:21.601"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.599" endtime="20210205 08:57:21.601"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.603" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.603" endtime="20210205 08:57:21.604"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.678" level="INFO">${idvalue} = [53]</msg>
<status status="PASS" starttime="20210205 08:57:21.604" endtime="20210205 08:57:21.678"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:21.680" level="INFO">${responseid} = 53</msg>
<status status="PASS" starttime="20210205 08:57:21.679" endtime="20210205 08:57:21.680"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.681" endtime="20210205 08:57:21.682"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.682" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.682" endtime="20210205 08:57:21.682"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.601" endtime="20210205 08:57:21.683"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.533" endtime="20210205 08:57:21.683"></status>
</kw>
<kw name="${i} = 54" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.685" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:21.684" endtime="20210205 08:57:21.685"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:21.747" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/54 
 path_url=/posts/54 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:21.747" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/54 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcd685fd5592337e5427396a7a7ad3c981612533441; expires=Sun, 07-Mar-21 13:57:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '955', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-/rMACUfvajsqfpLr5SV6d7Kh/pA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414bd140000263cb48d0000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=8R622QCMq98YE%2BcU0LBt8rPJymitY2U0WHQ9mHxQe%2FCIrICOS%2BFwShNI0IO6pV5ex33BLBa2vTt5hsn%2Fm5aCDzGAs06E9jNJYg31h%2BhoMuLwBmQDBxl3yy4mkA35"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23db597c263c-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 54,
  "title": "sit asperiores ipsam eveniet odio non quia",
  "body": "totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero incidunt corrupti mollitia"
} 
 </msg>
<msg timestamp="20210205 08:57:21.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.685" endtime="20210205 08:57:21.748"></status>
</kw>
<msg timestamp="20210205 08:57:21.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.683" endtime="20210205 08:57:21.748"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.751" endtime="20210205 08:57:21.754"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.750" endtime="20210205 08:57:21.754"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.749" endtime="20210205 08:57:21.754"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.755" endtime="20210205 08:57:21.756"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.754" endtime="20210205 08:57:21.756"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.758" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.757" endtime="20210205 08:57:21.758"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.807" level="INFO">${idvalue} = [54]</msg>
<status status="PASS" starttime="20210205 08:57:21.758" endtime="20210205 08:57:21.807"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:21.808" level="INFO">${responseid} = 54</msg>
<status status="PASS" starttime="20210205 08:57:21.807" endtime="20210205 08:57:21.808"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.808" endtime="20210205 08:57:21.809"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.809" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.809" endtime="20210205 08:57:21.809"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.756" endtime="20210205 08:57:21.810"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.683" endtime="20210205 08:57:21.810"></status>
</kw>
<kw name="${i} = 55" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.812" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:21.811" endtime="20210205 08:57:21.812"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:21.867" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/55 
 path_url=/posts/55 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:21.867" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/55 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d81fb4fbdf6913dda03166c6970f0a9db1612533441; expires=Sun, 07-Mar-21 13:57:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612065799', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f0-VxeBMfiov8SnmTjGIBYMw53XYbw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414bd9100002adc1b243000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=L3H0Jcxt7MBl%2F0G8%2BrvHI%2FxSnQRRPhEfW1FVaw3FgDzVO80T%2B48FQzTv%2BhLD9feq6oOyDrw1fywzdDvQ3AYNnKWaTdkJIC2lCCN7zRrqHcZvsYMoyo68RYZn3Ci%2F"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23dc19592adc-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 55,
  "title": "sit vel voluptatem et non libero",
  "body": "debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis molestiae\nnihil ut eum odit"
} 
 </msg>
<msg timestamp="20210205 08:57:21.867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.812" endtime="20210205 08:57:21.868"></status>
</kw>
<msg timestamp="20210205 08:57:21.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.810" endtime="20210205 08:57:21.868"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.871" endtime="20210205 08:57:21.873"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.869" endtime="20210205 08:57:21.873"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.868" endtime="20210205 08:57:21.874"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.875" endtime="20210205 08:57:21.876"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.874" endtime="20210205 08:57:21.876"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.877" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.877" endtime="20210205 08:57:21.877"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.926" level="INFO">${idvalue} = [55]</msg>
<status status="PASS" starttime="20210205 08:57:21.877" endtime="20210205 08:57:21.926"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:21.927" level="INFO">${responseid} = 55</msg>
<status status="PASS" starttime="20210205 08:57:21.926" endtime="20210205 08:57:21.927"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.927" endtime="20210205 08:57:21.928"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:21.928" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:21.928" endtime="20210205 08:57:21.928"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.876" endtime="20210205 08:57:21.929"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.810" endtime="20210205 08:57:21.929"></status>
</kw>
<kw name="${i} = 56" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:21.930" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:21.930" endtime="20210205 08:57:21.932"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:21.992" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/56 
 path_url=/posts/56 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:21.992" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/56 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d256230bcee0debdf50761c8e7bdea3bd1612533442; expires=Sun, 07-Mar-21 13:57:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '952', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-u98FTQTucjGThpIemwDEky3CeT0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414be080000742d2595c000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mRGt%2Ft06szjXhU3Bi%2Buzb857K2%2FVEJTNjUO0vxQ8XLtcgieEmiHSwL5I%2F0kH0iDwcmLA6hzcvo6V1t%2BtePgepT45GWRlfwkTOtrZ9MQ0DrnErs9eJiZ%2BmVWJ6Tj4"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23dcd930742d-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 56,
  "title": "qui et at rerum necessitatibus",
  "body": "aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis harum reprehenderit dolores eligendi"
} 
 </msg>
<msg timestamp="20210205 08:57:21.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.932" endtime="20210205 08:57:21.993"></status>
</kw>
<msg timestamp="20210205 08:57:21.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:21.929" endtime="20210205 08:57:21.993"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:21.996" endtime="20210205 08:57:21.999"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.994" endtime="20210205 08:57:21.999"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.993" endtime="20210205 08:57:21.999"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.000" endtime="20210205 08:57:22.001"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.999" endtime="20210205 08:57:22.001"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.003" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.002" endtime="20210205 08:57:22.003"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.108" level="INFO">${idvalue} = [56]</msg>
<status status="PASS" starttime="20210205 08:57:22.003" endtime="20210205 08:57:22.108"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:22.109" level="INFO">${responseid} = 56</msg>
<status status="PASS" starttime="20210205 08:57:22.108" endtime="20210205 08:57:22.109"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.109" endtime="20210205 08:57:22.110"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.110" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.110" endtime="20210205 08:57:22.111"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.001" endtime="20210205 08:57:22.111"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:21.929" endtime="20210205 08:57:22.111"></status>
</kw>
<kw name="${i} = 57" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.113" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:22.112" endtime="20210205 08:57:22.113"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:22.175" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/57 
 path_url=/posts/57 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:22.175" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/57 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=ddd26f3de284540776b9034d999c4c3e61612533442; expires=Sun, 07-Mar-21 13:57:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '952', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ce-Iwt4vkAV2fTGb7NKDpU2J1zQlLg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414bec20000386bbf03e000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=eA4Qezyjaz3YYvgU8Mj9WFhfRa%2Bz2MnciElOgozWLRLPnEUxUrUaNCLQfkX9dEl29WJjCHzjTINTLQ3MDsjzPewxIKiLcvl1PYufv%2Fw9VnaGKThOiRWvTSC5BCrg"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23de0fd2386b-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 57,
  "title": "sed ab est est",
  "body": "at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est"
} 
 </msg>
<msg timestamp="20210205 08:57:22.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.113" endtime="20210205 08:57:22.176"></status>
</kw>
<msg timestamp="20210205 08:57:22.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.111" endtime="20210205 08:57:22.176"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.178" endtime="20210205 08:57:22.181"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.177" endtime="20210205 08:57:22.181"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.176" endtime="20210205 08:57:22.181"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.183" endtime="20210205 08:57:22.184"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.182" endtime="20210205 08:57:22.184"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.186" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.185" endtime="20210205 08:57:22.186"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.248" level="INFO">${idvalue} = [57]</msg>
<status status="PASS" starttime="20210205 08:57:22.186" endtime="20210205 08:57:22.248"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:22.249" level="INFO">${responseid} = 57</msg>
<status status="PASS" starttime="20210205 08:57:22.248" endtime="20210205 08:57:22.249"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.249" endtime="20210205 08:57:22.250"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.250" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.250" endtime="20210205 08:57:22.250"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.184" endtime="20210205 08:57:22.251"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.111" endtime="20210205 08:57:22.251"></status>
</kw>
<kw name="${i} = 58" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.252" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:22.252" endtime="20210205 08:57:22.253"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:22.330" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/58 
 path_url=/posts/58 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:22.330" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/58 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1d5a6bcdd98fe02f7ab9129587ab22741612533442; expires=Sun, 07-Mar-21 13:57:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '949', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"df-bD3LY230qxsVBb8KHrs4UpWT93M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414bf4b000074ab2f0ae000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=obz7Yuck48M0hCiYfjFp%2FoOJ8cIHvHoWRni3o1TITXxCbx5RP5nE4zUpTCqpxBcFleEzRkvxoFm9NE2uHgUVSrsd881kUpw72neVcYo8xjqi8iRRLBvxz6ptEhGH"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23dedff974ab-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 58,
  "title": "voluptatum itaque dolores nisi et quasi",
  "body": "veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad similique veniam"
} 
 </msg>
<msg timestamp="20210205 08:57:22.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.253" endtime="20210205 08:57:22.331"></status>
</kw>
<msg timestamp="20210205 08:57:22.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.251" endtime="20210205 08:57:22.331"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.333" endtime="20210205 08:57:22.336"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.332" endtime="20210205 08:57:22.337"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.331" endtime="20210205 08:57:22.337"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.338" endtime="20210205 08:57:22.339"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.337" endtime="20210205 08:57:22.339"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.341" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.340" endtime="20210205 08:57:22.341"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.403" level="INFO">${idvalue} = [58]</msg>
<status status="PASS" starttime="20210205 08:57:22.341" endtime="20210205 08:57:22.403"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:22.405" level="INFO">${responseid} = 58</msg>
<status status="PASS" starttime="20210205 08:57:22.403" endtime="20210205 08:57:22.405"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.405" endtime="20210205 08:57:22.406"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.406" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.406" endtime="20210205 08:57:22.406"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.339" endtime="20210205 08:57:22.406"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.251" endtime="20210205 08:57:22.407"></status>
</kw>
<kw name="${i} = 59" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.408" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:22.408" endtime="20210205 08:57:22.409"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:22.472" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/59 
 path_url=/posts/59 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:22.472" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/59 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d09b057c5d49858d86072abb087a41ed21612533442; expires=Sun, 07-Mar-21 13:57:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '951', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"135-f8DoN5pkvK3E3Z4uNHbshLKUln0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414bfe80000ea8a7eb48000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=3Vn5aat8qjKCORJ0ibimvw9E0o1aWjT6ZdRrpL9Pvyfc5U2Yjbzhuqw0BtXWfkELGVptI7ThRMdM4P4IRwL7zJ4fQcbI5jIxdkzr%2BuLu8CjMp8%2FStG%2Fm2lhlUEo4"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23dfdd20ea8a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 59,
  "title": "qui commodi dolor at maiores et quis id accusantium",
  "body": "perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores suscipit voluptas et\nanimi doloribus cum rerum quas et magni\net hic ut ut commodi expedita sunt"
} 
 </msg>
<msg timestamp="20210205 08:57:22.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.409" endtime="20210205 08:57:22.473"></status>
</kw>
<msg timestamp="20210205 08:57:22.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.407" endtime="20210205 08:57:22.473"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.476" endtime="20210205 08:57:22.478"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.475" endtime="20210205 08:57:22.478"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.474" endtime="20210205 08:57:22.479"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.480" endtime="20210205 08:57:22.480"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.479" endtime="20210205 08:57:22.481"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.483" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.483" endtime="20210205 08:57:22.483"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.546" level="INFO">${idvalue} = [59]</msg>
<status status="PASS" starttime="20210205 08:57:22.483" endtime="20210205 08:57:22.546"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:22.547" level="INFO">${responseid} = 59</msg>
<status status="PASS" starttime="20210205 08:57:22.547" endtime="20210205 08:57:22.547"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.547" endtime="20210205 08:57:22.548"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.549" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.548" endtime="20210205 08:57:22.549"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.481" endtime="20210205 08:57:22.549"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.407" endtime="20210205 08:57:22.549"></status>
</kw>
<kw name="${i} = 60" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.551" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:22.551" endtime="20210205 08:57:22.552"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:22.607" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/60 
 path_url=/posts/60 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:22.608" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/60 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1b3af61a2fdc75a0bf9538a1979a5acc1612533442; expires=Sun, 07-Mar-21 13:57:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '950', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10c-7tnlht60JBKnr58PtdEE+vo8WCI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c07500007431bfa3a000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ivbLQEAQw2J5JmGtaAW1Hmab0lNQjxlk2y%2FRQMd%2B4fWi3Gm4%2FXTZaMeDn0dEq1T0tnTkwRTNj9ahyk8nQF4SKv6jmja0zPxnIfYufsGFLlLgLLgC7n%2Fb04lIkUjf"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23e0b8a57431-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 60,
  "title": "consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere",
  "body": "asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et fuga perferendis voluptas\nillo ratione amet aut et omnis"
} 
 </msg>
<msg timestamp="20210205 08:57:22.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.552" endtime="20210205 08:57:22.609"></status>
</kw>
<msg timestamp="20210205 08:57:22.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.550" endtime="20210205 08:57:22.609"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.612" endtime="20210205 08:57:22.615"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.611" endtime="20210205 08:57:22.615"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.610" endtime="20210205 08:57:22.615"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.617" endtime="20210205 08:57:22.617"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.616" endtime="20210205 08:57:22.618"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.619" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.618" endtime="20210205 08:57:22.619"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.683" level="INFO">${idvalue} = [60]</msg>
<status status="PASS" starttime="20210205 08:57:22.619" endtime="20210205 08:57:22.683"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:22.684" level="INFO">${responseid} = 60</msg>
<status status="PASS" starttime="20210205 08:57:22.684" endtime="20210205 08:57:22.684"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.684" endtime="20210205 08:57:22.685"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.686" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.685" endtime="20210205 08:57:22.686"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.618" endtime="20210205 08:57:22.686"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.549" endtime="20210205 08:57:22.686"></status>
</kw>
<kw name="${i} = 61" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.688" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:22.688" endtime="20210205 08:57:22.689"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:22.784" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/61 
 path_url=/posts/61 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:22.784" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/61 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4d825de8548edbe6d65025bfa879bede1612533442; expires=Sun, 07-Mar-21 13:57:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '946', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"117-2lMq4LJFOqWrZ3nCurXp4bbe50g"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c0fd000095ae29b5e000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ORXM3AAE2TRw0uAvy%2BBT2H1KtgUmBxRmgqVd37yG6n52mVcjE1yrDTCp70ioqPofNVnt8MFthTvnf0680qtGQsdIJ%2BSjzlpAHuAIq99jvk%2FSrb0MDTRvRgbXfV%2FT"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23e19b9795ae-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 61,
  "title": "voluptatem doloribus consectetur est ut ducimus",
  "body": "ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blanditiis debitis in nesciunt doloribus dicta dolores\nmagnam minus velit"
} 
 </msg>
<msg timestamp="20210205 08:57:22.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.689" endtime="20210205 08:57:22.785"></status>
</kw>
<msg timestamp="20210205 08:57:22.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.687" endtime="20210205 08:57:22.785"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.788" endtime="20210205 08:57:22.790"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.787" endtime="20210205 08:57:22.790"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.786" endtime="20210205 08:57:22.791"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.792" endtime="20210205 08:57:22.793"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.791" endtime="20210205 08:57:22.793"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.794" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.794" endtime="20210205 08:57:22.794"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.833" level="INFO">${idvalue} = [61]</msg>
<status status="PASS" starttime="20210205 08:57:22.795" endtime="20210205 08:57:22.833"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:22.833" level="INFO">${responseid} = 61</msg>
<status status="PASS" starttime="20210205 08:57:22.833" endtime="20210205 08:57:22.833"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.833" endtime="20210205 08:57:22.833"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.834" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.834" endtime="20210205 08:57:22.834"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.793" endtime="20210205 08:57:22.834"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.686" endtime="20210205 08:57:22.834"></status>
</kw>
<kw name="${i} = 62" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.835" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:22.834" endtime="20210205 08:57:22.835"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:22.941" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/62 
 path_url=/posts/62 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:22.941" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/62 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d28ad1c6eb3bc1b2c3a1e59eb513432061612533443; expires=Sun, 07-Mar-21 13:57:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '948', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fc-wUwohCARVvkGoN5CwlwsirOR5iU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c19a00000d9651381000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=xKFG5e6rEM3OijkA1VDpaier2BeVNGJbuJmtg1GuFT0vX%2FeVAxPCM00TyMS2%2BIshKTgz%2BdHHIYWNn%2F8e%2BlxQnHpbbBkr5Cuj7BS9KP4sEwsm0%2BZQLVgclwNMvxuN"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23e28d9c0d96-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 62,
  "title": "beatae enim quia vel",
  "body": "enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omnis\nquo molestiae omnis ea eveniet optio"
} 
 </msg>
<msg timestamp="20210205 08:57:22.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.835" endtime="20210205 08:57:22.942"></status>
</kw>
<msg timestamp="20210205 08:57:22.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.834" endtime="20210205 08:57:22.942"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:22.945" endtime="20210205 08:57:22.947"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.944" endtime="20210205 08:57:22.948"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.943" endtime="20210205 08:57:22.948"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:22.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:22.949" endtime="20210205 08:57:22.950"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.948" endtime="20210205 08:57:22.950"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:22.952" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:22.951" endtime="20210205 08:57:22.952"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.004" level="INFO">${idvalue} = [62]</msg>
<status status="PASS" starttime="20210205 08:57:22.952" endtime="20210205 08:57:23.004"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:23.005" level="INFO">${responseid} = 62</msg>
<status status="PASS" starttime="20210205 08:57:23.004" endtime="20210205 08:57:23.005"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:23.005" endtime="20210205 08:57:23.006"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.006" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:23.006" endtime="20210205 08:57:23.006"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.951" endtime="20210205 08:57:23.007"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:22.834" endtime="20210205 08:57:23.007"></status>
</kw>
<kw name="${i} = 63" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:23.008" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:23.008" endtime="20210205 08:57:23.009"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:23.084" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/63 
 path_url=/posts/63 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:23.085" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/63 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d29bc690b9213f7f1c47b43b28f4e5d971612533443; expires=Sun, 07-Mar-21 13:57:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '947', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"154-0kFmwh5nu5wS1Jzcpk0yszfjrjQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c2400000c1ed24073000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2FHKmzkc%2F844KfOAynWP%2BSlKxxuZ5lAFKysXspadqclathPvftvHuRMsOtxKxpj%2Bh53IDU%2FHe%2BeiRDL8%2B3z4B9ZeWaM815yenELGo2Lq22aEqG3DFUpnYtvONxn7D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23e39c7cc1ed-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 63,
  "title": "voluptas blanditiis repellendus animi ducimus error sapiente et suscipit",
  "body": "enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\nab delectus culpa quo reprehenderit blanditiis asperiores\naccusantium ut quam in voluptatibus voluptas ipsam dicta"
} 
 </msg>
<msg timestamp="20210205 08:57:23.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.009" endtime="20210205 08:57:23.085"></status>
</kw>
<msg timestamp="20210205 08:57:23.086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.007" endtime="20210205 08:57:23.086"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:23.088" endtime="20210205 08:57:23.091"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.087" endtime="20210205 08:57:23.091"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.086" endtime="20210205 08:57:23.091"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:23.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.093" endtime="20210205 08:57:23.093"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.092" endtime="20210205 08:57:23.094"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.095" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:23.094" endtime="20210205 08:57:23.095"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.147" level="INFO">${idvalue} = [63]</msg>
<status status="PASS" starttime="20210205 08:57:23.095" endtime="20210205 08:57:23.147"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:23.148" level="INFO">${responseid} = 63</msg>
<status status="PASS" starttime="20210205 08:57:23.147" endtime="20210205 08:57:23.148"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:23.148" endtime="20210205 08:57:23.149"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.149" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:23.149" endtime="20210205 08:57:23.149"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.094" endtime="20210205 08:57:23.150"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.007" endtime="20210205 08:57:23.150"></status>
</kw>
<kw name="${i} = 64" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:23.152" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:23.151" endtime="20210205 08:57:23.152"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:23.334" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/64 
 path_url=/posts/64 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:23.334" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/64 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d11d2dffb7affea17b73940da057517d21612533443; expires=Sun, 07-Mar-21 13:57:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '946', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-fG+p7wNrgpgJUc/3oEW9IALNB1s"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c2cd00002916a53cf000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Nx4Ow0kgdc86VoXBlc09sHI7OCNZjAOhiUTMwgi9lPUMiBiY7ausXe%2FnudMMa6szRRRui0BlSeWZ5OMcBygGJcInhmVax6aXswim8gAmqS2SkA7i%2BFvXINTpOFrN"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23e47c862916-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 64,
  "title": "et fugit quas eum in in aperiam quod",
  "body": "id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaque aut aut qui"
} 
 </msg>
<msg timestamp="20210205 08:57:23.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.152" endtime="20210205 08:57:23.335"></status>
</kw>
<msg timestamp="20210205 08:57:23.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.150" endtime="20210205 08:57:23.335"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:23.338" endtime="20210205 08:57:23.341"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.337" endtime="20210205 08:57:23.341"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.336" endtime="20210205 08:57:23.341"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:23.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.343" endtime="20210205 08:57:23.343"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.342" endtime="20210205 08:57:23.343"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.345" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:23.344" endtime="20210205 08:57:23.345"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.377" level="INFO">${idvalue} = [64]</msg>
<status status="PASS" starttime="20210205 08:57:23.345" endtime="20210205 08:57:23.377"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:23.378" level="INFO">${responseid} = 64</msg>
<status status="PASS" starttime="20210205 08:57:23.378" endtime="20210205 08:57:23.378"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:23.378" endtime="20210205 08:57:23.378"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.378" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:23.378" endtime="20210205 08:57:23.378"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.344" endtime="20210205 08:57:23.379"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.150" endtime="20210205 08:57:23.379"></status>
</kw>
<kw name="${i} = 65" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:23.379" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:23.379" endtime="20210205 08:57:23.380"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:23.439" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/65 
 path_url=/posts/65 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:23.439" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/65 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df92780685498089e475fe0764450f1de1612533443; expires=Sun, 07-Mar-21 13:57:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '945', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"108-o7Djqn++3cXC+SK+HeS4ds9s4Dk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c3ad0000c1f26d9dd000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=sK3ajW63TkkbqzJko80gugJ72N7OfbDeRBzDjeTHK9yr68z2ntieZMKJGEtCUh6qM4byRoK7L0J3FwnVBEsV%2FeEMXxfsOthoUmzh8aoOqRyVZ1IhojyyxiNNnwKW"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23e5ed8ac1f2-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 65,
  "title": "consequatur id enim sunt et et",
  "body": "voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperiores et perferendis\nnatus id esse incidunt pariatur"
} 
 </msg>
<msg timestamp="20210205 08:57:23.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.380" endtime="20210205 08:57:23.440"></status>
</kw>
<msg timestamp="20210205 08:57:23.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.379" endtime="20210205 08:57:23.440"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:23.442" endtime="20210205 08:57:23.445"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.441" endtime="20210205 08:57:23.445"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.440" endtime="20210205 08:57:23.445"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:23.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.447" endtime="20210205 08:57:23.448"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.446" endtime="20210205 08:57:23.448"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.449" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:23.449" endtime="20210205 08:57:23.449"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.512" level="INFO">${idvalue} = [65]</msg>
<status status="PASS" starttime="20210205 08:57:23.450" endtime="20210205 08:57:23.512"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:23.513" level="INFO">${responseid} = 65</msg>
<status status="PASS" starttime="20210205 08:57:23.513" endtime="20210205 08:57:23.513"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:23.513" endtime="20210205 08:57:23.514"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.515" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:23.514" endtime="20210205 08:57:23.515"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.448" endtime="20210205 08:57:23.515"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.379" endtime="20210205 08:57:23.515"></status>
</kw>
<kw name="${i} = 66" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:23.517" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:23.516" endtime="20210205 08:57:23.517"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:23.670" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/66 
 path_url=/posts/66 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:23.670" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/66 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da968b6ff199b3d9ec474da1592686f661612533443; expires=Sun, 07-Mar-21 13:57:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '936', 'X-Ratelimit-Reset': '1611704501', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-wkA8VfsJ18Eh0sMF7Ua9wR/8DVg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c49100000316a6a5e000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=9nlbfi6tT%2FlUpX4axGyobnbUBUSAZpTG60p0tmwAIjv3r5jz0QMBnnVePjtyCyc026lZZiIUzRpZDcIIFhvbJ9fBf4l%2Bq6lKkTMw6GrLS8wlkPZ0iocB6sVWUSD6"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23e748b80316-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 66,
  "title": "repudiandae ea animi iusto",
  "body": "officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusdam et nemo iusto saepe"
} 
 </msg>
<msg timestamp="20210205 08:57:23.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.518" endtime="20210205 08:57:23.671"></status>
</kw>
<msg timestamp="20210205 08:57:23.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.515" endtime="20210205 08:57:23.671"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:23.673" endtime="20210205 08:57:23.676"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.672" endtime="20210205 08:57:23.677"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.671" endtime="20210205 08:57:23.677"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:23.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.678" endtime="20210205 08:57:23.679"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.677" endtime="20210205 08:57:23.679"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.681" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:23.680" endtime="20210205 08:57:23.681"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.728" level="INFO">${idvalue} = [66]</msg>
<status status="PASS" starttime="20210205 08:57:23.681" endtime="20210205 08:57:23.729"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:23.729" level="INFO">${responseid} = 66</msg>
<status status="PASS" starttime="20210205 08:57:23.729" endtime="20210205 08:57:23.730"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:23.730" endtime="20210205 08:57:23.730"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.731" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:23.731" endtime="20210205 08:57:23.731"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.679" endtime="20210205 08:57:23.731"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.515" endtime="20210205 08:57:23.731"></status>
</kw>
<kw name="${i} = 67" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:23.733" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:23.733" endtime="20210205 08:57:23.734"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:23.892" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/67 
 path_url=/posts/67 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:23.892" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/67 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcb23dcf05bbd6a5f8160168154040e7d1612533443; expires=Sun, 07-Mar-21 13:57:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '943', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10a-zdbQphdSEl28vma+RxuMlor5ACo"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c5160000f47875b66000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=OImUdD05cOnMIasEqTAFbtXPxJrMz5PwJrzD88IMCNDVEPjqvr84jhJIxgMN9nDjpsANuntdcOMIicrwF0OWx7xg2aSpInrpyPuW7nRwIoeyiOrsDOWK5%2B8uesLa"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23e8289ef478-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 67,
  "title": "aliquid eos sed fuga est maxime repellendus",
  "body": "reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet\nnon sapiente et consequatur necessitatibus molestiae"
} 
 </msg>
<msg timestamp="20210205 08:57:23.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.734" endtime="20210205 08:57:23.892"></status>
</kw>
<msg timestamp="20210205 08:57:23.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.732" endtime="20210205 08:57:23.893"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:23.895" endtime="20210205 08:57:23.898"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.894" endtime="20210205 08:57:23.898"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.893" endtime="20210205 08:57:23.899"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:23.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.900" endtime="20210205 08:57:23.901"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.899" endtime="20210205 08:57:23.901"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.902" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:23.902" endtime="20210205 08:57:23.902"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.942" level="INFO">${idvalue} = [67]</msg>
<status status="PASS" starttime="20210205 08:57:23.903" endtime="20210205 08:57:23.943"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:23.943" level="INFO">${responseid} = 67</msg>
<status status="PASS" starttime="20210205 08:57:23.943" endtime="20210205 08:57:23.943"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:23.943" endtime="20210205 08:57:23.943"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:23.944" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:23.944" endtime="20210205 08:57:23.944"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.901" endtime="20210205 08:57:23.944"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.732" endtime="20210205 08:57:23.944"></status>
</kw>
<kw name="${i} = 68" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:23.945" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:23.944" endtime="20210205 08:57:23.945"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:24.170" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/68 
 path_url=/posts/68 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:24.170" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/68 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dec360df2f78e718c5c1bf10035768d971612533444; expires=Sun, 07-Mar-21 13:57:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '942', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ec-n7dxDg5V05y/RJHBgoUuNuvDA5M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c5f0000037ee3814a000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=BzGGq3P1j4XiMikTB0CFN490ItuFGymxUjZjF0jJ1e%2BR0hICvtQxaJY62NZSRn4mpl%2FKpXpuxqZehe5Y5LpydijSxj2vgfDjJyWDCH%2FF6gmbd2CuFgmU8o5lG9Tx"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23e96ccc37ee-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 68,
  "title": "odio quis facere architecto reiciendis optio",
  "body": "magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti quidem saepe porro velit"
} 
 </msg>
<msg timestamp="20210205 08:57:24.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.945" endtime="20210205 08:57:24.171"></status>
</kw>
<msg timestamp="20210205 08:57:24.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:23.944" endtime="20210205 08:57:24.171"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:24.173" endtime="20210205 08:57:24.176"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.172" endtime="20210205 08:57:24.177"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.171" endtime="20210205 08:57:24.177"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:24.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.178" endtime="20210205 08:57:24.179"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.177" endtime="20210205 08:57:24.179"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.181" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:24.180" endtime="20210205 08:57:24.181"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.244" level="INFO">${idvalue} = [68]</msg>
<status status="PASS" starttime="20210205 08:57:24.181" endtime="20210205 08:57:24.244"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:24.245" level="INFO">${responseid} = 68</msg>
<status status="PASS" starttime="20210205 08:57:24.244" endtime="20210205 08:57:24.245"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:24.245" endtime="20210205 08:57:24.246"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.246" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:24.246" endtime="20210205 08:57:24.247"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.179" endtime="20210205 08:57:24.247"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:23.944" endtime="20210205 08:57:24.247"></status>
</kw>
<kw name="${i} = 69" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:24.249" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:24.248" endtime="20210205 08:57:24.249"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:24.308" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/69 
 path_url=/posts/69 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:24.308" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/69 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5502dac2f23a0419a1ebc7a79d379bd21612533444; expires=Sun, 07-Mar-21 13:57:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '935', 'X-Ratelimit-Reset': '1611704501', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"137-6SkfkEH2vZX2tDrUhH6X9K8msxE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c71700000d7e3e9c6000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Mo9HZ3%2FpRxp7S3gE90eaGxf%2BpkU4yr0xzZxMcmR6av2e%2BlT6kMnKA3FrI7sj%2FozyIlOzZyiPU8Bq%2FKxHPkd81RaLb8%2BXiGY1gQP3ZwrZ858t0bbThuTtY3oGAqDp"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23eb583d0d7e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 69,
  "title": "fugiat quod pariatur odit minima",
  "body": "officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\nsequi commodi repudiandae asperiores et saepe a"
} 
 </msg>
<msg timestamp="20210205 08:57:24.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.249" endtime="20210205 08:57:24.309"></status>
</kw>
<msg timestamp="20210205 08:57:24.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.247" endtime="20210205 08:57:24.309"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:24.312" endtime="20210205 08:57:24.314"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.311" endtime="20210205 08:57:24.314"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.310" endtime="20210205 08:57:24.315"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:24.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.316" endtime="20210205 08:57:24.317"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.315" endtime="20210205 08:57:24.317"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.319" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:24.318" endtime="20210205 08:57:24.319"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.360" level="INFO">${idvalue} = [69]</msg>
<status status="PASS" starttime="20210205 08:57:24.319" endtime="20210205 08:57:24.360"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:24.360" level="INFO">${responseid} = 69</msg>
<status status="PASS" starttime="20210205 08:57:24.360" endtime="20210205 08:57:24.360"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:24.360" endtime="20210205 08:57:24.361"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.361" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:24.361" endtime="20210205 08:57:24.361"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.317" endtime="20210205 08:57:24.361"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.247" endtime="20210205 08:57:24.361"></status>
</kw>
<kw name="${i} = 70" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:24.362" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:24.362" endtime="20210205 08:57:24.362"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:24.497" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/70 
 path_url=/posts/70 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:24.497" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/70 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2b4f041e5a1f0dd7484135eda28158821612533444; expires=Sun, 07-Mar-21 13:57:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '940', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d4-rM/RXlmI+ICK+LslODlpNGE3yUw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c7d70000383047191000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=sukgz4aUckSFI5n5Ps8EYCWQ3cnYyuint3LKybGx%2BfmagYye9kgqlB7lRjoP%2Btbek07cAHJgB%2F9Khch7TpCBwWYp7YE6JdCw801pjSSai%2F45HxGSWsnpFvRgq6WE"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23ec8c543830-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 70,
  "title": "voluptatem laborum magni",
  "body": "sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore"
} 
 </msg>
<msg timestamp="20210205 08:57:24.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.362" endtime="20210205 08:57:24.498"></status>
</kw>
<msg timestamp="20210205 08:57:24.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.361" endtime="20210205 08:57:24.498"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:24.501" endtime="20210205 08:57:24.503"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.499" endtime="20210205 08:57:24.504"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.498" endtime="20210205 08:57:24.504"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:24.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.505" endtime="20210205 08:57:24.506"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.504" endtime="20210205 08:57:24.506"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.507" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:24.507" endtime="20210205 08:57:24.507"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.570" level="INFO">${idvalue} = [70]</msg>
<status status="PASS" starttime="20210205 08:57:24.508" endtime="20210205 08:57:24.571"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:24.572" level="INFO">${responseid} = 70</msg>
<status status="PASS" starttime="20210205 08:57:24.571" endtime="20210205 08:57:24.572"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:24.572" endtime="20210205 08:57:24.572"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.573" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:24.573" endtime="20210205 08:57:24.573"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.506" endtime="20210205 08:57:24.573"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.361" endtime="20210205 08:57:24.573"></status>
</kw>
<kw name="${i} = 71" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:24.575" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:24.575" endtime="20210205 08:57:24.576"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:24.649" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/71 
 path_url=/posts/71 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:24.649" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/71 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbcfc8cae1e33bac1802dacf990011c411612533444; expires=Sun, 07-Mar-21 13:57:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '939', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e8-Yh7j20Q0i9NFG2BtR9OGdKEdmek"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c85f00002a3fdf393000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=aCoqgFSGb%2Boq8sy2Y3ldGjSkWoJn%2B08GGwyzOZf%2BJLgtD06huS0%2FLHCcIo0vguP21F4clE0s7aSyCT4FmBXmZXzb4tGGG0GtDmaaWLwRQbO2oluZUTcw%2BQ%2FlXVvu"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23ed5ca92a3f-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 71,
  "title": "et iusto veniam et illum aut fuga",
  "body": "occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim velit est perferendis"
} 
 </msg>
<msg timestamp="20210205 08:57:24.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.576" endtime="20210205 08:57:24.650"></status>
</kw>
<msg timestamp="20210205 08:57:24.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.574" endtime="20210205 08:57:24.650"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:24.653" endtime="20210205 08:57:24.655"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.652" endtime="20210205 08:57:24.655"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.651" endtime="20210205 08:57:24.656"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:24.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.657" endtime="20210205 08:57:24.658"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.656" endtime="20210205 08:57:24.658"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.660" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:24.659" endtime="20210205 08:57:24.660"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.714" level="INFO">${idvalue} = [71]</msg>
<status status="PASS" starttime="20210205 08:57:24.660" endtime="20210205 08:57:24.714"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:24.714" level="INFO">${responseid} = 71</msg>
<status status="PASS" starttime="20210205 08:57:24.714" endtime="20210205 08:57:24.714"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:24.714" endtime="20210205 08:57:24.715"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.715" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:24.715" endtime="20210205 08:57:24.715"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.658" endtime="20210205 08:57:24.715"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.574" endtime="20210205 08:57:24.715"></status>
</kw>
<kw name="${i} = 72" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:24.716" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:24.716" endtime="20210205 08:57:24.716"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:24.789" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/72 
 path_url=/posts/72 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:24.789" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/72 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd0b40f15a585328f678a29d9eb41664c1612533444; expires=Sun, 07-Mar-21 13:57:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '940', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"116-H6k0vQJtj/XCaxWK+1+y9a8ry70"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c8f1000095848380c000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=CYrR3oRPpgVphJtKGcwubOSjZZ1F5MnmsSQoyv4jf6VQyu717o4OcXnslgoMGq7RAwkE8Qmv3ivnXXsUra5HAiyeHyP3H37gfawVad7r0PoR6ppsMDG%2BNqNYlzC8"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23ee4db19584-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 72,
  "title": "sint hic doloribus consequatur eos non id",
  "body": "quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque id sunt ut aut accusamus\nsunt consectetur expedita inventore velit"
} 
 </msg>
<msg timestamp="20210205 08:57:24.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.716" endtime="20210205 08:57:24.790"></status>
</kw>
<msg timestamp="20210205 08:57:24.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.715" endtime="20210205 08:57:24.790"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:24.793" endtime="20210205 08:57:24.796"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.792" endtime="20210205 08:57:24.796"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.791" endtime="20210205 08:57:24.796"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:24.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.798" endtime="20210205 08:57:24.798"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.796" endtime="20210205 08:57:24.798"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.800" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:24.799" endtime="20210205 08:57:24.800"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.864" level="INFO">${idvalue} = [72]</msg>
<status status="PASS" starttime="20210205 08:57:24.800" endtime="20210205 08:57:24.864"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:24.865" level="INFO">${responseid} = 72</msg>
<status status="PASS" starttime="20210205 08:57:24.864" endtime="20210205 08:57:24.865"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:24.865" endtime="20210205 08:57:24.866"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:24.866" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:24.866" endtime="20210205 08:57:24.866"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.799" endtime="20210205 08:57:24.867"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.715" endtime="20210205 08:57:24.867"></status>
</kw>
<kw name="${i} = 73" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:24.868" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:24.868" endtime="20210205 08:57:24.869"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:25.024" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/73 
 path_url=/posts/73 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:25.024" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/73 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da5a456afbe19cbba0449736ea07784911612533445; expires=Sun, 07-Mar-21 13:57:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '937', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11f-rOkoGp9hOJP88vceK/3kAJdMgVE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414c9db0000ea4d1f123000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=HWZqa0Y6iWFdvWlYyHzvVNWWYztdhZqDryBNnhhRs6gMJvAEsA9X6fYXoREXaFF8%2F4Watog37x2FvgxSrsuK%2BtQ8V4ycmROgZekDnaQPV%2B%2BJnyz%2FrSwu5OGoH9lO"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23efcbc9ea4d-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 73,
  "title": "consequuntur deleniti eos quia temporibus ab aliquid at",
  "body": "voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatur\ntempore cumque quae est et\net in consequuntur voluptatem voluptates aut"
} 
 </msg>
<msg timestamp="20210205 08:57:25.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.869" endtime="20210205 08:57:25.025"></status>
</kw>
<msg timestamp="20210205 08:57:25.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:24.867" endtime="20210205 08:57:25.025"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:25.028" endtime="20210205 08:57:25.031"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.027" endtime="20210205 08:57:25.031"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.026" endtime="20210205 08:57:25.031"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:25.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.032" endtime="20210205 08:57:25.033"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.031" endtime="20210205 08:57:25.033"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.035" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:25.034" endtime="20210205 08:57:25.035"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.098" level="INFO">${idvalue} = [73]</msg>
<status status="PASS" starttime="20210205 08:57:25.035" endtime="20210205 08:57:25.098"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:25.099" level="INFO">${responseid} = 73</msg>
<status status="PASS" starttime="20210205 08:57:25.099" endtime="20210205 08:57:25.099"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:25.099" endtime="20210205 08:57:25.100"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.101" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:25.100" endtime="20210205 08:57:25.101"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.033" endtime="20210205 08:57:25.101"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:24.867" endtime="20210205 08:57:25.101"></status>
</kw>
<kw name="${i} = 74" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:25.103" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:25.102" endtime="20210205 08:57:25.103"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:25.272" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/74 
 path_url=/posts/74 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:25.272" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/74 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1197234bfc42394a92c155b1882e28ed1612533445; expires=Sun, 07-Mar-21 13:57:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '936', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"128-7qIwxKiVOzrfywOEfThc/blClHw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414cadc000073c15b3a2000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=lhjVLtwpwBKWSjaEhgt%2F6jSg6LAg6OsdG2YYKLRmXqioRf1j90iR6WcDDkI9F2rImr8ZI%2BOOv8TX8iZ7MsfIhHDV2NxZR0kpsyONj%2Fb1W%2FLETRciPsRgbAlKXxyc"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23f15aa073c1-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 74,
  "title": "enim unde ratione doloribus quas enim ut sit sapiente",
  "body": "odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magnam et quam\nblanditiis est itaque\nquo et tenetur ratione occaecati molestiae tempora"
} 
 </msg>
<msg timestamp="20210205 08:57:25.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.104" endtime="20210205 08:57:25.273"></status>
</kw>
<msg timestamp="20210205 08:57:25.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.101" endtime="20210205 08:57:25.273"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:25.276" endtime="20210205 08:57:25.279"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.275" endtime="20210205 08:57:25.279"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.274" endtime="20210205 08:57:25.280"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:25.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.281" endtime="20210205 08:57:25.281"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.280" endtime="20210205 08:57:25.282"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.283" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:25.283" endtime="20210205 08:57:25.283"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.323" level="INFO">${idvalue} = [74]</msg>
<status status="PASS" starttime="20210205 08:57:25.283" endtime="20210205 08:57:25.323"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:25.324" level="INFO">${responseid} = 74</msg>
<status status="PASS" starttime="20210205 08:57:25.323" endtime="20210205 08:57:25.324"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:25.324" endtime="20210205 08:57:25.324"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.325" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:25.324" endtime="20210205 08:57:25.325"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.282" endtime="20210205 08:57:25.325"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.101" endtime="20210205 08:57:25.325"></status>
</kw>
<kw name="${i} = 75" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:25.326" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:25.325" endtime="20210205 08:57:25.326"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:25.374" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/75 
 path_url=/posts/75 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:25.374" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/75 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d153d2a83f7698088a3f8217b9d9354e91612533445; expires=Sun, 07-Mar-21 13:57:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '935', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"12d-f7+LvQ2H9gp0KtIQ9o5Rm53qeaE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414cb49000002f316a28000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=sTx6I5%2FlJIW9z4xxLA%2F8PEDr9dF2LYSx0cfjm4CC8W%2FtWiaZl5iLl5NzCwwpkEhbw3V%2FH7AMdnEytDVS8HC8m4HPoJt1%2Bp9wAarOQwwDsIprf2oO6mtwekclaLxX"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23f2092a02f3-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 75,
  "title": "dignissimos eum dolor ut enim et delectus in",
  "body": "commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui delectus facilis temporibus\nrerum amet et nemo voluptate expedita adipisci error dolorem"
} 
 </msg>
<msg timestamp="20210205 08:57:25.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.326" endtime="20210205 08:57:25.374"></status>
</kw>
<msg timestamp="20210205 08:57:25.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.325" endtime="20210205 08:57:25.375"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:25.377" endtime="20210205 08:57:25.380"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.376" endtime="20210205 08:57:25.380"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.375" endtime="20210205 08:57:25.380"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:25.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.382" endtime="20210205 08:57:25.382"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.381" endtime="20210205 08:57:25.382"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.384" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:25.384" endtime="20210205 08:57:25.384"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.448" level="INFO">${idvalue} = [75]</msg>
<status status="PASS" starttime="20210205 08:57:25.384" endtime="20210205 08:57:25.448"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:25.449" level="INFO">${responseid} = 75</msg>
<status status="PASS" starttime="20210205 08:57:25.448" endtime="20210205 08:57:25.449"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:25.449" endtime="20210205 08:57:25.450"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.450" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:25.450" endtime="20210205 08:57:25.450"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.383" endtime="20210205 08:57:25.451"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.325" endtime="20210205 08:57:25.451"></status>
</kw>
<kw name="${i} = 76" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:25.453" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:25.452" endtime="20210205 08:57:25.453"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:25.557" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/76 
 path_url=/posts/76 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:25.557" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/76 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dae2c355c4278d47c4d94e6ced67537d41612533445; expires=Sun, 07-Mar-21 13:57:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '934', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"cc-u0/g+lWkxIsGyIKpelypYLpuJj8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414cbf1000028d3e5b5f000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=KqMtbUBteghPO6zO%2BnIJQ%2Bo6%2Bz8kTbXF6fRlWMCt2grAflOv%2Buys2h%2BIyXfc4hfczCGe16BUZE%2Bulx9P%2FYcvP%2BVPLk8ZHqUMilBH3YYAdiYRfcklqfQA5%2Fj951Bm"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23f31b8428d3-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 76,
  "title": "doloremque officiis ad et non perferendis",
  "body": "ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio"
} 
 </msg>
<msg timestamp="20210205 08:57:25.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.453" endtime="20210205 08:57:25.558"></status>
</kw>
<msg timestamp="20210205 08:57:25.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.451" endtime="20210205 08:57:25.558"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:25.561" endtime="20210205 08:57:25.564"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.559" endtime="20210205 08:57:25.564"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.558" endtime="20210205 08:57:25.564"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:25.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.566" endtime="20210205 08:57:25.566"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.565" endtime="20210205 08:57:25.566"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.568" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:25.567" endtime="20210205 08:57:25.568"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.634" level="INFO">${idvalue} = [76]</msg>
<status status="PASS" starttime="20210205 08:57:25.568" endtime="20210205 08:57:25.634"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:25.635" level="INFO">${responseid} = 76</msg>
<status status="PASS" starttime="20210205 08:57:25.634" endtime="20210205 08:57:25.635"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:25.635" endtime="20210205 08:57:25.636"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.636" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:25.636" endtime="20210205 08:57:25.637"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.567" endtime="20210205 08:57:25.637"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.451" endtime="20210205 08:57:25.637"></status>
</kw>
<kw name="${i} = 77" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:25.639" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:25.638" endtime="20210205 08:57:25.639"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:25.872" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/77 
 path_url=/posts/77 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:25.872" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/77 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9a05cdd636400fc19c94e4db275be8f21612533445; expires=Sun, 07-Mar-21 13:57:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '933', 'x-ratelimit-reset': '1611555792', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"11f-2lbe4Q56bYTg/IcJf6JOSbSCscI"', 'via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414ccf90000f0fe4a109000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=zeXyXBUBjyMnveHUDbYDcxG%2FuXPUy6gZBc4BSV%2FBFf5A6iLbPQHL0Oy0jDgjZolYKAwkV37qhgR%2BbN3bLtxY5nOuYgIKXRMoGICQKkhNNqnUhQQ%2Bm4cNVZ8ZQ8Q2"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23f4cb22f0fe-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 77,
  "title": "necessitatibus quasi exercitationem odio",
  "body": "modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident"
} 
 </msg>
<msg timestamp="20210205 08:57:25.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.639" endtime="20210205 08:57:25.873"></status>
</kw>
<msg timestamp="20210205 08:57:25.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.637" endtime="20210205 08:57:25.873"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:25.876" endtime="20210205 08:57:25.879"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.875" endtime="20210205 08:57:25.879"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.874" endtime="20210205 08:57:25.879"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:25.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.880" endtime="20210205 08:57:25.881"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.879" endtime="20210205 08:57:25.881"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.883" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:25.882" endtime="20210205 08:57:25.883"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.921" level="INFO">${idvalue} = [77]</msg>
<status status="PASS" starttime="20210205 08:57:25.883" endtime="20210205 08:57:25.921"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:25.922" level="INFO">${responseid} = 77</msg>
<status status="PASS" starttime="20210205 08:57:25.922" endtime="20210205 08:57:25.922"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:25.922" endtime="20210205 08:57:25.922"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:25.923" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:25.922" endtime="20210205 08:57:25.923"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.881" endtime="20210205 08:57:25.923"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.637" endtime="20210205 08:57:25.923"></status>
</kw>
<kw name="${i} = 78" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:25.923" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:25.923" endtime="20210205 08:57:25.924"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:26.110" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/78 
 path_url=/posts/78 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:26.110" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/78 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df17a980e10890789d7d3f2a6c62530c61612533446; expires=Sun, 07-Mar-21 13:57:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '934', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d3-xKs0MgAtIORio5QR/VxM9bC/XYc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414ce180000e09ed0037000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=72mdm2UZC3b63Id7bs8fr%2FY0KV0eFBa52AQFaVZskocrK0aJCFBOkDEoRn6QL8EcaEnS5%2B3F2l%2F9kSf7SR2ThUl7lNyeShDDSLYrwQQFFAIpJQktUZjwEH%2Bzofwz"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23f6883de09e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 78,
  "title": "quam voluptatibus rerum veritatis",
  "body": "nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus"
} 
 </msg>
<msg timestamp="20210205 08:57:26.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.924" endtime="20210205 08:57:26.111"></status>
</kw>
<msg timestamp="20210205 08:57:26.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:25.923" endtime="20210205 08:57:26.111"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:26.114" endtime="20210205 08:57:26.116"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.112" endtime="20210205 08:57:26.117"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.111" endtime="20210205 08:57:26.117"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:26.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.118" endtime="20210205 08:57:26.119"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.117" endtime="20210205 08:57:26.119"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.120" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:26.120" endtime="20210205 08:57:26.120"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.177" level="INFO">${idvalue} = [78]</msg>
<status status="PASS" starttime="20210205 08:57:26.121" endtime="20210205 08:57:26.177"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:26.178" level="INFO">${responseid} = 78</msg>
<status status="PASS" starttime="20210205 08:57:26.177" endtime="20210205 08:57:26.178"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:26.178" endtime="20210205 08:57:26.179"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.179" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:26.179" endtime="20210205 08:57:26.179"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.119" endtime="20210205 08:57:26.180"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:25.923" endtime="20210205 08:57:26.180"></status>
</kw>
<kw name="${i} = 79" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:26.182" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:26.181" endtime="20210205 08:57:26.183"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:26.347" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/79 
 path_url=/posts/79 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:26.348" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/79 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5320c96f744effffdee91ed84aee06111612533446; expires=Sun, 07-Mar-21 13:57:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '932', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"110-2pubCm1Sfl7Y7qFtirsYZCcorgA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414cf0a000024a072850000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=0RsVNqiOP%2FusX%2FaBQtV2tgklvba%2Fn%2BVdIZTvpSzQOnsohm82EQl22etGedXZBRG3fsu06zge3Bh1G2xk3LA3rfPF5sE2VZcaBbIAufvaQCqCYfy2fnPZwcZR%2BvJ0"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23f81c3d24a0-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 79,
  "title": "pariatur consequatur quia magnam autem omnis non amet",
  "body": "libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam molestiae ducimus est\nofficiis esse molestiae iste et quos"
} 
 </msg>
<msg timestamp="20210205 08:57:26.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.183" endtime="20210205 08:57:26.348"></status>
</kw>
<msg timestamp="20210205 08:57:26.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.180" endtime="20210205 08:57:26.349"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:26.351" endtime="20210205 08:57:26.354"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.350" endtime="20210205 08:57:26.354"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.349" endtime="20210205 08:57:26.354"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:26.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.356" endtime="20210205 08:57:26.356"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.355" endtime="20210205 08:57:26.357"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.358" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:26.358" endtime="20210205 08:57:26.358"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.420" level="INFO">${idvalue} = [79]</msg>
<status status="PASS" starttime="20210205 08:57:26.358" endtime="20210205 08:57:26.420"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:26.421" level="INFO">${responseid} = 79</msg>
<status status="PASS" starttime="20210205 08:57:26.420" endtime="20210205 08:57:26.421"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:26.421" endtime="20210205 08:57:26.422"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.422" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:26.422" endtime="20210205 08:57:26.422"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.357" endtime="20210205 08:57:26.423"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.180" endtime="20210205 08:57:26.423"></status>
</kw>
<kw name="${i} = 80" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:26.425" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:26.424" endtime="20210205 08:57:26.425"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:26.613" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/80 
 path_url=/posts/80 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:26.613" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/80 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d235662ce20e304233ceb8f9b7e0d50751612533446; expires=Sun, 07-Mar-21 13:57:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '932', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11c-0HY/hHFa5y+uiyBfjGo3n4UDzu8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d00e00002550a40ea000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=N%2B6533wdUcXvZfelaxQraBBOs95N5YLsL8SENBA%2BovQZX2M%2Buf3hLh2edJAaP6%2FKfEmkWKmYLI6k8EQMmu16xZQaNuB0DOJJ%2BD44YMoqL%2F4%2FVQHga%2FasDWFI7JnX"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23f9ab8c2550-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 80,
  "title": "labore in ex et explicabo corporis aut quas",
  "body": "ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias provident\nminus incidunt vero fugit rerum sint sunt excepturi provident"
} 
 </msg>
<msg timestamp="20210205 08:57:26.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.425" endtime="20210205 08:57:26.614"></status>
</kw>
<msg timestamp="20210205 08:57:26.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.423" endtime="20210205 08:57:26.614"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:26.617" endtime="20210205 08:57:26.620"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.616" endtime="20210205 08:57:26.620"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.615" endtime="20210205 08:57:26.620"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:26.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.622" endtime="20210205 08:57:26.622"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.621" endtime="20210205 08:57:26.623"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.624" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:26.624" endtime="20210205 08:57:26.624"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.687" level="INFO">${idvalue} = [80]</msg>
<status status="PASS" starttime="20210205 08:57:26.624" endtime="20210205 08:57:26.687"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:26.688" level="INFO">${responseid} = 80</msg>
<status status="PASS" starttime="20210205 08:57:26.687" endtime="20210205 08:57:26.688"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:26.688" endtime="20210205 08:57:26.688"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.688" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:26.688" endtime="20210205 08:57:26.688"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.623" endtime="20210205 08:57:26.688"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.423" endtime="20210205 08:57:26.688"></status>
</kw>
<kw name="${i} = 81" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:26.689" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:26.689" endtime="20210205 08:57:26.689"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:26.829" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/81 
 path_url=/posts/81 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:26.829" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/81 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de110b1b92e315869b49e58a55af26a651612533446; expires=Sun, 07-Mar-21 13:57:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '926', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"132-WQvU4RaGGtekXO5F/gjY3m5r2rE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d09b0000296a67a2d000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ddX%2FKc4BXA%2BmpD9h69xM%2Fhbg6xUkKhf5jVWEhC2%2F7obMNrMMiaDMqi3EO4BBO4XXu35Hxv%2BSVSqIMEsMMPjgem23oAKeXRqqaxjTvzxtqUt%2FARhRC2NIY1HSQm0M"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23fa9c4c296a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 81,
  "title": "tempora rem veritatis voluptas quo dolores vero",
  "body": "facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum non ratione velit laboriosam quis consequuntur\nex officiis minima doloremque voluptas ut aut"
} 
 </msg>
<msg timestamp="20210205 08:57:26.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.689" endtime="20210205 08:57:26.830"></status>
</kw>
<msg timestamp="20210205 08:57:26.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.689" endtime="20210205 08:57:26.830"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:26.833" endtime="20210205 08:57:26.835"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.832" endtime="20210205 08:57:26.835"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.831" endtime="20210205 08:57:26.836"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:26.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.837" endtime="20210205 08:57:26.838"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.836" endtime="20210205 08:57:26.838"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.839" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:26.839" endtime="20210205 08:57:26.839"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.902" level="INFO">${idvalue} = [81]</msg>
<status status="PASS" starttime="20210205 08:57:26.840" endtime="20210205 08:57:26.902"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:26.903" level="INFO">${responseid} = 81</msg>
<status status="PASS" starttime="20210205 08:57:26.902" endtime="20210205 08:57:26.903"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:26.903" endtime="20210205 08:57:26.904"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.904" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:26.904" endtime="20210205 08:57:26.905"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.838" endtime="20210205 08:57:26.905"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.688" endtime="20210205 08:57:26.905"></status>
</kw>
<kw name="${i} = 82" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:26.907" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:26.906" endtime="20210205 08:57:26.907"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:26.968" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/82 
 path_url=/posts/82 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:26.968" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/82 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d46154a77c780a4829ff2343ae0f0e1411612533447; expires=Sun, 07-Mar-21 13:57:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '929', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11c-eeFdAk1e1gEi8uyXsudyKBm1kV0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d1780000009390a21000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=8Tp2r%2BKOg1cCYTbKrdfOflPrvuHQr7jUTntj6nZLp5BLr90%2BP3aWHpsCgT3SL%2Fr7vphQq4Ee21iVe%2BCOwVPjkXSOsUiQKHPVUoDJ7s%2Fe7QamLYwop9v57NokGBZJ"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23fbfbfb0093-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 82,
  "title": "laudantium voluptate suscipit sunt enim enim",
  "body": "ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus adipisci\ndolor enim assumenda soluta laboriosam amet iste delectus hic"
} 
 </msg>
<msg timestamp="20210205 08:57:26.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.907" endtime="20210205 08:57:26.969"></status>
</kw>
<msg timestamp="20210205 08:57:26.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.905" endtime="20210205 08:57:26.969"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:26.972" endtime="20210205 08:57:26.975"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.971" endtime="20210205 08:57:26.975"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.969" endtime="20210205 08:57:26.975"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:26.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:26.977" endtime="20210205 08:57:26.977"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.975" endtime="20210205 08:57:26.977"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:26.979" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:26.978" endtime="20210205 08:57:26.979"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.031" level="INFO">${idvalue} = [82]</msg>
<status status="PASS" starttime="20210205 08:57:26.979" endtime="20210205 08:57:27.031"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:27.032" level="INFO">${responseid} = 82</msg>
<status status="PASS" starttime="20210205 08:57:27.032" endtime="20210205 08:57:27.033"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:27.033" endtime="20210205 08:57:27.033"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.034" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:27.034" endtime="20210205 08:57:27.034"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.978" endtime="20210205 08:57:27.035"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:26.905" endtime="20210205 08:57:27.035"></status>
</kw>
<kw name="${i} = 83" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:27.037" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:27.036" endtime="20210205 08:57:27.037"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:27.141" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/83 
 path_url=/posts/83 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:27.141" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/83 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9d4b6fefd1595dd13e70e398916cbe1f1612533447; expires=Sun, 07-Mar-21 13:57:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612010777', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11d-e5gcZg196MbfLRv+N5/t/INg4U4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d2240000f49e36995000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=kSE0Mx1M6vHMtXZaEsf%2FXht3nvaDYNPlEReK7tsOCkHgafn7NCoKezY5UcUse0Rj8wChH92LFOLz%2B0njHnZp%2BVo%2BrtPgJ8RdYJrS7xg%2Bpo5mtHqFC7BFaok8oEnF"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23fd0c21f49e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 83,
  "title": "odit et voluptates doloribus alias odio et",
  "body": "est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\nreprehenderit eius rem quibusdam"
} 
 </msg>
<msg timestamp="20210205 08:57:27.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.038" endtime="20210205 08:57:27.142"></status>
</kw>
<msg timestamp="20210205 08:57:27.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.035" endtime="20210205 08:57:27.142"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:27.145" endtime="20210205 08:57:27.148"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.144" endtime="20210205 08:57:27.148"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.143" endtime="20210205 08:57:27.148"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:27.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.150" endtime="20210205 08:57:27.150"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.149" endtime="20210205 08:57:27.151"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.152" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:27.152" endtime="20210205 08:57:27.152"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.259" level="INFO">${idvalue} = [83]</msg>
<status status="PASS" starttime="20210205 08:57:27.152" endtime="20210205 08:57:27.259"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:27.260" level="INFO">${responseid} = 83</msg>
<status status="PASS" starttime="20210205 08:57:27.259" endtime="20210205 08:57:27.260"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:27.260" endtime="20210205 08:57:27.261"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.261" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:27.261" endtime="20210205 08:57:27.261"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.151" endtime="20210205 08:57:27.261"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.035" endtime="20210205 08:57:27.262"></status>
</kw>
<kw name="${i} = 84" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:27.263" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:27.263" endtime="20210205 08:57:27.264"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:27.399" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/84 
 path_url=/posts/84 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:27.399" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/84 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d62581e88ce4a320e24635677b934853a1612533447; expires=Sun, 07-Mar-21 13:57:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '927', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10f-9j78zFP2xPokwlOnDdjXgjDNtRw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d32e0000296aa0ac2000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=bQmqtbAMhOV8LMxjGr03mfA1d9b2lb2jmfFS3eo8H0rcHe%2BDTS8qu%2Fs%2BGxMUPmUPHKulsd1mh2fF4fiOwEdCq%2BDVsiMCWktYQPIzMeENdnsfXChjscclpa%2BvEx2k"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd23febbc1296a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 84,
  "title": "optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut",
  "body": "sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique veniam\nrecusandae dignissimos dolor incidunt consequatur odio"
} 
 </msg>
<msg timestamp="20210205 08:57:27.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.264" endtime="20210205 08:57:27.400"></status>
</kw>
<msg timestamp="20210205 08:57:27.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.262" endtime="20210205 08:57:27.400"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:27.403" endtime="20210205 08:57:27.406"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.402" endtime="20210205 08:57:27.406"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.401" endtime="20210205 08:57:27.406"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:27.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.407" endtime="20210205 08:57:27.408"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.406" endtime="20210205 08:57:27.408"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.410" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:27.409" endtime="20210205 08:57:27.410"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.452" level="INFO">${idvalue} = [84]</msg>
<status status="PASS" starttime="20210205 08:57:27.410" endtime="20210205 08:57:27.453"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:27.453" level="INFO">${responseid} = 84</msg>
<status status="PASS" starttime="20210205 08:57:27.453" endtime="20210205 08:57:27.453"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:27.454" endtime="20210205 08:57:27.454"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.455" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:27.454" endtime="20210205 08:57:27.455"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.409" endtime="20210205 08:57:27.455"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.262" endtime="20210205 08:57:27.455"></status>
</kw>
<kw name="${i} = 85" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:27.457" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:27.457" endtime="20210205 08:57:27.458"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:27.620" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/85 
 path_url=/posts/85 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:27.620" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/85 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d38de2cc971b785d8fe653cf444aa605a1612533447; expires=Sun, 07-Mar-21 13:57:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '926', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-EiZY//e3eHc6o7YCr0c2BxbG4NU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d39e0000e0ee4c1e3000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=aBY7F9kqrbxlR8skdXHZuydANVH14vn2yidatM%2F2w31X6cSQhuBlYVxBpeoJcghoejnYTVPHRleszz0mL5q0bNJqRNXoSmfro2YzHx%2Fvi%2B%2BC5prtPLncR%2Bse%2FT5g"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd23ff6b64e0ee-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 85,
  "title": "dolore veritatis porro provident adipisci blanditiis et sunt",
  "body": "similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam sint sed tempora\nenim provident pariatur praesentium atque animi amet ratione"
} 
 </msg>
<msg timestamp="20210205 08:57:27.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.458" endtime="20210205 08:57:27.620"></status>
</kw>
<msg timestamp="20210205 08:57:27.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.456" endtime="20210205 08:57:27.621"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:27.623" endtime="20210205 08:57:27.626"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.622" endtime="20210205 08:57:27.626"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.621" endtime="20210205 08:57:27.626"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:27.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.627" endtime="20210205 08:57:27.628"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.626" endtime="20210205 08:57:27.628"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.630" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:27.629" endtime="20210205 08:57:27.630"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.685" level="INFO">${idvalue} = [85]</msg>
<status status="PASS" starttime="20210205 08:57:27.630" endtime="20210205 08:57:27.685"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:27.686" level="INFO">${responseid} = 85</msg>
<status status="PASS" starttime="20210205 08:57:27.685" endtime="20210205 08:57:27.686"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:27.686" endtime="20210205 08:57:27.687"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.687" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:27.687" endtime="20210205 08:57:27.688"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.629" endtime="20210205 08:57:27.688"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.455" endtime="20210205 08:57:27.688"></status>
</kw>
<kw name="${i} = 86" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:27.690" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:27.689" endtime="20210205 08:57:27.690"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:27.884" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/86 
 path_url=/posts/86 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:27.884" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/86 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d86c53a9d0cc9b7135be570318c9f6f601612533447; expires=Sun, 07-Mar-21 13:57:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '925', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"102-z1kgT9P52YzKL5Lr1auwY9AtvAY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d486000002ef51200000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=0msv%2Bf0ngVF0VkPit1S5Iya5ro41Qq6s20r5cKryZsUvx9O4CegzGlg2Fku3Ai0ThxTx07SahtRWdIvm4FL8Q%2BBYb5Cd8xVyVEQ7aaactaop%2FUjhT%2BTlAFoKHkGF"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd2400d88402ef-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 86,
  "title": "placeat quia et porro iste",
  "body": "quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel explicabo autem\nasperiores pariatur deserunt optio"
} 
 </msg>
<msg timestamp="20210205 08:57:27.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.691" endtime="20210205 08:57:27.884"></status>
</kw>
<msg timestamp="20210205 08:57:27.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.688" endtime="20210205 08:57:27.885"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:27.887" endtime="20210205 08:57:27.890"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.886" endtime="20210205 08:57:27.890"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.885" endtime="20210205 08:57:27.891"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:27.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.892" endtime="20210205 08:57:27.892"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.891" endtime="20210205 08:57:27.893"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.894" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:27.894" endtime="20210205 08:57:27.894"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.958" level="INFO">${idvalue} = [86]</msg>
<status status="PASS" starttime="20210205 08:57:27.894" endtime="20210205 08:57:27.958"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:27.959" level="INFO">${responseid} = 86</msg>
<status status="PASS" starttime="20210205 08:57:27.958" endtime="20210205 08:57:27.959"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:27.959" endtime="20210205 08:57:27.960"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:27.961" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:27.960" endtime="20210205 08:57:27.961"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.893" endtime="20210205 08:57:27.961"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.688" endtime="20210205 08:57:27.961"></status>
</kw>
<kw name="${i} = 87" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:27.963" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:27.963" endtime="20210205 08:57:27.964"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:28.021" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/87 
 path_url=/posts/87 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:28.021" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/87 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de089aa9ee73952d430ea3aa99b13854d1612533448; expires=Sun, 07-Mar-21 13:57:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '924', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"c1-StXbFLxw6d815/mITyDVkJUK2xI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d5970000096b30ada000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Oxm%2FdwNDpfX40snNyVct3SsUVBan%2B%2B3LnFDuxcOyUyIOAXSE9uoJUbtPWvloxSzUcUZ3sNH%2Fff%2BV0Vq2BpMrZAtk8KSZwuZEPC0BWUhIF4ewzL8Hqhq1M7xIU7ih"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd24028c72096b-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 87,
  "title": "nostrum quis quasi placeat",
  "body": "eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est"
} 
 </msg>
<msg timestamp="20210205 08:57:28.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.964" endtime="20210205 08:57:28.022"></status>
</kw>
<msg timestamp="20210205 08:57:28.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:27.961" endtime="20210205 08:57:28.022"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:28.025" endtime="20210205 08:57:28.028"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.023" endtime="20210205 08:57:28.028"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.022" endtime="20210205 08:57:28.028"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:28.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.030" endtime="20210205 08:57:28.030"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.029" endtime="20210205 08:57:28.031"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.032" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:28.032" endtime="20210205 08:57:28.032"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.079" level="INFO">${idvalue} = [87]</msg>
<status status="PASS" starttime="20210205 08:57:28.032" endtime="20210205 08:57:28.079"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:28.079" level="INFO">${responseid} = 87</msg>
<status status="PASS" starttime="20210205 08:57:28.079" endtime="20210205 08:57:28.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:28.079" endtime="20210205 08:57:28.080"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.080" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:28.080" endtime="20210205 08:57:28.080"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.031" endtime="20210205 08:57:28.080"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:27.961" endtime="20210205 08:57:28.080"></status>
</kw>
<kw name="${i} = 88" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:28.081" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:28.081" endtime="20210205 08:57:28.081"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:28.195" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/88 
 path_url=/posts/88 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:28.195" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/88 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5b4bb1fc871e5c30b73c76d209a820f61612533448; expires=Sun, 07-Mar-21 13:57:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '924', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"bf-99RNmrovk8IKMxPgFxxzF7hL4oc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d648000038233734c000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=DP4RdSfWwgGN1xMzBa2PWi4BUXRnkfe5wsWM2BZCJU7KGn4kdco6hOe2bYxAxf8XMmw%2BKWWfhQdFIoaW9%2B4BI2512uy1HgkzvA1T%2BzdTnVAStAqgbpGfnbOWhLlk"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd2403adc33823-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 88,
  "title": "sapiente omnis fugit eos",
  "body": "consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed"
} 
 </msg>
<msg timestamp="20210205 08:57:28.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.081" endtime="20210205 08:57:28.196"></status>
</kw>
<msg timestamp="20210205 08:57:28.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.080" endtime="20210205 08:57:28.196"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:28.198" endtime="20210205 08:57:28.201"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.197" endtime="20210205 08:57:28.201"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.196" endtime="20210205 08:57:28.202"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:28.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.203" endtime="20210205 08:57:28.204"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.202" endtime="20210205 08:57:28.204"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.205" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:28.205" endtime="20210205 08:57:28.205"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.271" level="INFO">${idvalue} = [88]</msg>
<status status="PASS" starttime="20210205 08:57:28.205" endtime="20210205 08:57:28.271"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:28.272" level="INFO">${responseid} = 88</msg>
<status status="PASS" starttime="20210205 08:57:28.271" endtime="20210205 08:57:28.272"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:28.272" endtime="20210205 08:57:28.273"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.273" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:28.273" endtime="20210205 08:57:28.273"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.204" endtime="20210205 08:57:28.274"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.080" endtime="20210205 08:57:28.274"></status>
</kw>
<kw name="${i} = 89" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:28.276" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:28.275" endtime="20210205 08:57:28.276"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:28.414" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/89 
 path_url=/posts/89 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:28.415" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/89 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d94ca1bdd137c660fbe27d87e1373c84c1612533448; expires=Sun, 07-Mar-21 13:57:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '918', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-AJIAh/kcPdTbwy1rCjIlUhHPTtE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d6d0000073ddf3885000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2FlQdDh%2Fp1FRY3f%2FR90f2MRLEh5useMTL6e1BKfkLagi%2F6KKBUayT9BpaFj6KQQOanTmS2NZhcc7z2PcytsP6xo2UmXQOaUEbx2sDHfUUJG8Xg9xgbJV5vwouoyDS"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd24047f5573dd-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 89,
  "title": "sint soluta et vel magnam aut ut sed qui",
  "body": "repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\ntempore quas est"
} 
 </msg>
<msg timestamp="20210205 08:57:28.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.276" endtime="20210205 08:57:28.415"></status>
</kw>
<msg timestamp="20210205 08:57:28.416" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.274" endtime="20210205 08:57:28.416"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:28.418" endtime="20210205 08:57:28.421"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.417" endtime="20210205 08:57:28.421"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.416" endtime="20210205 08:57:28.421"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:28.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.422" endtime="20210205 08:57:28.423"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.421" endtime="20210205 08:57:28.423"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.424" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:28.424" endtime="20210205 08:57:28.425"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.487" level="INFO">${idvalue} = [89]</msg>
<status status="PASS" starttime="20210205 08:57:28.425" endtime="20210205 08:57:28.488"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:28.489" level="INFO">${responseid} = 89</msg>
<status status="PASS" starttime="20210205 08:57:28.488" endtime="20210205 08:57:28.489"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:28.489" endtime="20210205 08:57:28.489"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.490" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:28.490" endtime="20210205 08:57:28.490"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.423" endtime="20210205 08:57:28.491"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.274" endtime="20210205 08:57:28.491"></status>
</kw>
<kw name="${i} = 90" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:28.493" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:28.492" endtime="20210205 08:57:28.493"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:28.552" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/90 
 path_url=/posts/90 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:28.552" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/90 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d58fc872a739abc7fa690f1cdd876fa501612533448; expires=Sun, 07-Mar-21 13:57:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '921', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fa-J+W5iw5qyzTS6afRH4pq7cvG7wg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d7a9000095908c3a0000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BUw4TVmOjLMRf3l2wlsv56yeu01jw7DYtJUHxySVyWm861iL%2FQX9Ru1xCnzWhzGidJKefudKMLXH%2FuIHaZolUsj%2BZw5713UQ4RbUYQY7t3Jibt9SxeqF8QTYSPpa"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd2405d8ed9590-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 90,
  "title": "ad iusto omnis odit dolor voluptatibus",
  "body": "minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta similique molestias praesentium blanditiis"
} 
 </msg>
<msg timestamp="20210205 08:57:28.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.493" endtime="20210205 08:57:28.553"></status>
</kw>
<msg timestamp="20210205 08:57:28.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.491" endtime="20210205 08:57:28.554"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:28.556" endtime="20210205 08:57:28.559"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.555" endtime="20210205 08:57:28.559"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.554" endtime="20210205 08:57:28.559"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:28.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.561" endtime="20210205 08:57:28.561"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.560" endtime="20210205 08:57:28.562"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.563" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:28.563" endtime="20210205 08:57:28.563"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.620" level="INFO">${idvalue} = [90]</msg>
<status status="PASS" starttime="20210205 08:57:28.563" endtime="20210205 08:57:28.620"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:28.621" level="INFO">${responseid} = 90</msg>
<status status="PASS" starttime="20210205 08:57:28.620" endtime="20210205 08:57:28.621"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:28.621" endtime="20210205 08:57:28.622"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.623" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:28.622" endtime="20210205 08:57:28.623"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.562" endtime="20210205 08:57:28.623"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.491" endtime="20210205 08:57:28.623"></status>
</kw>
<kw name="${i} = 91" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:28.625" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:28.624" endtime="20210205 08:57:28.626"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:28.747" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/91 
 path_url=/posts/91 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:28.747" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/91 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db3e7718a87e6381b6ad2d31449cb433a1612533448; expires=Sun, 07-Mar-21 13:57:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '929', 'X-Ratelimit-Reset': '1611283708', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e5-l9aQa2/gJFY5FFG1O9x9F+UJRfA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d85b0000746ab32a3000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=C5yZ%2B4krLZbC8HLl02pPwoOUFc%2B2rbp%2BmX3mxfbPst1gqsyZuCoocOs1EjmyawWlORqtxk5S6C1TjmdowM8hxLSqlGBycFkG2bYvbDREgpd4y4%2BsUGwNkTzlXA1b"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd2406f953746a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 91,
  "title": "aut amet sed",
  "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
} 
 </msg>
<msg timestamp="20210205 08:57:28.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.626" endtime="20210205 08:57:28.748"></status>
</kw>
<msg timestamp="20210205 08:57:28.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.623" endtime="20210205 08:57:28.748"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:28.751" endtime="20210205 08:57:28.754"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.750" endtime="20210205 08:57:28.754"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.749" endtime="20210205 08:57:28.754"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:28.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.755" endtime="20210205 08:57:28.756"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.754" endtime="20210205 08:57:28.756"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.758" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:28.757" endtime="20210205 08:57:28.758"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.820" level="INFO">${idvalue} = [91]</msg>
<status status="PASS" starttime="20210205 08:57:28.758" endtime="20210205 08:57:28.820"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:28.821" level="INFO">${responseid} = 91</msg>
<status status="PASS" starttime="20210205 08:57:28.820" endtime="20210205 08:57:28.821"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:28.821" endtime="20210205 08:57:28.822"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:28.823" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:28.822" endtime="20210205 08:57:28.823"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.757" endtime="20210205 08:57:28.823"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.623" endtime="20210205 08:57:28.823"></status>
</kw>
<kw name="${i} = 92" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:28.825" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:28.824" endtime="20210205 08:57:28.825"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:28.998" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/92 
 path_url=/posts/92 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:28.998" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/92 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d03db6ead9d80b76fc8f9bbfa1d5b1ad31612533449; expires=Sun, 07-Mar-21 13:57:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '920', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e3-XfDSGc/SGdffvPSz0KEalY/lSfk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d9670000cef45f139000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=i7Z7y%2FCaJEhz3di7jdmaTUSri%2FM%2F0RhxuyGfGLAs9XvDUnISpiM6a1v6dTgfcvp%2BfQt%2FAHZSGk39GoMzB%2FF2P8sxKaC5W63JCg4IH5d8ysp6j4b40zZBhk0%2FBCNT"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd2408a810cef4-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 92,
  "title": "ratione ex tenetur perferendis",
  "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
} 
 </msg>
<msg timestamp="20210205 08:57:28.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.825" endtime="20210205 08:57:28.999"></status>
</kw>
<msg timestamp="20210205 08:57:28.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:28.823" endtime="20210205 08:57:28.999"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.002" endtime="20210205 08:57:29.005"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.001" endtime="20210205 08:57:29.005"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.000" endtime="20210205 08:57:29.005"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.007" endtime="20210205 08:57:29.007"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.006" endtime="20210205 08:57:29.008"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.009" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.009" endtime="20210205 08:57:29.009"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.046" level="INFO">${idvalue} = [92]</msg>
<status status="PASS" starttime="20210205 08:57:29.009" endtime="20210205 08:57:29.046"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:29.046" level="INFO">${responseid} = 92</msg>
<status status="PASS" starttime="20210205 08:57:29.046" endtime="20210205 08:57:29.046"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.046" endtime="20210205 08:57:29.046"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.047" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.047" endtime="20210205 08:57:29.047"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.008" endtime="20210205 08:57:29.047"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:28.823" endtime="20210205 08:57:29.047"></status>
</kw>
<kw name="${i} = 93" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.048" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:29.047" endtime="20210205 08:57:29.048"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:29.124" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/93 
 path_url=/posts/93 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:29.124" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/93 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5a7d6b04a24c1d9c143e27fed38680b31612533449; expires=Sun, 07-Mar-21 13:57:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611557052', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"107-ePXZ2FoBjuryDSZ4+6vLe92vrBs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414d9d1000029af379b9000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=c6cx4GxFJq5wIuKf%2B9zsRSsrbFXN0dKQ84cixd6BAFwD4OM68TGztYe1UdV1uXfMrmy6mMKZwrRpEIFUiPTnGFVmlLbbnEuBGU4aNiJ0maklU%2BwG9eVcfSgDVvCr"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd24094ed829af-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 93,
  "title": "beatae soluta recusandae",
  "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
} 
 </msg>
<msg timestamp="20210205 08:57:29.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.048" endtime="20210205 08:57:29.125"></status>
</kw>
<msg timestamp="20210205 08:57:29.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.047" endtime="20210205 08:57:29.125"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.128" endtime="20210205 08:57:29.130"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.126" endtime="20210205 08:57:29.130"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.125" endtime="20210205 08:57:29.131"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.132" endtime="20210205 08:57:29.133"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.131" endtime="20210205 08:57:29.133"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.135" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.134" endtime="20210205 08:57:29.135"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.169" level="INFO">${idvalue} = [93]</msg>
<status status="PASS" starttime="20210205 08:57:29.135" endtime="20210205 08:57:29.169"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:29.170" level="INFO">${responseid} = 93</msg>
<status status="PASS" starttime="20210205 08:57:29.169" endtime="20210205 08:57:29.170"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.170" endtime="20210205 08:57:29.170"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.170" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.170" endtime="20210205 08:57:29.170"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.133" endtime="20210205 08:57:29.170"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.047" endtime="20210205 08:57:29.170"></status>
</kw>
<kw name="${i} = 94" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.171" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:29.171" endtime="20210205 08:57:29.171"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:29.343" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/94 
 path_url=/posts/94 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:29.343" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/94 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8bd9a4597eee600864b31ee21feeafad1612533449; expires=Sun, 07-Mar-21 13:57:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '919', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"108-YgH61+NkjOflAIB5ysSTcOx0QTQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414da4b000002ebf1a66000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=9veaWqdnimSvMbwJWGug%2FghA7dn8vx0F0undaZrQ7QVApBXSdvYNTAe0GoB7Hl78zeY2U8Lif5Qafed07Sarl0bkIHsXtC1%2BCcdhs%2BbgxoKgZ2V1tONvHZoLX5LP"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd240a1f7902eb-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 94,
  "title": "qui qui voluptates illo iste minima",
  "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
} 
 </msg>
<msg timestamp="20210205 08:57:29.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.172" endtime="20210205 08:57:29.344"></status>
</kw>
<msg timestamp="20210205 08:57:29.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.171" endtime="20210205 08:57:29.344"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.347" endtime="20210205 08:57:29.350"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.346" endtime="20210205 08:57:29.350"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.345" endtime="20210205 08:57:29.350"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.351" endtime="20210205 08:57:29.352"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.350" endtime="20210205 08:57:29.352"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.353" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.353" endtime="20210205 08:57:29.353"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.415" level="INFO">${idvalue} = [94]</msg>
<status status="PASS" starttime="20210205 08:57:29.354" endtime="20210205 08:57:29.415"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:29.416" level="INFO">${responseid} = 94</msg>
<status status="PASS" starttime="20210205 08:57:29.415" endtime="20210205 08:57:29.416"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.416" endtime="20210205 08:57:29.417"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.417" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.417" endtime="20210205 08:57:29.418"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.352" endtime="20210205 08:57:29.418"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.171" endtime="20210205 08:57:29.418"></status>
</kw>
<kw name="${i} = 95" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.420" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:29.419" endtime="20210205 08:57:29.420"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:29.509" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/95 
 path_url=/posts/95 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:29.509" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/95 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcd9bfda4a497baa9a21ba3819dca0b761612533449; expires=Sun, 07-Mar-21 13:57:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '918', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"126-rrdOZSpMvdZiiYyTLDi2rkLG/Vw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414db500000e0d2e8357000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Er42xZlc1ERhYuTQ1GqPvCp2jktiRO%2FPc5GzaA8m1XZxg5ZRO2AsCQ1d5rOOm0%2BvLMHEoGsKTVEQhvT1%2FTJZdvHPVglBxbjIdOGujZVsVdfuX5y%2BVB8WP5p6%2FdrQ"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd240bbd62e0d2-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 95,
  "title": "id minus libero illum nam ad officiis",
  "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
} 
 </msg>
<msg timestamp="20210205 08:57:29.510" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.420" endtime="20210205 08:57:29.510"></status>
</kw>
<msg timestamp="20210205 08:57:29.510" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.418" endtime="20210205 08:57:29.510"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.513" endtime="20210205 08:57:29.515"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.512" endtime="20210205 08:57:29.515"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.511" endtime="20210205 08:57:29.516"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.517" endtime="20210205 08:57:29.518"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.516" endtime="20210205 08:57:29.518"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.520" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.519" endtime="20210205 08:57:29.520"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.556" level="INFO">${idvalue} = [95]</msg>
<status status="PASS" starttime="20210205 08:57:29.520" endtime="20210205 08:57:29.556"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:29.556" level="INFO">${responseid} = 95</msg>
<status status="PASS" starttime="20210205 08:57:29.556" endtime="20210205 08:57:29.556"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.556" endtime="20210205 08:57:29.556"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.557" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.557" endtime="20210205 08:57:29.557"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.518" endtime="20210205 08:57:29.557"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.418" endtime="20210205 08:57:29.557"></status>
</kw>
<kw name="${i} = 96" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.558" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:29.557" endtime="20210205 08:57:29.558"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:29.627" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/96 
 path_url=/posts/96 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:29.627" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/96 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbc0114e4accdca70c7573ed1f2a534551612533449; expires=Sun, 07-Mar-21 13:57:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '909', 'X-Ratelimit-Reset': '1611704501', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-7coBGYTlaO8bCv0lNSqoAlkoszE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414dbd2000029d29eade000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=hEeVfqxah8vlvft9yWejMZzeMPI14zbdxQ%2FyNXX3XkmmRb10oBzEfEM%2FSIz2FjYbqfnCBHIyoqhzz0QexqYR1p2XlbZ2E3PPbuC%2FIzXYKuWd2KHzBLs6EP81%2Fw8K"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd240c8a0429d2-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 96,
  "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
  "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
} 
 </msg>
<msg timestamp="20210205 08:57:29.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.558" endtime="20210205 08:57:29.628"></status>
</kw>
<msg timestamp="20210205 08:57:29.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.557" endtime="20210205 08:57:29.629"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.631" endtime="20210205 08:57:29.635"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.630" endtime="20210205 08:57:29.635"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.629" endtime="20210205 08:57:29.635"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.637" endtime="20210205 08:57:29.638"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.636" endtime="20210205 08:57:29.638"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.640" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.640" endtime="20210205 08:57:29.641"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.694" level="INFO">${idvalue} = [96]</msg>
<status status="PASS" starttime="20210205 08:57:29.641" endtime="20210205 08:57:29.695"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:29.695" level="INFO">${responseid} = 96</msg>
<status status="PASS" starttime="20210205 08:57:29.695" endtime="20210205 08:57:29.695"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.695" endtime="20210205 08:57:29.695"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.696" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.695" endtime="20210205 08:57:29.696"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.638" endtime="20210205 08:57:29.696"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.557" endtime="20210205 08:57:29.696"></status>
</kw>
<kw name="${i} = 97" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.697" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:29.696" endtime="20210205 08:57:29.697"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:29.754" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/97 
 path_url=/posts/97 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:29.754" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/97 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0e3f7042aacbc50ffa557e69d043c0921612533449; expires=Sun, 07-Mar-21 13:57:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '916', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"13f-OIy2AGGq8mYJVydBUqG+k5NoCF4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414dc5c000029eb13a5c000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=IfP%2FWc26ruXR5QoEbeLXbkU1dx7CftGgBOXMlBvtnoE0ekxu%2BN8KFQ7%2FERg%2Fm%2FFtIplRM9vd6HJHUdgR%2BoUD4b4OUulPDuzLQDJFa3V5QJWbsPfrwo3fzDMusqJ0"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd240d6d1129eb-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 97,
  "title": "quas fugiat ut perspiciatis vero provident",
  "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
} 
 </msg>
<msg timestamp="20210205 08:57:29.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.697" endtime="20210205 08:57:29.755"></status>
</kw>
<msg timestamp="20210205 08:57:29.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.696" endtime="20210205 08:57:29.755"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.758" endtime="20210205 08:57:29.760"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.757" endtime="20210205 08:57:29.760"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.755" endtime="20210205 08:57:29.761"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.762" endtime="20210205 08:57:29.763"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.761" endtime="20210205 08:57:29.763"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.764" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.764" endtime="20210205 08:57:29.764"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.816" level="INFO">${idvalue} = [97]</msg>
<status status="PASS" starttime="20210205 08:57:29.765" endtime="20210205 08:57:29.816"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:29.816" level="INFO">${responseid} = 97</msg>
<status status="PASS" starttime="20210205 08:57:29.816" endtime="20210205 08:57:29.816"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.816" endtime="20210205 08:57:29.816"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.817" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.817" endtime="20210205 08:57:29.817"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.763" endtime="20210205 08:57:29.817"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.696" endtime="20210205 08:57:29.817"></status>
</kw>
<kw name="${i} = 98" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.818" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:29.817" endtime="20210205 08:57:29.818"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:29.880" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/98 
 path_url=/posts/98 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:29.880" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/98 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db84d6351b3efb220e563fb0e38c680271612533449; expires=Sun, 07-Mar-21 13:57:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '908', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d1-AdCHAQW37rE37t8vXTeQZeKV7Cg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414dcd50000c1ac75ad3000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=eWO9k3b0edMCK%2BsNmKd7xdyug6wEHE2hiFaXC9WabjcVuYxsEqfRXokTDz41OMAGGWSdkh73XX9NZ4%2FTXwKIbz2GkOfBB709LDQxgW00jwkY%2BfMGZjG4xmP%2BFQt0"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd240e2a60c1ac-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 98,
  "title": "laboriosam dolor voluptates",
  "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
} 
 </msg>
<msg timestamp="20210205 08:57:29.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.818" endtime="20210205 08:57:29.881"></status>
</kw>
<msg timestamp="20210205 08:57:29.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.817" endtime="20210205 08:57:29.881"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.884" endtime="20210205 08:57:29.886"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.883" endtime="20210205 08:57:29.887"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.881" endtime="20210205 08:57:29.887"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.888" endtime="20210205 08:57:29.889"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.887" endtime="20210205 08:57:29.889"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.891" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.890" endtime="20210205 08:57:29.891"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.936" level="INFO">${idvalue} = [98]</msg>
<status status="PASS" starttime="20210205 08:57:29.891" endtime="20210205 08:57:29.936"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:29.937" level="INFO">${responseid} = 98</msg>
<status status="PASS" starttime="20210205 08:57:29.937" endtime="20210205 08:57:29.937"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:29.937" endtime="20210205 08:57:29.937"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:29.938" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:29.938" endtime="20210205 08:57:29.938"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.889" endtime="20210205 08:57:29.938"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.817" endtime="20210205 08:57:29.938"></status>
</kw>
<kw name="${i} = 99" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:29.939" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:29.939" endtime="20210205 08:57:29.939"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:29.997" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/99 
 path_url=/posts/99 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:29.998" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/99 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df707a4a92080fc05410da922c44895f81612533450; expires=Sun, 07-Mar-21 13:57:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '913', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e0-aXopzb0YfAN1tmSD/RVNZPaEz8g"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414dd4e0000742548bae000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=0NkdkIOGUdIHKYFja6TzSrODQOFjuRtRjfzIAujFpJt5iIkGrzhTnmwzvS3%2BbDSP5bZZ1brCtPzn2PlfmrBLmftf38eUWkiyZqbgmL7wrvMKykIValJzHtV759ff"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd240eec267425-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 99,
  "title": "temporibus sit alias delectus eligendi possimus magni",
  "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
} 
 </msg>
<msg timestamp="20210205 08:57:29.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.939" endtime="20210205 08:57:29.998"></status>
</kw>
<msg timestamp="20210205 08:57:29.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:29.938" endtime="20210205 08:57:29.999"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.001" endtime="20210205 08:57:30.004"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.000" endtime="20210205 08:57:30.004"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.999" endtime="20210205 08:57:30.005"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.006" endtime="20210205 08:57:30.007"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.005" endtime="20210205 08:57:30.007"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.008" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:30.008" endtime="20210205 08:57:30.008"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.059" level="INFO">${idvalue} = [99]</msg>
<status status="PASS" starttime="20210205 08:57:30.009" endtime="20210205 08:57:30.059"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:30.060" level="INFO">${responseid} = 99</msg>
<status status="PASS" starttime="20210205 08:57:30.060" endtime="20210205 08:57:30.060"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.060" endtime="20210205 08:57:30.061"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.062" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:30.061" endtime="20210205 08:57:30.062"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.007" endtime="20210205 08:57:30.062"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:29.938" endtime="20210205 08:57:30.062"></status>
</kw>
<kw name="${i} = 100" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${i}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.063" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:30.063" endtime="20210205 08:57:30.064"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:30.142" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:30.142" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d20198cf4242c1a9bb588dd687c9eab6e1612533450; expires=Sun, 07-Mar-21 13:57:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '914', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414ddcd0000ced00b32d000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=iMXb5jlq5KXqw4MmJ14Accn9HRoUVtOcE0XCCMIv1GXbwAKFsBNDGbOwZicw4tduMoXU6BfzPTTsPfTr%2BNagZs7b7UmCDK1fpGbOrRwOBhAG%2BbMBeVssY2zPzHBh"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd240fa9eeced0-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<msg timestamp="20210205 08:57:30.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.064" endtime="20210205 08:57:30.143"></status>
</kw>
<msg timestamp="20210205 08:57:30.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.062" endtime="20210205 08:57:30.143"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.146" endtime="20210205 08:57:30.149"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.144" endtime="20210205 08:57:30.149"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.144" endtime="20210205 08:57:30.149"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="APIHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.150" endtime="20210205 08:57:30.151"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.149" endtime="20210205 08:57:30.151"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="APIHelper">
<arguments>
<arg>${response}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.152" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:30.152" endtime="20210205 08:57:30.153"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.215" level="INFO">${idvalue} = [100]</msg>
<status status="PASS" starttime="20210205 08:57:30.153" endtime="20210205 08:57:30.215"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 08:57:30.216" level="INFO">${responseid} = 100</msg>
<status status="PASS" starttime="20210205 08:57:30.215" endtime="20210205 08:57:30.216"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.216" endtime="20210205 08:57:30.217"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.218" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:30.217" endtime="20210205 08:57:30.218"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.151" endtime="20210205 08:57:30.218"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.062" endtime="20210205 08:57:30.218"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:12.386" endtime="20210205 08:57:30.218"></status>
</kw>
<doc>Validate Response for Getting post by passing single post id</doc>
<tags>
<tag>Positive</tag>
</tags>
<status status="PASS" starttime="20210205 08:57:12.365" endtime="20210205 08:57:30.219" critical="yes"></status>
</test>
<test id="s1-t3" name="TC003 VALIDATE GET POST BY INVALID ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="APIHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 08:57:30.225" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 08:57:30.223" endtime="20210205 08:57:30.225"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 08:57:30.227" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:30.225" endtime="20210205 08:57:30.227"></status>
</kw>
<msg timestamp="20210205 08:57:30.228" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:30.222" endtime="20210205 08:57:30.228"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>size</arg>
<arg>allposts</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.232" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 08:57:30.230" endtime="20210205 08:57:30.232"></status>
</kw>
<msg timestamp="20210205 08:57:30.233" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 08:57:30.228" endtime="20210205 08:57:30.233"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>user</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${segmentationcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.236" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.235" endtime="20210205 08:57:30.236"></status>
</kw>
<msg timestamp="20210205 08:57:30.237" level="INFO">${segmentationcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.233" endtime="20210205 08:57:30.237"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>user</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${singleuserid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.240" level="INFO">${tempvalue} = 3</msg>
<status status="PASS" starttime="20210205 08:57:30.238" endtime="20210205 08:57:30.240"></status>
</kw>
<msg timestamp="20210205 08:57:30.240" level="INFO">${singleuserid} = 3</msg>
<status status="PASS" starttime="20210205 08:57:30.237" endtime="20210205 08:57:30.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.242" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:30.241" endtime="20210205 08:57:30.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>GET_Posts.json</arg>
</arguments>
<msg timestamp="20210205 08:57:30.243" level="INFO">${templatefile} = GET_Posts.json</msg>
<status status="PASS" starttime="20210205 08:57:30.242" endtime="20210205 08:57:30.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.244" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 08:57:30.243" endtime="20210205 08:57:30.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${segmentcnt}</arg>
<arg>${segmentationcount}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.245" level="INFO">${segmentcnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.244" endtime="20210205 08:57:30.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${singleuser}</arg>
<arg>${singleuserid}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.245" level="INFO">${singleuser} = 3</msg>
<status status="PASS" starttime="20210205 08:57:30.245" endtime="20210205 08:57:30.246"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.222" endtime="20210205 08:57:30.246"></status>
</kw>
<kw name="GET POST BY INVALID ID" library="APIHelper">
<arguments>
<arg>0</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 08:57:30.250" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 08:57:30.248" endtime="20210205 08:57:30.250"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 08:57:30.251" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:30.250" endtime="20210205 08:57:30.251"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.255" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:30.254" endtime="20210205 08:57:30.257"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:30.325" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/0 
 path_url=/posts/0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:30.325" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/0 
 status=404, reason=Not Found 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d172afc12ebccd809cbe07d280c6189831612533450; expires=Sun, 07-Mar-21 13:57:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '905', 'X-Ratelimit-Reset': '1612533471', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'EXPIRED', 'cf-request-id': '081414de910000cf20b9955000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=FDzK63wahbGKW53RH1DGi1WcLllmHBgUJBBShcbQZk9jArMMCTBEk%2F0QmlnLXw%2BxatcB57N%2FfeJ35EVNJ9nQszcD0ZsddLTkytDx61JI%2Fn%2B6WUEGCiC9%2BuiCzEJY"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd2410eb91cf20-IAD'} 
 body={} 
 </msg>
<msg timestamp="20210205 08:57:30.333" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/0</msg>
<status status="FAIL" starttime="20210205 08:57:30.257" endtime="20210205 08:57:30.333"></status>
</kw>
<status status="FAIL" starttime="20210205 08:57:30.253" endtime="20210205 08:57:30.333"></status>
</kw>
<msg timestamp="20210205 08:57:30.334" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/0</msg>
<status status="PASS" starttime="20210205 08:57:30.252" endtime="20210205 08:57:30.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.334" endtime="20210205 08:57:30.335"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.247" endtime="20210205 08:57:30.335"></status>
</kw>
<kw name="GET POST BY INVALID ID" library="APIHelper">
<arguments>
<arg>101</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 08:57:30.338" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 08:57:30.337" endtime="20210205 08:57:30.338"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 08:57:30.339" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:30.338" endtime="20210205 08:57:30.340"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.342" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:30.342" endtime="20210205 08:57:30.343"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:30.382" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/101 
 path_url=/posts/101 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:30.382" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/101 
 status=404, reason=Not Found 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de2acfd0e71c570bc1e97db27e24cdc691612533450; expires=Sun, 07-Mar-21 13:57:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612532090', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '1368', 'cf-request-id': '081414dee40000387ddc228000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=K%2FY5SzjfsOb2O02CKFWQSZjd7cXPHBOEfFIjD8T24xLtVFt0499CRKVgsAGZdF1Bki031NHxXyV6YyGSTtvUh66D4AGbmUzoA4MPNimnNyPjOgJix7gQ0IEHVG9e"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd24116c65387d-IAD'} 
 body={} 
 </msg>
<msg timestamp="20210205 08:57:30.386" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/101</msg>
<status status="FAIL" starttime="20210205 08:57:30.343" endtime="20210205 08:57:30.386"></status>
</kw>
<status status="FAIL" starttime="20210205 08:57:30.341" endtime="20210205 08:57:30.386"></status>
</kw>
<msg timestamp="20210205 08:57:30.386" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/101</msg>
<status status="PASS" starttime="20210205 08:57:30.340" endtime="20210205 08:57:30.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.387" endtime="20210205 08:57:30.387"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.336" endtime="20210205 08:57:30.388"></status>
</kw>
<kw name="GET RANDOM STRING" library="APIHelper">
<assign>
<var>${randompost}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${randompostid}</var>
</assign>
<msg timestamp="20210205 08:57:30.390" level="INFO">${randompostid} = vjAbe</msg>
<status status="PASS" starttime="20210205 08:57:30.389" endtime="20210205 08:57:30.390"></status>
</kw>
<msg timestamp="20210205 08:57:30.391" level="INFO">${randompost} = vjAbe</msg>
<status status="PASS" starttime="20210205 08:57:30.389" endtime="20210205 08:57:30.391"></status>
</kw>
<kw name="GET POST BY INVALID ID" library="APIHelper">
<arguments>
<arg>${randompost}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 08:57:30.393" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 08:57:30.392" endtime="20210205 08:57:30.394"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 08:57:30.395" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:30.394" endtime="20210205 08:57:30.395"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.398" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:30.397" endtime="20210205 08:57:30.399"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:30.461" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/vjAbe 
 path_url=/posts/vjAbe 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:30.461" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/vjAbe 
 status=404, reason=Not Found 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d930339d6aa5536d3afad2415eb9b4e051612533450; expires=Sun, 07-Mar-21 13:57:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '904', 'X-Ratelimit-Reset': '1612533471', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'MISS', 'cf-request-id': '081414df1e00000defdbb48000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=bQgwkUfGD%2F8rvqEfqDOzUm%2FSEWPDzhYvPELB7j6Ckr9cW28fN59E3mA2CCxssGsHIxDPSMyz%2BzSTVAhy6y6cMWXc2b5Rx7STnEbQ9n34%2FnChrMI1MYydCZ6stqdQ"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd2411c8aa0def-IAD'} 
 body={} 
 </msg>
<msg timestamp="20210205 08:57:30.464" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/vjAbe</msg>
<status status="FAIL" starttime="20210205 08:57:30.399" endtime="20210205 08:57:30.465"></status>
</kw>
<status status="FAIL" starttime="20210205 08:57:30.396" endtime="20210205 08:57:30.465"></status>
</kw>
<msg timestamp="20210205 08:57:30.465" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/vjAbe</msg>
<status status="PASS" starttime="20210205 08:57:30.395" endtime="20210205 08:57:30.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.466" endtime="20210205 08:57:30.466"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.392" endtime="20210205 08:57:30.466"></status>
</kw>
<doc>Validate Edge cases for Getting post by single post id</doc>
<tags>
<tag>Negative</tag>
</tags>
<status status="PASS" starttime="20210205 08:57:30.220" endtime="20210205 08:57:30.467" critical="yes"></status>
</test>
<test id="s1-t4" name="TC004 VALIDATE POST COUNT BY USER ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="APIHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 08:57:30.473" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 08:57:30.471" endtime="20210205 08:57:30.473"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 08:57:30.475" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:30.473" endtime="20210205 08:57:30.475"></status>
</kw>
<msg timestamp="20210205 08:57:30.475" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:30.471" endtime="20210205 08:57:30.475"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>size</arg>
<arg>allposts</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.479" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 08:57:30.477" endtime="20210205 08:57:30.479"></status>
</kw>
<msg timestamp="20210205 08:57:30.480" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 08:57:30.476" endtime="20210205 08:57:30.480"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>user</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${segmentationcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.482" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.481" endtime="20210205 08:57:30.483"></status>
</kw>
<msg timestamp="20210205 08:57:30.483" level="INFO">${segmentationcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.480" endtime="20210205 08:57:30.483"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>user</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${singleuserid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:30.485" level="INFO">${tempvalue} = 3</msg>
<status status="PASS" starttime="20210205 08:57:30.484" endtime="20210205 08:57:30.485"></status>
</kw>
<msg timestamp="20210205 08:57:30.486" level="INFO">${singleuserid} = 3</msg>
<status status="PASS" starttime="20210205 08:57:30.483" endtime="20210205 08:57:30.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.487" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:30.486" endtime="20210205 08:57:30.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>GET_Posts.json</arg>
</arguments>
<msg timestamp="20210205 08:57:30.488" level="INFO">${templatefile} = GET_Posts.json</msg>
<status status="PASS" starttime="20210205 08:57:30.487" endtime="20210205 08:57:30.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.489" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 08:57:30.488" endtime="20210205 08:57:30.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${segmentcnt}</arg>
<arg>${segmentationcount}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.490" level="INFO">${segmentcnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.489" endtime="20210205 08:57:30.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${singleuser}</arg>
<arg>${singleuserid}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.491" level="INFO">${singleuser} = 3</msg>
<status status="PASS" starttime="20210205 08:57:30.490" endtime="20210205 08:57:30.491"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.470" endtime="20210205 08:57:30.491"></status>
</kw>
<kw name="VALIDATE POST COUNT BY USER ID" library="APIHelper">
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>../../Fixtures/JsonTemplates/TestData.json</arg>
</arguments>
<assign>
<var>${response_object}</var>
</assign>
<msg timestamp="20210205 08:57:30.493" level="INFO" html="yes">Getting file '&lt;a href="file://C:\typicodetests\http-jsonplaceholder.typicode.com-robotframework\RobotAutomation\Fixtures\JsonTemplates\TestData.json"&gt;C:\typicodetests\http-jsonplaceholder.typicode.com-robotframework\RobotAutomation\Fixtures\JsonTemplates\TestData.json&lt;/a&gt;'.</msg>
<msg timestamp="20210205 08:57:30.494" level="INFO">${response_object} = [
    {
        "userid": "1",
        "postcount": "10"
    },
    {
        "userid": "2",
        "postcount": "10"
    },
    {
        "userid": "3",
        "postcount": "10"
    },
    {
      ...</msg>
<status status="PASS" starttime="20210205 08:57:30.492" endtime="20210205 08:57:30.494"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.loads("""${response_object}""")</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${response_object}</var>
</assign>
<msg timestamp="20210205 08:57:30.495" level="INFO">${response_object} = [{'userid': '1', 'postcount': '10'}, {'userid': '2', 'postcount': '10'}, {'userid': '3', 'postcount': '10'}, {'userid': '4', 'postcount': '10'}, {'userid': '5', 'postcount': '10'}, {'userid': '6', 'po...</msg>
<status status="PASS" starttime="20210205 08:57:30.494" endtime="20210205 08:57:30.495"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 08:57:30.496" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 08:57:30.495" endtime="20210205 08:57:30.496"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 08:57:30.498" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:30.497" endtime="20210205 08:57:30.498"></status>
</kw>
<kw name="${item} IN [ @{response_object} ]" type="for">
<kw name="${item} = {'userid': '1', 'postcount': '10'}" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${item['userid']}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.502" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:30.502" endtime="20210205 08:57:30.503"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:30.550" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/1/posts 
 path_url=/users/1/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:30.550" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/1/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da659150bf80747085ea2793053fc07701612533450; expires=Sun, 07-Mar-21 13:57:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612494887', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"aa6-j2NSH739l9uq40OywFMn7Y0C/iY"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '498', 'cf-request-id': '081414df8700002946dcb94000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=72hCCKKEZI3rxovzPnWy7UA1M6fq2TbWhaLdztTMVMZFfO154XuHLpiyO1EQGT0ovRl0cM5a2kMU7qGZ7XXeyraPc8LZo8rbGpF7mZn7OeqcNLz0KcWGBEhIAq4q"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd24127f0a2946-IAD'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  }
] 
 </msg>
<msg timestamp="20210205 08:57:30.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.504" endtime="20210205 08:57:30.551"></status>
</kw>
<msg timestamp="20210205 08:57:30.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.500" endtime="20210205 08:57:30.551"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="APIHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 08:57:30.553" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:30.553" endtime="20210205 08:57:30.553"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.555" endtime="20210205 08:57:30.556"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.554" endtime="20210205 08:57:30.556"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.556" endtime="20210205 08:57:30.557"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.556" endtime="20210205 08:57:30.557"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.557" endtime="20210205 08:57:30.558"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.557" endtime="20210205 08:57:30.559"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.559" endtime="20210205 08:57:30.560"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.559" endtime="20210205 08:57:30.560"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.561" endtime="20210205 08:57:30.562"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.561" endtime="20210205 08:57:30.562"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.562" endtime="20210205 08:57:30.563"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.562" endtime="20210205 08:57:30.563"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.564" endtime="20210205 08:57:30.564"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.563" endtime="20210205 08:57:30.564"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.565" endtime="20210205 08:57:30.565"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.565" endtime="20210205 08:57:30.565"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.566" endtime="20210205 08:57:30.566"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.566" endtime="20210205 08:57:30.566"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.567" endtime="20210205 08:57:30.567"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.567" endtime="20210205 08:57:30.568"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.553" endtime="20210205 08:57:30.568"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 08:57:30.568" level="INFO">Length is 10</msg>
<msg timestamp="20210205 08:57:30.569" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.568" endtime="20210205 08:57:30.569"></status>
</kw>
<msg timestamp="20210205 08:57:30.569" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.551" endtime="20210205 08:57:30.569"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${item['postcount']}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.569" endtime="20210205 08:57:30.570"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.499" endtime="20210205 08:57:30.570"></status>
</kw>
<kw name="${item} = {'userid': '2', 'postcount': '10'}" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${item['userid']}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.572" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:30.572" endtime="20210205 08:57:30.573"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:30.675" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/2/posts 
 path_url=/users/2/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:30.675" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/2/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d755d4a2c15a624b481c37067cf4803391612533450; expires=Sun, 07-Mar-21 13:57:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611965909', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"add-8VKPUO46clThjTS9/JNMO2KqAMY"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414dfcd0000f198ed872000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mmSo%2BPqOGCr80ZJgM7%2FZNuk6Q13V7vfjDAvrSRtzZ7aJjxFWneLDEomU6VRiVaI9K56n1%2FRdOLGsdie01SI9gnjx%2BsY7u9ovDDsUvj4AYSmCR9m11CQxjbQp8Qys"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd2412eb10f198-IAD'} 
 body=[
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  }
] 
 </msg>
<msg timestamp="20210205 08:57:30.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.573" endtime="20210205 08:57:30.676"></status>
</kw>
<msg timestamp="20210205 08:57:30.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.570" endtime="20210205 08:57:30.676"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="APIHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 08:57:30.678" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:30.677" endtime="20210205 08:57:30.678"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.679" endtime="20210205 08:57:30.680"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.679" endtime="20210205 08:57:30.680"></status>
</kw>
<kw name="${data} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.681" endtime="20210205 08:57:30.681"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.680" endtime="20210205 08:57:30.681"></status>
</kw>
<kw name="${data} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.682" endtime="20210205 08:57:30.682"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.682" endtime="20210205 08:57:30.682"></status>
</kw>
<kw name="${data} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.683" endtime="20210205 08:57:30.684"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.683" endtime="20210205 08:57:30.684"></status>
</kw>
<kw name="${data} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.685" endtime="20210205 08:57:30.686"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.685" endtime="20210205 08:57:30.687"></status>
</kw>
<kw name="${data} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.687" endtime="20210205 08:57:30.688"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.687" endtime="20210205 08:57:30.688"></status>
</kw>
<kw name="${data} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.688" endtime="20210205 08:57:30.689"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.688" endtime="20210205 08:57:30.689"></status>
</kw>
<kw name="${data} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.690" endtime="20210205 08:57:30.690"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.689" endtime="20210205 08:57:30.690"></status>
</kw>
<kw name="${data} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.691" endtime="20210205 08:57:30.692"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.691" endtime="20210205 08:57:30.692"></status>
</kw>
<kw name="${data} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.693" endtime="20210205 08:57:30.693"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.692" endtime="20210205 08:57:30.694"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.678" endtime="20210205 08:57:30.694"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 08:57:30.695" level="INFO">Length is 10</msg>
<msg timestamp="20210205 08:57:30.695" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.694" endtime="20210205 08:57:30.695"></status>
</kw>
<msg timestamp="20210205 08:57:30.696" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.677" endtime="20210205 08:57:30.696"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${item['postcount']}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.696" endtime="20210205 08:57:30.698"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.570" endtime="20210205 08:57:30.698"></status>
</kw>
<kw name="${item} = {'userid': '3', 'postcount': '10'}" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${item['userid']}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.701" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:30.700" endtime="20210205 08:57:30.702"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:30.765" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/3/posts 
 path_url=/users/3/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:30.765" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/3/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd77517caa3a3acb7a83e8303871ac3b91612533450; expires=Sun, 07-Mar-21 13:57:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612256556', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"a65-1/mRNOhrr+3bFpMuWj+OXmTpWLs"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414e04f00007445ac083000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=N7QEkN5arwZ7k4SaRNCcOgxZA%2BMA1CLmAPPVqAfJjYA%2B2kTArKAqy53Xk6S%2Frb4PscPFKz%2Bp615zaWEI1tcLY9A7q19LO3ALaTDwRMabtmvtFsdtWoOtFpKYFGFx"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd2413ba377445-IAD'} 
 body=[
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  }
] 
 </msg>
<msg timestamp="20210205 08:57:30.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.702" endtime="20210205 08:57:30.766"></status>
</kw>
<msg timestamp="20210205 08:57:30.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.698" endtime="20210205 08:57:30.767"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="APIHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 08:57:30.768" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:30.768" endtime="20210205 08:57:30.768"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.769" endtime="20210205 08:57:30.770"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.769" endtime="20210205 08:57:30.770"></status>
</kw>
<kw name="${data} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.770" endtime="20210205 08:57:30.771"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.770" endtime="20210205 08:57:30.771"></status>
</kw>
<kw name="${data} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.772" endtime="20210205 08:57:30.772"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.771" endtime="20210205 08:57:30.772"></status>
</kw>
<kw name="${data} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.773" endtime="20210205 08:57:30.773"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.772" endtime="20210205 08:57:30.773"></status>
</kw>
<kw name="${data} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.774" endtime="20210205 08:57:30.775"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.774" endtime="20210205 08:57:30.775"></status>
</kw>
<kw name="${data} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.776" endtime="20210205 08:57:30.777"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.775" endtime="20210205 08:57:30.777"></status>
</kw>
<kw name="${data} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.778" endtime="20210205 08:57:30.779"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.777" endtime="20210205 08:57:30.779"></status>
</kw>
<kw name="${data} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.780" endtime="20210205 08:57:30.781"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.780" endtime="20210205 08:57:30.781"></status>
</kw>
<kw name="${data} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.782" endtime="20210205 08:57:30.783"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.781" endtime="20210205 08:57:30.783"></status>
</kw>
<kw name="${data} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.783" endtime="20210205 08:57:30.784"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.783" endtime="20210205 08:57:30.784"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.769" endtime="20210205 08:57:30.784"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 08:57:30.784" level="INFO">Length is 10</msg>
<msg timestamp="20210205 08:57:30.785" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.784" endtime="20210205 08:57:30.785"></status>
</kw>
<msg timestamp="20210205 08:57:30.785" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.767" endtime="20210205 08:57:30.785"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${item['postcount']}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.785" endtime="20210205 08:57:30.786"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.698" endtime="20210205 08:57:30.786"></status>
</kw>
<kw name="${item} = {'userid': '4', 'postcount': '10'}" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${item['userid']}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.788" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:30.788" endtime="20210205 08:57:30.789"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:30.870" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/4/posts 
 path_url=/users/4/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:30.870" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/4/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d6c5e8c6b13e0dd975a916e5b8075958b1612533450; expires=Sun, 07-Mar-21 13:57:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '995', 'X-Ratelimit-Reset': '1612494887', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"b6e-TjceC2BFfn52KMJbnZJeDRN+R+o"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414e0a30000260510805000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=CdpJA4SBbuL3njYa0S9eubRwzGpGXbn1wSJw4AB2y3Qwx1%2F%2FXFlkEfQouRN%2Fm7iIfBOwhbQyBA7mAklYiERLORzBEgyHYnrsR%2Fowk%2BXq8f%2F%2Fp5jLg7R0d0HBFZLq"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd24143e2c2605-IAD'} 
 body=[
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est",
    "body": "debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nvoluptates omnis consequatur aut enim officiis in quam qui"
  },
  {
    "userId": 4,
    "id": 38,
    "title": "explicabo et eos deleniti nostrum ab id repellendus",
    "body": "animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus ea\nrerum repudiandae quia voluptatem delectus fugit aut id quia\nratione optio eos iusto veniam iure"
  },
  {
    "userId": 4,
    "id": 39,
    "title": "eos dolorem iste accusantium est eaque quam",
    "body": "corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti asperiores fuga aut\nvoluptas sapiente vel dolore minus voluptatem incidunt ex"
  },
  {
    "userId": 4,
    "id": 40,
    "title": "enim quo cumque",
    "body": "ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptatem iure quasi maxime voluptas nam"
  }
] 
 </msg>
<msg timestamp="20210205 08:57:30.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.789" endtime="20210205 08:57:30.871"></status>
</kw>
<msg timestamp="20210205 08:57:30.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.787" endtime="20210205 08:57:30.872"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="APIHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 08:57:30.875" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:30.874" endtime="20210205 08:57:30.875"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.877" endtime="20210205 08:57:30.878"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.876" endtime="20210205 08:57:30.878"></status>
</kw>
<kw name="${data} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.878" endtime="20210205 08:57:30.880"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.878" endtime="20210205 08:57:30.880"></status>
</kw>
<kw name="${data} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.880" endtime="20210205 08:57:30.881"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.880" endtime="20210205 08:57:30.882"></status>
</kw>
<kw name="${data} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.882" endtime="20210205 08:57:30.883"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.882" endtime="20210205 08:57:30.884"></status>
</kw>
<kw name="${data} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.884" endtime="20210205 08:57:30.885"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.884" endtime="20210205 08:57:30.886"></status>
</kw>
<kw name="${data} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.886" endtime="20210205 08:57:30.888"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.886" endtime="20210205 08:57:30.888"></status>
</kw>
<kw name="${data} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.888" endtime="20210205 08:57:30.889"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.888" endtime="20210205 08:57:30.889"></status>
</kw>
<kw name="${data} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.889" endtime="20210205 08:57:30.890"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.889" endtime="20210205 08:57:30.890"></status>
</kw>
<kw name="${data} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.890" endtime="20210205 08:57:30.891"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.890" endtime="20210205 08:57:30.891"></status>
</kw>
<kw name="${data} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:30.892" endtime="20210205 08:57:30.894"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.892" endtime="20210205 08:57:30.894"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.875" endtime="20210205 08:57:30.894"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 08:57:30.895" level="INFO">Length is 10</msg>
<msg timestamp="20210205 08:57:30.895" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.894" endtime="20210205 08:57:30.895"></status>
</kw>
<msg timestamp="20210205 08:57:30.896" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:30.872" endtime="20210205 08:57:30.896"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${item['postcount']}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.897" endtime="20210205 08:57:30.898"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.786" endtime="20210205 08:57:30.898"></status>
</kw>
<kw name="${item} = {'userid': '5', 'postcount': '10'}" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${item['userid']}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:30.901" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:30.901" endtime="20210205 08:57:30.902"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:31.094" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/5/posts 
 path_url=/users/5/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:31.094" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/5/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5b0c7f4ca92da40d0a99edc7295e19281612533451; expires=Sun, 07-Mar-21 13:57:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '995', 'X-Ratelimit-Reset': '1612256556', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"b2d-1VNHKGeFvCHCaIvJVU7cRyVMjxY"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414e112000000d8c1350000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=d3ABt9npaFA3AtHt3rU04ghfdzS00CqXOIdmb3Ge9hw4%2Bf7s%2Fw4jnaxgmxXVaAuhR4R3XmLcg%2FK511OodJqBWEh%2Bs26n1M7zT9%2BBQCA%2FAFYTgZQc3WjxMojrF%2FQy"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd2414ee5400d8-IAD'} 
 body=[
  {
    "userId": 5,
    "id": 41,
    "title": "non est facere",
    "body": "molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\nnam quidem est ducimus sunt debitis saepe"
  },
  {
    "userId": 5,
    "id": 42,
    "title": "commodi ullam sint et excepturi error explicabo praesentium voluptas",
    "body": "odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis aliquam sunt sequi nulla dolorem\nnon facere repellendus voluptates quia\nratione harum vitae ut"
  },
  {
    "userId": 5,
    "id": 43,
    "title": "eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis",
    "body": "similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexercitationem quos nam commodi possimus cum odio nihil nulla\ndolorum exercitationem magnam ex et a et distinctio debitis"
  },
  {
    "userId": 5,
    "id": 44,
    "title": "optio dolor molestias sit",
    "body": "temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iure quam sed maxime ut distinctio quae"
  },
  {
    "userId": 5,
    "id": 45,
    "title": "ut numquam possimus omnis eius suscipit laudantium iure",
    "body": "est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum repellendus dolorem autem"
  },
  {
    "userId": 5,
    "id": 46,
    "title": "aut quo modi neque nostrum ducimus",
    "body": "voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid"
  },
  {
    "userId": 5,
    "id": 47,
    "title": "quibusdam cumque rem aut deserunt",
    "body": "voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beatae rerum ea iure soluta nostrum\neligendi et voluptate"
  },
  {
    "userId": 5,
    "id": 48,
    "title": "ut voluptatem illum ea doloribus itaque eos",
    "body": "voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab deleniti\nlaudantium repellat ad ut et autem reprehenderit"
  },
  {
    "userId": 5,
    "id": 49,
    "title": "laborum non sunt aut ut assumenda perspiciatis voluptas",
    "body": "inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum veritatis non\nquibusdam officiis aspernatur cumque aut commodi aut"
  },
  {
    "userId": 5,
    "id": 50,
    "title": "repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem",
    "body": "error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi et est et voluptates\nquia distinctio ab amet quaerat molestiae et vitae\nadipisci impedit sequi nesciunt quis consectetur"
  }
] 
 </msg>
<msg timestamp="20210205 08:57:31.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.902" endtime="20210205 08:57:31.095"></status>
</kw>
<msg timestamp="20210205 08:57:31.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:30.899" endtime="20210205 08:57:31.095"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="APIHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 08:57:31.097" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:31.097" endtime="20210205 08:57:31.097"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.098" endtime="20210205 08:57:31.099"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.098" endtime="20210205 08:57:31.099"></status>
</kw>
<kw name="${data} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.100" endtime="20210205 08:57:31.100"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.099" endtime="20210205 08:57:31.100"></status>
</kw>
<kw name="${data} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.101" endtime="20210205 08:57:31.101"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.101" endtime="20210205 08:57:31.101"></status>
</kw>
<kw name="${data} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.102" endtime="20210205 08:57:31.102"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.102" endtime="20210205 08:57:31.102"></status>
</kw>
<kw name="${data} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.103" endtime="20210205 08:57:31.103"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.103" endtime="20210205 08:57:31.103"></status>
</kw>
<kw name="${data} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.104" endtime="20210205 08:57:31.104"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.104" endtime="20210205 08:57:31.104"></status>
</kw>
<kw name="${data} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.105" endtime="20210205 08:57:31.105"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.105" endtime="20210205 08:57:31.106"></status>
</kw>
<kw name="${data} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.106" endtime="20210205 08:57:31.106"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.106" endtime="20210205 08:57:31.107"></status>
</kw>
<kw name="${data} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.107" endtime="20210205 08:57:31.107"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.107" endtime="20210205 08:57:31.108"></status>
</kw>
<kw name="${data} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.108" endtime="20210205 08:57:31.108"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.108" endtime="20210205 08:57:31.109"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.097" endtime="20210205 08:57:31.109"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 08:57:31.109" level="INFO">Length is 10</msg>
<msg timestamp="20210205 08:57:31.109" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.109" endtime="20210205 08:57:31.109"></status>
</kw>
<msg timestamp="20210205 08:57:31.110" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.096" endtime="20210205 08:57:31.110"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${item['postcount']}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.110" endtime="20210205 08:57:31.111"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.899" endtime="20210205 08:57:31.111"></status>
</kw>
<kw name="${item} = {'userid': '6', 'postcount': '10'}" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${item['userid']}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.113" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:31.112" endtime="20210205 08:57:31.114"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:31.192" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/6/posts 
 path_url=/users/6/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:31.192" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/6/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0340e040d54f0a0fda81fe378daffb5d1612533451; expires=Sun, 07-Mar-21 13:57:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1612256556', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"a53-f5EcYsRsutmzmVzAo6fwJx/PeWU"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414e1ee00002adc2095e000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=vu84cmjfp5tfOTw5KVoCqRmEU9W%2FSQmaUKYIEyixTJzfDJOPXMjM9hcd9FFVU8A6eqdWIzrO1isHsakyJxshKzobtRf9gqK3N7tkQKIn%2BGKMtb0Il7VcVI15leOH"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd241648fd2adc-IAD'} 
 body=[
  {
    "userId": 6,
    "id": 51,
    "title": "soluta aliquam aperiam consequatur illo quis voluptas",
    "body": "sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores sit consectetur dolorem"
  },
  {
    "userId": 6,
    "id": 52,
    "title": "qui enim et consequuntur quia animi quis voluptate quibusdam",
    "body": "iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iusto accusantium provident architecto\nsoluta esse reprehenderit qui laborum"
  },
  {
    "userId": 6,
    "id": 53,
    "title": "ut quo aut ducimus alias",
    "body": "minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quidem veritatis sunt non explicabo similique"
  },
  {
    "userId": 6,
    "id": 54,
    "title": "sit asperiores ipsam eveniet odio non quia",
    "body": "totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero incidunt corrupti mollitia"
  },
  {
    "userId": 6,
    "id": 55,
    "title": "sit vel voluptatem et non libero",
    "body": "debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis molestiae\nnihil ut eum odit"
  },
  {
    "userId": 6,
    "id": 56,
    "title": "qui et at rerum necessitatibus",
    "body": "aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis harum reprehenderit dolores eligendi"
  },
  {
    "userId": 6,
    "id": 57,
    "title": "sed ab est est",
    "body": "at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est"
  },
  {
    "userId": 6,
    "id": 58,
    "title": "voluptatum itaque dolores nisi et quasi",
    "body": "veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad similique veniam"
  },
  {
    "userId": 6,
    "id": 59,
    "title": "qui commodi dolor at maiores et quis id accusantium",
    "body": "perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores suscipit voluptas et\nanimi doloribus cum rerum quas et magni\net hic ut ut commodi expedita sunt"
  },
  {
    "userId": 6,
    "id": 60,
    "title": "consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere",
    "body": "asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et fuga perferendis voluptas\nillo ratione amet aut et omnis"
  }
] 
 </msg>
<msg timestamp="20210205 08:57:31.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.114" endtime="20210205 08:57:31.193"></status>
</kw>
<msg timestamp="20210205 08:57:31.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.111" endtime="20210205 08:57:31.194"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="APIHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 08:57:31.195" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:31.195" endtime="20210205 08:57:31.195"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.196" endtime="20210205 08:57:31.197"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.196" endtime="20210205 08:57:31.197"></status>
</kw>
<kw name="${data} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.197" endtime="20210205 08:57:31.198"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.197" endtime="20210205 08:57:31.198"></status>
</kw>
<kw name="${data} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.198" endtime="20210205 08:57:31.199"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.198" endtime="20210205 08:57:31.199"></status>
</kw>
<kw name="${data} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.199" endtime="20210205 08:57:31.200"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.199" endtime="20210205 08:57:31.200"></status>
</kw>
<kw name="${data} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.200" endtime="20210205 08:57:31.201"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.200" endtime="20210205 08:57:31.201"></status>
</kw>
<kw name="${data} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.201" endtime="20210205 08:57:31.202"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.201" endtime="20210205 08:57:31.202"></status>
</kw>
<kw name="${data} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.202" endtime="20210205 08:57:31.203"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.202" endtime="20210205 08:57:31.203"></status>
</kw>
<kw name="${data} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.203" endtime="20210205 08:57:31.204"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.203" endtime="20210205 08:57:31.204"></status>
</kw>
<kw name="${data} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.204" endtime="20210205 08:57:31.205"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.204" endtime="20210205 08:57:31.205"></status>
</kw>
<kw name="${data} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.205" endtime="20210205 08:57:31.206"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.205" endtime="20210205 08:57:31.206"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.195" endtime="20210205 08:57:31.206"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 08:57:31.207" level="INFO">Length is 10</msg>
<msg timestamp="20210205 08:57:31.207" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.206" endtime="20210205 08:57:31.207"></status>
</kw>
<msg timestamp="20210205 08:57:31.207" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.194" endtime="20210205 08:57:31.207"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${item['postcount']}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.208" endtime="20210205 08:57:31.208"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.111" endtime="20210205 08:57:31.208"></status>
</kw>
<kw name="${item} = {'userid': '7', 'postcount': '10'}" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${item['userid']}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.211" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:31.210" endtime="20210205 08:57:31.211"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:31.291" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/7/posts 
 path_url=/users/7/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:31.291" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/7/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d04326767826f99525a03959ebe70a1a91612533451; expires=Sun, 07-Mar-21 13:57:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '993', 'X-Ratelimit-Reset': '1612256556', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ac9-zupooBJ34VbAptMX3dKL59rtjuk"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414e2480000e0a66c085000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=i%2Babmk4oDKYVoFM5tmY%2FSIaicFZ2LawNPnFAVktK5TBaf9c%2F0SCmrQfNALsX77yIdonL82gb5jVmsiFSYGU4dENLvc1xdComIJjx%2FAuru1dd0OX69hvqI0wZ7MZO"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd2416d9bbe0a6-IAD'} 
 body=[
  {
    "userId": 7,
    "id": 61,
    "title": "voluptatem doloribus consectetur est ut ducimus",
    "body": "ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blanditiis debitis in nesciunt doloribus dicta dolores\nmagnam minus velit"
  },
  {
    "userId": 7,
    "id": 62,
    "title": "beatae enim quia vel",
    "body": "enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omnis\nquo molestiae omnis ea eveniet optio"
  },
  {
    "userId": 7,
    "id": 63,
    "title": "voluptas blanditiis repellendus animi ducimus error sapiente et suscipit",
    "body": "enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\nab delectus culpa quo reprehenderit blanditiis asperiores\naccusantium ut quam in voluptatibus voluptas ipsam dicta"
  },
  {
    "userId": 7,
    "id": 64,
    "title": "et fugit quas eum in in aperiam quod",
    "body": "id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaque aut aut qui"
  },
  {
    "userId": 7,
    "id": 65,
    "title": "consequatur id enim sunt et et",
    "body": "voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperiores et perferendis\nnatus id esse incidunt pariatur"
  },
  {
    "userId": 7,
    "id": 66,
    "title": "repudiandae ea animi iusto",
    "body": "officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusdam et nemo iusto saepe"
  },
  {
    "userId": 7,
    "id": 67,
    "title": "aliquid eos sed fuga est maxime repellendus",
    "body": "reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet\nnon sapiente et consequatur necessitatibus molestiae"
  },
  {
    "userId": 7,
    "id": 68,
    "title": "odio quis facere architecto reiciendis optio",
    "body": "magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti quidem saepe porro velit"
  },
  {
    "userId": 7,
    "id": 69,
    "title": "fugiat quod pariatur odit minima",
    "body": "officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\nsequi commodi repudiandae asperiores et saepe a"
  },
  {
    "userId": 7,
    "id": 70,
    "title": "voluptatem laborum magni",
    "body": "sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore"
  }
] 
 </msg>
<msg timestamp="20210205 08:57:31.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.211" endtime="20210205 08:57:31.292"></status>
</kw>
<msg timestamp="20210205 08:57:31.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.209" endtime="20210205 08:57:31.292"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="APIHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 08:57:31.294" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:31.293" endtime="20210205 08:57:31.294"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.295" endtime="20210205 08:57:31.295"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.294" endtime="20210205 08:57:31.295"></status>
</kw>
<kw name="${data} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.296" endtime="20210205 08:57:31.296"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.296" endtime="20210205 08:57:31.296"></status>
</kw>
<kw name="${data} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.297" endtime="20210205 08:57:31.298"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.297" endtime="20210205 08:57:31.298"></status>
</kw>
<kw name="${data} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.298" endtime="20210205 08:57:31.299"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.298" endtime="20210205 08:57:31.299"></status>
</kw>
<kw name="${data} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.299" endtime="20210205 08:57:31.300"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.299" endtime="20210205 08:57:31.300"></status>
</kw>
<kw name="${data} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.300" endtime="20210205 08:57:31.301"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.300" endtime="20210205 08:57:31.301"></status>
</kw>
<kw name="${data} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.301" endtime="20210205 08:57:31.302"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.301" endtime="20210205 08:57:31.302"></status>
</kw>
<kw name="${data} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.302" endtime="20210205 08:57:31.303"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.302" endtime="20210205 08:57:31.303"></status>
</kw>
<kw name="${data} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.304" endtime="20210205 08:57:31.304"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.303" endtime="20210205 08:57:31.304"></status>
</kw>
<kw name="${data} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.305" endtime="20210205 08:57:31.305"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.304" endtime="20210205 08:57:31.305"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.294" endtime="20210205 08:57:31.305"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 08:57:31.306" level="INFO">Length is 10</msg>
<msg timestamp="20210205 08:57:31.306" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.306" endtime="20210205 08:57:31.306"></status>
</kw>
<msg timestamp="20210205 08:57:31.307" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.292" endtime="20210205 08:57:31.307"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${item['postcount']}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.307" endtime="20210205 08:57:31.307"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.209" endtime="20210205 08:57:31.307"></status>
</kw>
<kw name="${item} = {'userid': '8', 'postcount': '10'}" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${item['userid']}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.308" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:31.308" endtime="20210205 08:57:31.308"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:31.379" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/8/posts 
 path_url=/users/8/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:31.379" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/8/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da9563b8d125c29fc2b62c9a4a4afcc351612533451; expires=Sun, 07-Mar-21 13:57:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '991', 'X-Ratelimit-Reset': '1612494887', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"aea-lpYzL25RMcJkeQwvkEZHosqux44"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'cf-request-id': '081414e2a600002ad897adc000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=1FGKzb%2FEbMYgCHp6M8FlVH4xGN6X6hy%2BFDt0V9N3rDMhNGkBpN1g4EPd%2Fqgdiltezzn5wzPvkIDREx8ccIFkk8oXoRcKFQ0VheJcdFSClk8zFGQwwwv4qxy%2B79NZ"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cd24176a7d2ad8-IAD'} 
 body=[
  {
    "userId": 8,
    "id": 71,
    "title": "et iusto veniam et illum aut fuga",
    "body": "occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim velit est perferendis"
  },
  {
    "userId": 8,
    "id": 72,
    "title": "sint hic doloribus consequatur eos non id",
    "body": "quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque id sunt ut aut accusamus\nsunt consectetur expedita inventore velit"
  },
  {
    "userId": 8,
    "id": 73,
    "title": "consequuntur deleniti eos quia temporibus ab aliquid at",
    "body": "voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatur\ntempore cumque quae est et\net in consequuntur voluptatem voluptates aut"
  },
  {
    "userId": 8,
    "id": 74,
    "title": "enim unde ratione doloribus quas enim ut sit sapiente",
    "body": "odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magnam et quam\nblanditiis est itaque\nquo et tenetur ratione occaecati molestiae tempora"
  },
  {
    "userId": 8,
    "id": 75,
    "title": "dignissimos eum dolor ut enim et delectus in",
    "body": "commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui delectus facilis temporibus\nrerum amet et nemo voluptate expedita adipisci error dolorem"
  },
  {
    "userId": 8,
    "id": 76,
    "title": "doloremque officiis ad et non perferendis",
    "body": "ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio"
  },
  {
    "userId": 8,
    "id": 77,
    "title": "necessitatibus quasi exercitationem odio",
    "body": "modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident"
  },
  {
    "userId": 8,
    "id": 78,
    "title": "quam voluptatibus rerum veritatis",
    "body": "nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus"
  },
  {
    "userId": 8,
    "id": 79,
    "title": "pariatur consequatur quia magnam autem omnis non amet",
    "body": "libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam molestiae ducimus est\nofficiis esse molestiae iste et quos"
  },
  {
    "userId": 8,
    "id": 80,
    "title": "labore in ex et explicabo corporis aut quas",
    "body": "ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias provident\nminus incidunt vero fugit rerum sint sunt excepturi provident"
  }
] 
 </msg>
<msg timestamp="20210205 08:57:31.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.308" endtime="20210205 08:57:31.380"></status>
</kw>
<msg timestamp="20210205 08:57:31.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.307" endtime="20210205 08:57:31.380"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="APIHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 08:57:31.382" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:31.382" endtime="20210205 08:57:31.382"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.383" endtime="20210205 08:57:31.384"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.383" endtime="20210205 08:57:31.384"></status>
</kw>
<kw name="${data} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.385" endtime="20210205 08:57:31.385"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.384" endtime="20210205 08:57:31.385"></status>
</kw>
<kw name="${data} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.386" endtime="20210205 08:57:31.386"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.385" endtime="20210205 08:57:31.386"></status>
</kw>
<kw name="${data} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.387" endtime="20210205 08:57:31.387"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.386" endtime="20210205 08:57:31.387"></status>
</kw>
<kw name="${data} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.388" endtime="20210205 08:57:31.388"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.387" endtime="20210205 08:57:31.388"></status>
</kw>
<kw name="${data} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.389" endtime="20210205 08:57:31.389"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.388" endtime="20210205 08:57:31.389"></status>
</kw>
<kw name="${data} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.390" endtime="20210205 08:57:31.390"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.389" endtime="20210205 08:57:31.390"></status>
</kw>
<kw name="${data} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.391" endtime="20210205 08:57:31.391"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.390" endtime="20210205 08:57:31.391"></status>
</kw>
<kw name="${data} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.392" endtime="20210205 08:57:31.392"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.391" endtime="20210205 08:57:31.392"></status>
</kw>
<kw name="${data} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.393" endtime="20210205 08:57:31.393"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.392" endtime="20210205 08:57:31.393"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.382" endtime="20210205 08:57:31.393"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 08:57:31.394" level="INFO">Length is 10</msg>
<msg timestamp="20210205 08:57:31.394" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.394" endtime="20210205 08:57:31.394"></status>
</kw>
<msg timestamp="20210205 08:57:31.395" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.381" endtime="20210205 08:57:31.395"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${item['postcount']}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.395" endtime="20210205 08:57:31.396"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.307" endtime="20210205 08:57:31.396"></status>
</kw>
<kw name="${item} = {'userid': '9', 'postcount': '10'}" type="foritem">
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${item['userid']}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.398" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:31.398" endtime="20210205 08:57:31.399"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:31.451" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/9/posts 
 path_url=/users/9/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:31.451" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/9/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0c5f0a99644ef2e2795535dafc58e66d1612533451; expires=Sun, 07-Mar-21 13:57:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '990', 'X-Ratelimit-Reset': '1612494887', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"aa1-7w0ImWAnFGRWG4ZRQUECVBaSqRo"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '503', 'cf-request-id': '081414e30500002a034ea79000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=O6nqHTKaxG9jFRR7rRw6af6Cm0X6QnR8XdweWMYtq4agFZgsLl0LEVzwVq%2F0osh8EEAWrtE%2Fgrj8Y5EfWIf%2FCvnTJx1qqpe8dhlnpoBdGmTa6m9T7%2BBBOShvuO2e"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd24180a7a2a03-IAD'} 
 body=[
  {
    "userId": 9,
    "id": 81,
    "title": "tempora rem veritatis voluptas quo dolores vero",
    "body": "facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum non ratione velit laboriosam quis consequuntur\nex officiis minima doloremque voluptas ut aut"
  },
  {
    "userId": 9,
    "id": 82,
    "title": "laudantium voluptate suscipit sunt enim enim",
    "body": "ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus adipisci\ndolor enim assumenda soluta laboriosam amet iste delectus hic"
  },
  {
    "userId": 9,
    "id": 83,
    "title": "odit et voluptates doloribus alias odio et",
    "body": "est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\nreprehenderit eius rem quibusdam"
  },
  {
    "userId": 9,
    "id": 84,
    "title": "optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut",
    "body": "sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique veniam\nrecusandae dignissimos dolor incidunt consequatur odio"
  },
  {
    "userId": 9,
    "id": 85,
    "title": "dolore veritatis porro provident adipisci blanditiis et sunt",
    "body": "similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam sint sed tempora\nenim provident pariatur praesentium atque animi amet ratione"
  },
  {
    "userId": 9,
    "id": 86,
    "title": "placeat quia et porro iste",
    "body": "quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel explicabo autem\nasperiores pariatur deserunt optio"
  },
  {
    "userId": 9,
    "id": 87,
    "title": "nostrum quis quasi placeat",
    "body": "eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est"
  },
  {
    "userId": 9,
    "id": 88,
    "title": "sapiente omnis fugit eos",
    "body": "consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed"
  },
  {
    "userId": 9,
    "id": 89,
    "title": "sint soluta et vel magnam aut ut sed qui",
    "body": "repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\ntempore quas est"
  },
  {
    "userId": 9,
    "id": 90,
    "title": "ad iusto omnis odit dolor voluptatibus",
    "body": "minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta similique molestias praesentium blanditiis"
  }
] 
 </msg>
<msg timestamp="20210205 08:57:31.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.399" endtime="20210205 08:57:31.452"></status>
</kw>
<msg timestamp="20210205 08:57:31.452" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.396" endtime="20210205 08:57:31.452"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="APIHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 08:57:31.454" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 08:57:31.453" endtime="20210205 08:57:31.454"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.455" endtime="20210205 08:57:31.455"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.454" endtime="20210205 08:57:31.455"></status>
</kw>
<kw name="${data} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.456" endtime="20210205 08:57:31.456"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.456" endtime="20210205 08:57:31.456"></status>
</kw>
<kw name="${data} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.457" endtime="20210205 08:57:31.458"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.457" endtime="20210205 08:57:31.458"></status>
</kw>
<kw name="${data} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.458" endtime="20210205 08:57:31.459"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.458" endtime="20210205 08:57:31.459"></status>
</kw>
<kw name="${data} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.460" endtime="20210205 08:57:31.460"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.460" endtime="20210205 08:57:31.461"></status>
</kw>
<kw name="${data} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.461" endtime="20210205 08:57:31.462"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.461" endtime="20210205 08:57:31.462"></status>
</kw>
<kw name="${data} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.462" endtime="20210205 08:57:31.463"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.462" endtime="20210205 08:57:31.463"></status>
</kw>
<kw name="${data} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.463" endtime="20210205 08:57:31.464"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.463" endtime="20210205 08:57:31.464"></status>
</kw>
<kw name="${data} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.464" endtime="20210205 08:57:31.465"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.464" endtime="20210205 08:57:31.465"></status>
</kw>
<kw name="${data} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.465" endtime="20210205 08:57:31.466"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.465" endtime="20210205 08:57:31.466"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.454" endtime="20210205 08:57:31.466"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 08:57:31.466" level="INFO">Length is 10</msg>
<msg timestamp="20210205 08:57:31.466" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.466" endtime="20210205 08:57:31.467"></status>
</kw>
<msg timestamp="20210205 08:57:31.467" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.452" endtime="20210205 08:57:31.467"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${item['postcount']}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.467" endtime="20210205 08:57:31.468"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.396" endtime="20210205 08:57:31.468"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.499" endtime="20210205 08:57:31.468"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:30.492" endtime="20210205 08:57:31.468"></status>
</kw>
<doc>Validate Expected Post Count by User Id</doc>
<tags>
<tag>Positive</tag>
</tags>
<status status="PASS" starttime="20210205 08:57:30.469" endtime="20210205 08:57:31.469" critical="yes"></status>
</test>
<test id="s1-t5" name="TC005 GET POST BY INVALID USER ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="APIHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 08:57:31.476" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 08:57:31.475" endtime="20210205 08:57:31.476"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 08:57:31.477" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:31.476" endtime="20210205 08:57:31.477"></status>
</kw>
<msg timestamp="20210205 08:57:31.478" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:31.474" endtime="20210205 08:57:31.478"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>size</arg>
<arg>allposts</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:31.483" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 08:57:31.480" endtime="20210205 08:57:31.483"></status>
</kw>
<msg timestamp="20210205 08:57:31.483" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 08:57:31.479" endtime="20210205 08:57:31.483"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>user</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${segmentationcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:31.486" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.484" endtime="20210205 08:57:31.486"></status>
</kw>
<msg timestamp="20210205 08:57:31.486" level="INFO">${segmentationcount} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.484" endtime="20210205 08:57:31.486"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="APIHelper">
<arguments>
<arg>GET_Posts.json</arg>
<arg>user</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${singleuserid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 08:57:31.489" level="INFO">${tempvalue} = 3</msg>
<status status="PASS" starttime="20210205 08:57:31.488" endtime="20210205 08:57:31.490"></status>
</kw>
<msg timestamp="20210205 08:57:31.491" level="INFO">${singleuserid} = 3</msg>
<status status="PASS" starttime="20210205 08:57:31.487" endtime="20210205 08:57:31.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.492" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:31.491" endtime="20210205 08:57:31.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>GET_Posts.json</arg>
</arguments>
<msg timestamp="20210205 08:57:31.493" level="INFO">${templatefile} = GET_Posts.json</msg>
<status status="PASS" starttime="20210205 08:57:31.493" endtime="20210205 08:57:31.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.494" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 08:57:31.494" endtime="20210205 08:57:31.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${segmentcnt}</arg>
<arg>${segmentationcount}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.495" level="INFO">${segmentcnt} = 10</msg>
<status status="PASS" starttime="20210205 08:57:31.494" endtime="20210205 08:57:31.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${singleuser}</arg>
<arg>${singleuserid}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.496" level="INFO">${singleuser} = 3</msg>
<status status="PASS" starttime="20210205 08:57:31.495" endtime="20210205 08:57:31.496"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.473" endtime="20210205 08:57:31.497"></status>
</kw>
<kw name="GET POST BY INVALID USER ID" library="APIHelper">
<arguments>
<arg>11</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 08:57:31.501" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 08:57:31.499" endtime="20210205 08:57:31.501"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 08:57:31.503" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:31.501" endtime="20210205 08:57:31.503"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.506" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:31.506" endtime="20210205 08:57:31.507"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:31.580" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/11/posts 
 path_url=/users/11/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:31.581" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/11/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dafa8107da92bc87eb22a4ad8deeda3121612533451; expires=Sun, 07-Mar-21 13:57:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612496627', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'Accept-Ranges': 'bytes', 'cf-request-id': '081414e371000000c5f2037000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=BBKRuLxkHba9U6Mcpmqtz3ovzErx92lRm2Yl8PN6USyE%2Fmz0pqH9YALSgjq7OwgOmK%2BkAfI6QUOXmAcsLiF3zf6yCTPIKgH7srBKRt29%2FW%2FZz5Lhw7g33rrbm9LU"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd2418bcf500c5-IAD'} 
 body=[] 
 </msg>
<msg timestamp="20210205 08:57:31.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.508" endtime="20210205 08:57:31.581"></status>
</kw>
<msg timestamp="20210205 08:57:31.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.503" endtime="20210205 08:57:31.582"></status>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.582" endtime="20210205 08:57:31.585"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.498" endtime="20210205 08:57:31.585"></status>
</kw>
<kw name="GET POST BY INVALID USER ID" library="APIHelper">
<arguments>
<arg>0</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 08:57:31.588" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 08:57:31.587" endtime="20210205 08:57:31.588"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 08:57:31.589" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 08:57:31.588" endtime="20210205 08:57:31.589"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="APIHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 08:57:31.592" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 08:57:31.591" endtime="20210205 08:57:31.593"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 08:57:31.680" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/0/posts 
 path_url=/users/0/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 08:57:31.680" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/0/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 13:57:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d387aa9b77266d2acef08215b413269b31612533451; expires=Sun, 07-Mar-21 13:57:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612496747', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'REVALIDATED', 'Accept-Ranges': 'bytes', 'cf-request-id': '081414e3c80000ea5540b15000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=N06Y%2Fv1MxXixaEwkIFzoCnYwt8CmLkQmSr4OXxr7l%2B5zHOH621IkJzUlzxYxzCC%2B58QONumoQm7xHL5epJ2y3RNDyXdvEL2cTT9k6g7IPY56GDRA%2B4ItlbgQ1ZTx"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cd24194a51ea55-IAD'} 
 body=[] 
 </msg>
<msg timestamp="20210205 08:57:31.680" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.593" endtime="20210205 08:57:31.681"></status>
</kw>
<msg timestamp="20210205 08:57:31.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 08:57:31.589" endtime="20210205 08:57:31.681"></status>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 08:57:31.681" endtime="20210205 08:57:31.683"></status>
</kw>
<status status="PASS" starttime="20210205 08:57:31.586" endtime="20210205 08:57:31.684"></status>
</kw>
<doc>Validate Edge Cases for Getting post by invalid user id</doc>
<tags>
<tag>Negative</tag>
</tags>
<status status="PASS" starttime="20210205 08:57:31.472" endtime="20210205 08:57:31.685" critical="yes"></status>
</test>
<status status="PASS" starttime="20210205 08:57:11.059" endtime="20210205 08:57:31.695"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0">Negative</stat>
<stat pass="3" fail="0">Positive</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="TS001 GET Posts">TS001 GET Posts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
