<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210205 17:12:15.720" rpa="false">
<suite id="s1" name="TS001 Posts" source="C:\typicodetests\http-jsonplaceholder.typicode.com-robotframework\RobotAutomation\TestCases\GetPostsTC\TS001_Posts.robot">
<test id="s1-t1" name="TC001 VALIDATE GET ALL POSTS ENDPOINT">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:16.285" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:16.284" endtime="20210205 17:12:16.285"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 17:12:16.287" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.286" endtime="20210205 17:12:16.287"></status>
</kw>
<msg timestamp="20210205 17:12:16.287" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.283" endtime="20210205 17:12:16.287"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.290" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.288" endtime="20210205 17:12:16.290"></status>
</kw>
<msg timestamp="20210205 17:12:16.290" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.288" endtime="20210205 17:12:16.290"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.291" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.290" endtime="20210205 17:12:16.291"></status>
</kw>
<msg timestamp="20210205 17:12:16.291" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.290" endtime="20210205 17:12:16.292"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.293" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.292" endtime="20210205 17:12:16.293"></status>
</kw>
<msg timestamp="20210205 17:12:16.293" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.292" endtime="20210205 17:12:16.293"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.295" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.294" endtime="20210205 17:12:16.295"></status>
</kw>
<msg timestamp="20210205 17:12:16.295" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.293" endtime="20210205 17:12:16.295"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.297" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.296" endtime="20210205 17:12:16.297"></status>
</kw>
<msg timestamp="20210205 17:12:16.298" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.296" endtime="20210205 17:12:16.298"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.300" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.299" endtime="20210205 17:12:16.300"></status>
</kw>
<msg timestamp="20210205 17:12:16.301" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.298" endtime="20210205 17:12:16.301"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.303" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.301" endtime="20210205 17:12:16.303"></status>
</kw>
<msg timestamp="20210205 17:12:16.303" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.301" endtime="20210205 17:12:16.303"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.305" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.304" endtime="20210205 17:12:16.306"></status>
</kw>
<msg timestamp="20210205 17:12:16.306" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.303" endtime="20210205 17:12:16.306"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.307" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.307" endtime="20210205 17:12:16.308"></status>
</kw>
<msg timestamp="20210205 17:12:16.308" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.306" endtime="20210205 17:12:16.308"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.310" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.309" endtime="20210205 17:12:16.310"></status>
</kw>
<msg timestamp="20210205 17:12:16.310" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.308" endtime="20210205 17:12:16.310"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.312" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.311" endtime="20210205 17:12:16.312"></status>
</kw>
<msg timestamp="20210205 17:12:16.312" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.310" endtime="20210205 17:12:16.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.314" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.313" endtime="20210205 17:12:16.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 17:12:16.315" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 17:12:16.314" endtime="20210205 17:12:16.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.316" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.315" endtime="20210205 17:12:16.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.317" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.316" endtime="20210205 17:12:16.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.318" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.317" endtime="20210205 17:12:16.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.319" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.318" endtime="20210205 17:12:16.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.320" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.319" endtime="20210205 17:12:16.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.321" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.320" endtime="20210205 17:12:16.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.322" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.321" endtime="20210205 17:12:16.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.323" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.322" endtime="20210205 17:12:16.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.324" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.323" endtime="20210205 17:12:16.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.326" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.325" endtime="20210205 17:12:16.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.327" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.326" endtime="20210205 17:12:16.328"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.282" endtime="20210205 17:12:16.328"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_All_Posts</arg>
<arg>${base_url}</arg>
<arg>/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.331" level="INFO">Creating Session using : alias=Get_All_Posts, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:16.331" endtime="20210205 17:12:16.332"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:16.426" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:16.427" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=deb3f72911a67a2bfde7557dfbfc0ddc71612563136; expires=Sun, 07-Mar-21 22:12:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612307992', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23185', 'cf-request-id': '0815d9d86000000ced42310000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=N9HjEZjNyCAWkjKUcagIF9%2BdFeGtKl%2B%2BjYIHEKKz4%2FJdN907SNMJLy1%2F1I2uwhwVHIn0JpMs7BK5jLxdj5ZB%2F2yYS0VWmd7zAxk7WcauhCWOlOIqCMubnlunX25W"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8d3cfd00ced-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210205 17:12:16.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.332" endtime="20210205 17:12:16.427"></status>
</kw>
<msg timestamp="20210205 17:12:16.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.328" endtime="20210205 17:12:16.427"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>All</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.429" endtime="20210205 17:12:16.440"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.429" endtime="20210205 17:12:16.441"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.428" endtime="20210205 17:12:16.441"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.442" endtime="20210205 17:12:16.442"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.441" endtime="20210205 17:12:16.442"></status>
</kw>
<kw name="VALIDATE RESPONSE SIZE" library="PostsHelper">
<arguments>
<arg>${allpostcnt}</arg>
<arg>${response}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idlist}</var>
</assign>
<msg timestamp="20210205 17:12:16.443" level="INFO">@{idlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:16.443" endtime="20210205 17:12:16.443"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.444" endtime="20210205 17:12:16.444"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.444" endtime="20210205 17:12:16.444"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.444" endtime="20210205 17:12:16.445"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.444" endtime="20210205 17:12:16.445"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.445" endtime="20210205 17:12:16.445"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.445" endtime="20210205 17:12:16.445"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.445" endtime="20210205 17:12:16.446"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.445" endtime="20210205 17:12:16.446"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.447" endtime="20210205 17:12:16.447"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.446" endtime="20210205 17:12:16.447"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.448" endtime="20210205 17:12:16.448"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.447" endtime="20210205 17:12:16.448"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.448" endtime="20210205 17:12:16.449"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.448" endtime="20210205 17:12:16.449"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.449" endtime="20210205 17:12:16.449"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.449" endtime="20210205 17:12:16.449"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.450" endtime="20210205 17:12:16.451"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.450" endtime="20210205 17:12:16.451"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.451" endtime="20210205 17:12:16.452"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.451" endtime="20210205 17:12:16.452"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.452" endtime="20210205 17:12:16.453"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.452" endtime="20210205 17:12:16.453"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.453" endtime="20210205 17:12:16.454"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.453" endtime="20210205 17:12:16.454"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.454" endtime="20210205 17:12:16.455"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.454" endtime="20210205 17:12:16.455"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.455" endtime="20210205 17:12:16.456"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.455" endtime="20210205 17:12:16.456"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.456" endtime="20210205 17:12:16.457"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.456" endtime="20210205 17:12:16.457"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.457" endtime="20210205 17:12:16.458"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.457" endtime="20210205 17:12:16.458"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.458" endtime="20210205 17:12:16.459"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.458" endtime="20210205 17:12:16.459"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.459" endtime="20210205 17:12:16.460"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.459" endtime="20210205 17:12:16.460"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.460" endtime="20210205 17:12:16.460"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.460" endtime="20210205 17:12:16.460"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.461" endtime="20210205 17:12:16.461"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.461" endtime="20210205 17:12:16.461"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.461" endtime="20210205 17:12:16.462"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.461" endtime="20210205 17:12:16.462"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.462" endtime="20210205 17:12:16.463"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.462" endtime="20210205 17:12:16.463"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.463" endtime="20210205 17:12:16.464"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.463" endtime="20210205 17:12:16.464"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.464" endtime="20210205 17:12:16.465"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.464" endtime="20210205 17:12:16.465"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.465" endtime="20210205 17:12:16.465"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.465" endtime="20210205 17:12:16.465"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.466" endtime="20210205 17:12:16.466"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.466" endtime="20210205 17:12:16.466"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.467" endtime="20210205 17:12:16.467"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.467" endtime="20210205 17:12:16.467"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.468" endtime="20210205 17:12:16.468"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.468" endtime="20210205 17:12:16.468"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.469" endtime="20210205 17:12:16.469"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.468" endtime="20210205 17:12:16.469"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.470" endtime="20210205 17:12:16.470"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.470" endtime="20210205 17:12:16.470"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.471" endtime="20210205 17:12:16.471"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.470" endtime="20210205 17:12:16.471"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.472" endtime="20210205 17:12:16.472"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.471" endtime="20210205 17:12:16.472"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.472" endtime="20210205 17:12:16.473"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.472" endtime="20210205 17:12:16.473"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.473" endtime="20210205 17:12:16.474"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.473" endtime="20210205 17:12:16.474"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.474" endtime="20210205 17:12:16.475"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.474" endtime="20210205 17:12:16.475"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.475" endtime="20210205 17:12:16.476"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.475" endtime="20210205 17:12:16.476"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.476" endtime="20210205 17:12:16.476"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.476" endtime="20210205 17:12:16.476"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.476" endtime="20210205 17:12:16.476"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.476" endtime="20210205 17:12:16.477"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.477" endtime="20210205 17:12:16.477"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.477" endtime="20210205 17:12:16.477"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.477" endtime="20210205 17:12:16.477"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.477" endtime="20210205 17:12:16.478"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.478" endtime="20210205 17:12:16.478"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.478" endtime="20210205 17:12:16.478"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.478" endtime="20210205 17:12:16.478"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.478" endtime="20210205 17:12:16.478"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.479" endtime="20210205 17:12:16.479"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.479" endtime="20210205 17:12:16.479"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.480" endtime="20210205 17:12:16.480"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.480" endtime="20210205 17:12:16.480"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.480" endtime="20210205 17:12:16.480"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.480" endtime="20210205 17:12:16.480"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.481" endtime="20210205 17:12:16.481"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.481" endtime="20210205 17:12:16.481"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.481" endtime="20210205 17:12:16.481"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.481" endtime="20210205 17:12:16.481"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.482" endtime="20210205 17:12:16.482"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.481" endtime="20210205 17:12:16.482"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.482" endtime="20210205 17:12:16.482"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.482" endtime="20210205 17:12:16.482"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.483" endtime="20210205 17:12:16.483"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.482" endtime="20210205 17:12:16.483"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.483" endtime="20210205 17:12:16.483"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.483" endtime="20210205 17:12:16.483"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.483" endtime="20210205 17:12:16.484"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.483" endtime="20210205 17:12:16.484"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.484" endtime="20210205 17:12:16.484"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.484" endtime="20210205 17:12:16.484"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.485" endtime="20210205 17:12:16.485"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.484" endtime="20210205 17:12:16.485"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.485" endtime="20210205 17:12:16.485"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.485" endtime="20210205 17:12:16.485"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.486" endtime="20210205 17:12:16.486"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.485" endtime="20210205 17:12:16.486"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.486" endtime="20210205 17:12:16.486"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.486" endtime="20210205 17:12:16.486"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.487" endtime="20210205 17:12:16.487"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.486" endtime="20210205 17:12:16.487"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.487" endtime="20210205 17:12:16.487"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.487" endtime="20210205 17:12:16.487"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.488" endtime="20210205 17:12:16.488"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.488" endtime="20210205 17:12:16.488"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.488" endtime="20210205 17:12:16.489"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.488" endtime="20210205 17:12:16.489"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.489" endtime="20210205 17:12:16.489"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.489" endtime="20210205 17:12:16.489"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.489" endtime="20210205 17:12:16.490"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.489" endtime="20210205 17:12:16.490"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.490" endtime="20210205 17:12:16.490"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.490" endtime="20210205 17:12:16.490"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.491" endtime="20210205 17:12:16.491"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.490" endtime="20210205 17:12:16.491"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.491" endtime="20210205 17:12:16.491"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.491" endtime="20210205 17:12:16.491"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.492" endtime="20210205 17:12:16.492"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.492" endtime="20210205 17:12:16.492"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.492" endtime="20210205 17:12:16.492"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.492" endtime="20210205 17:12:16.493"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.493" endtime="20210205 17:12:16.493"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.493" endtime="20210205 17:12:16.493"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.493" endtime="20210205 17:12:16.494"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.493" endtime="20210205 17:12:16.494"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.494" endtime="20210205 17:12:16.494"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.494" endtime="20210205 17:12:16.494"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.494" endtime="20210205 17:12:16.495"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.494" endtime="20210205 17:12:16.495"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.495" endtime="20210205 17:12:16.495"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.495" endtime="20210205 17:12:16.495"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.495" endtime="20210205 17:12:16.496"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.495" endtime="20210205 17:12:16.496"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.496" endtime="20210205 17:12:16.496"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.496" endtime="20210205 17:12:16.496"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.497" endtime="20210205 17:12:16.497"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.497" endtime="20210205 17:12:16.497"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.498" endtime="20210205 17:12:16.498"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.498" endtime="20210205 17:12:16.498"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.499" endtime="20210205 17:12:16.499"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.499" endtime="20210205 17:12:16.499"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.500" endtime="20210205 17:12:16.500"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.499" endtime="20210205 17:12:16.500"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.500" endtime="20210205 17:12:16.501"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.500" endtime="20210205 17:12:16.501"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.501" endtime="20210205 17:12:16.502"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.501" endtime="20210205 17:12:16.502"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.502" endtime="20210205 17:12:16.503"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.502" endtime="20210205 17:12:16.503"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.503" endtime="20210205 17:12:16.503"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.503" endtime="20210205 17:12:16.503"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.504" endtime="20210205 17:12:16.504"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.504" endtime="20210205 17:12:16.504"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.504" endtime="20210205 17:12:16.505"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.504" endtime="20210205 17:12:16.505"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.505" endtime="20210205 17:12:16.505"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.505" endtime="20210205 17:12:16.505"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.506" endtime="20210205 17:12:16.506"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.506" endtime="20210205 17:12:16.506"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.506" endtime="20210205 17:12:16.507"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.506" endtime="20210205 17:12:16.507"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.507" endtime="20210205 17:12:16.507"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.507" endtime="20210205 17:12:16.507"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.507" endtime="20210205 17:12:16.508"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.507" endtime="20210205 17:12:16.508"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.508" endtime="20210205 17:12:16.508"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.508" endtime="20210205 17:12:16.508"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.508" endtime="20210205 17:12:16.509"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.508" endtime="20210205 17:12:16.509"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.509" endtime="20210205 17:12:16.510"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.509" endtime="20210205 17:12:16.510"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.510" endtime="20210205 17:12:16.511"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.510" endtime="20210205 17:12:16.511"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.511" endtime="20210205 17:12:16.512"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.511" endtime="20210205 17:12:16.512"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.512" endtime="20210205 17:12:16.513"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.512" endtime="20210205 17:12:16.513"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.513" endtime="20210205 17:12:16.514"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.513" endtime="20210205 17:12:16.514"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.514" endtime="20210205 17:12:16.515"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.514" endtime="20210205 17:12:16.515"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.515" endtime="20210205 17:12:16.516"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.515" endtime="20210205 17:12:16.516"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.516" endtime="20210205 17:12:16.516"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.516" endtime="20210205 17:12:16.517"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.443" endtime="20210205 17:12:16.517"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${idlist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 17:12:16.517" level="INFO">Length is 100</msg>
<msg timestamp="20210205 17:12:16.517" level="INFO">${cnt} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.517" endtime="20210205 17:12:16.517"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${cnt}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.517" endtime="20210205 17:12:16.518"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idlist}</var>
</assign>
<msg timestamp="20210205 17:12:16.518" level="INFO">@{idlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:16.518" endtime="20210205 17:12:16.519"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.443" endtime="20210205 17:12:16.519"></status>
</kw>
<doc>Validate Get All Posts REST endpoint status code, response size and user post count</doc>
<tags>
<tag>Positive</tag>
</tags>
<status status="PASS" starttime="20210205 17:12:16.281" endtime="20210205 17:12:16.520" critical="yes"></status>
</test>
<test id="s1-t2" name="TC002 VALIDATE POST COUNT BY USER ID - VALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:16.525" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:16.524" endtime="20210205 17:12:16.525"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 17:12:16.527" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.526" endtime="20210205 17:12:16.527"></status>
</kw>
<msg timestamp="20210205 17:12:16.527" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.523" endtime="20210205 17:12:16.528"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.530" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.529" endtime="20210205 17:12:16.530"></status>
</kw>
<msg timestamp="20210205 17:12:16.531" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.528" endtime="20210205 17:12:16.531"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.533" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.532" endtime="20210205 17:12:16.533"></status>
</kw>
<msg timestamp="20210205 17:12:16.533" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.531" endtime="20210205 17:12:16.533"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.535" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.534" endtime="20210205 17:12:16.535"></status>
</kw>
<msg timestamp="20210205 17:12:16.535" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.533" endtime="20210205 17:12:16.535"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.537" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.536" endtime="20210205 17:12:16.538"></status>
</kw>
<msg timestamp="20210205 17:12:16.538" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.536" endtime="20210205 17:12:16.538"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.540" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.539" endtime="20210205 17:12:16.540"></status>
</kw>
<msg timestamp="20210205 17:12:16.540" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.538" endtime="20210205 17:12:16.541"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.542" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.541" endtime="20210205 17:12:16.542"></status>
</kw>
<msg timestamp="20210205 17:12:16.543" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.541" endtime="20210205 17:12:16.543"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.544" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.543" endtime="20210205 17:12:16.544"></status>
</kw>
<msg timestamp="20210205 17:12:16.545" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.543" endtime="20210205 17:12:16.545"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.547" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.546" endtime="20210205 17:12:16.547"></status>
</kw>
<msg timestamp="20210205 17:12:16.548" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.545" endtime="20210205 17:12:16.548"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.549" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.548" endtime="20210205 17:12:16.549"></status>
</kw>
<msg timestamp="20210205 17:12:16.549" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.548" endtime="20210205 17:12:16.549"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.551" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.550" endtime="20210205 17:12:16.551"></status>
</kw>
<msg timestamp="20210205 17:12:16.551" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.549" endtime="20210205 17:12:16.551"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.552" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.552" endtime="20210205 17:12:16.552"></status>
</kw>
<msg timestamp="20210205 17:12:16.552" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.551" endtime="20210205 17:12:16.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.553" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.553" endtime="20210205 17:12:16.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 17:12:16.554" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 17:12:16.553" endtime="20210205 17:12:16.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.554" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.554" endtime="20210205 17:12:16.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.555" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.554" endtime="20210205 17:12:16.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.555" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.555" endtime="20210205 17:12:16.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.555" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.555" endtime="20210205 17:12:16.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.556" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.556" endtime="20210205 17:12:16.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.556" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.556" endtime="20210205 17:12:16.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.557" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.557" endtime="20210205 17:12:16.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.557" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.557" endtime="20210205 17:12:16.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.558" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.558" endtime="20210205 17:12:16.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.558" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.558" endtime="20210205 17:12:16.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.559" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.559" endtime="20210205 17:12:16.559"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.522" endtime="20210205 17:12:16.559"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Valid Id Boundary Keys on TestData.json: users.validInitial, users.validInitCount, users.validFinal, users.validFinalCCount</arg>
</arguments>
<msg timestamp="20210205 17:12:16.561" level="INFO">Set test documentation to:
Valid Id Boundary Keys on TestData.json: users.validInitial, users.validInitCount, users.validFinal, users.validFinalCCount</msg>
<status status="PASS" starttime="20210205 17:12:16.560" endtime="20210205 17:12:16.561"></status>
</kw>
<kw name="VALIDATE POST COUNT BY USER ID" library="PostsHelper">
<arguments>
<arg>${userinId}</arg>
<arg>${userinCount}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:16.562" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:16.561" endtime="20210205 17:12:16.562"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:16.564" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.563" endtime="20210205 17:12:16.564"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.566" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:16.565" endtime="20210205 17:12:16.566"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:16.618" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/1/posts 
 path_url=/users/1/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:16.618" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/1/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d6d7702001583b86dbc7568df1e368d661612563136; expires=Sun, 07-Mar-21 22:12:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612397753', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"aa6-j2NSH739l9uq40OywFMn7Y0C/iY"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12933', 'cf-request-id': '0815d9d9400000153a37968000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=wp2EdhB7cFtQ2gFimrX7%2B4G04j4EeB7r2bYk3dIim%2BfVidprun2HGpOmyWHincP0ZE0%2FE%2BRSgthwhM%2FOIJgRX3Zl%2BQ3prfGk69fTvAj5s0QoW0KZ93FsIBiBl1jf"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8d53cfc153a-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  }
] 
 </msg>
<msg timestamp="20210205 17:12:16.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.566" endtime="20210205 17:12:16.618"></status>
</kw>
<msg timestamp="20210205 17:12:16.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.564" endtime="20210205 17:12:16.618"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="PostsHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 17:12:16.619" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:16.619" endtime="20210205 17:12:16.619"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.620" endtime="20210205 17:12:16.620"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.620" endtime="20210205 17:12:16.620"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.621" endtime="20210205 17:12:16.621"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.621" endtime="20210205 17:12:16.621"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.621" endtime="20210205 17:12:16.622"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.621" endtime="20210205 17:12:16.622"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.622" endtime="20210205 17:12:16.622"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.622" endtime="20210205 17:12:16.622"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.622" endtime="20210205 17:12:16.623"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.622" endtime="20210205 17:12:16.623"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.623" endtime="20210205 17:12:16.623"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.623" endtime="20210205 17:12:16.623"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.624" endtime="20210205 17:12:16.624"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.624" endtime="20210205 17:12:16.624"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.624" endtime="20210205 17:12:16.625"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.624" endtime="20210205 17:12:16.625"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.625" endtime="20210205 17:12:16.625"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.625" endtime="20210205 17:12:16.625"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.625" endtime="20210205 17:12:16.626"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.625" endtime="20210205 17:12:16.626"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.620" endtime="20210205 17:12:16.626"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 17:12:16.626" level="INFO">Length is 10</msg>
<msg timestamp="20210205 17:12:16.626" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.626" endtime="20210205 17:12:16.626"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 17:12:16.627" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:16.626" endtime="20210205 17:12:16.627"></status>
</kw>
<msg timestamp="20210205 17:12:16.627" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.619" endtime="20210205 17:12:16.627"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${exppostcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.627" endtime="20210205 17:12:16.627"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.561" endtime="20210205 17:12:16.628"></status>
</kw>
<kw name="VALIDATE POST COUNT BY USER ID" library="PostsHelper">
<arguments>
<arg>${userfId}</arg>
<arg>${userfCount}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:16.630" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:16.629" endtime="20210205 17:12:16.630"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:16.630" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.630" endtime="20210205 17:12:16.630"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.632" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:16.631" endtime="20210205 17:12:16.633"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:16.685" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/10/posts 
 path_url=/users/10/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:16.685" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/10/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d85ea9d37d8675e325ede5e338b7469171612563136; expires=Sun, 07-Mar-21 22:12:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612542892', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"a68-bp+xhXz2hSYZZUvrpfEFLIhQbe4"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '20267', 'cf-request-id': '0815d9d9820000e72caf876000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=VVd7AfKU5%2BDaYOduuK5AUscUmZwE8O6TTyujifcpjbhjV4sTHfO%2BCaaJqy7boIkfP60W4HMlMDyXj48NJ30NXqedp%2F6XO0zm%2BzRUC83DByLamAuyt2GAni5rVn41"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8d59ce5e72c-EWR'} 
 body=[
  {
    "userId": 10,
    "id": 91,
    "title": "aut amet sed",
    "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
  },
  {
    "userId": 10,
    "id": 92,
    "title": "ratione ex tenetur perferendis",
    "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
  },
  {
    "userId": 10,
    "id": 93,
    "title": "beatae soluta recusandae",
    "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
  },
  {
    "userId": 10,
    "id": 94,
    "title": "qui qui voluptates illo iste minima",
    "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
  },
  {
    "userId": 10,
    "id": 95,
    "title": "id minus libero illum nam ad officiis",
    "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
  },
  {
    "userId": 10,
    "id": 96,
    "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
    "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
  },
  {
    "userId": 10,
    "id": 97,
    "title": "quas fugiat ut perspiciatis vero provident",
    "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
  },
  {
    "userId": 10,
    "id": 98,
    "title": "laboriosam dolor voluptates",
    "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
  },
  {
    "userId": 10,
    "id": 99,
    "title": "temporibus sit alias delectus eligendi possimus magni",
    "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
  },
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<msg timestamp="20210205 17:12:16.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.633" endtime="20210205 17:12:16.686"></status>
</kw>
<msg timestamp="20210205 17:12:16.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.631" endtime="20210205 17:12:16.686"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="PostsHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 17:12:16.687" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:16.686" endtime="20210205 17:12:16.687"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.687" endtime="20210205 17:12:16.688"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.687" endtime="20210205 17:12:16.688"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.688" endtime="20210205 17:12:16.688"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.688" endtime="20210205 17:12:16.688"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.689" endtime="20210205 17:12:16.689"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.689" endtime="20210205 17:12:16.689"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.689" endtime="20210205 17:12:16.689"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.689" endtime="20210205 17:12:16.689"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.690" endtime="20210205 17:12:16.690"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.690" endtime="20210205 17:12:16.690"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.690" endtime="20210205 17:12:16.690"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.690" endtime="20210205 17:12:16.690"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.691" endtime="20210205 17:12:16.691"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.690" endtime="20210205 17:12:16.691"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.691" endtime="20210205 17:12:16.691"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.691" endtime="20210205 17:12:16.691"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.692" endtime="20210205 17:12:16.692"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.691" endtime="20210205 17:12:16.692"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.692" endtime="20210205 17:12:16.692"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.692" endtime="20210205 17:12:16.692"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.687" endtime="20210205 17:12:16.692"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 17:12:16.693" level="INFO">Length is 10</msg>
<msg timestamp="20210205 17:12:16.693" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.692" endtime="20210205 17:12:16.693"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 17:12:16.693" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:16.693" endtime="20210205 17:12:16.693"></status>
</kw>
<msg timestamp="20210205 17:12:16.693" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.686" endtime="20210205 17:12:16.693"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${exppostcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.693" endtime="20210205 17:12:16.694"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.628" endtime="20210205 17:12:16.694"></status>
</kw>
<doc>Valid Id Boundary Keys on TestData.json: users.validInitial, users.validInitCount, users.validFinal, users.validFinalCCount</doc>
<tags>
<tag>Positive Boundary</tag>
</tags>
<status status="PASS" starttime="20210205 17:12:16.521" endtime="20210205 17:12:16.694" critical="yes"></status>
</test>
<test id="s1-t3" name="TC003 VALIDATE EMPTY POST COUNT BY INVALID USER ID - INVALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:16.698" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:16.696" endtime="20210205 17:12:16.698"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 17:12:16.699" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.698" endtime="20210205 17:12:16.699"></status>
</kw>
<msg timestamp="20210205 17:12:16.699" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.696" endtime="20210205 17:12:16.699"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.701" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.700" endtime="20210205 17:12:16.701"></status>
</kw>
<msg timestamp="20210205 17:12:16.702" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.700" endtime="20210205 17:12:16.702"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.704" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.703" endtime="20210205 17:12:16.704"></status>
</kw>
<msg timestamp="20210205 17:12:16.705" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.702" endtime="20210205 17:12:16.705"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.707" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.706" endtime="20210205 17:12:16.707"></status>
</kw>
<msg timestamp="20210205 17:12:16.707" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.705" endtime="20210205 17:12:16.707"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.708" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.708" endtime="20210205 17:12:16.708"></status>
</kw>
<msg timestamp="20210205 17:12:16.709" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.707" endtime="20210205 17:12:16.709"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.710" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.709" endtime="20210205 17:12:16.710"></status>
</kw>
<msg timestamp="20210205 17:12:16.710" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.709" endtime="20210205 17:12:16.711"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.712" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.711" endtime="20210205 17:12:16.712"></status>
</kw>
<msg timestamp="20210205 17:12:16.712" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.711" endtime="20210205 17:12:16.713"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.715" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.713" endtime="20210205 17:12:16.715"></status>
</kw>
<msg timestamp="20210205 17:12:16.715" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.713" endtime="20210205 17:12:16.715"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.716" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.715" endtime="20210205 17:12:16.716"></status>
</kw>
<msg timestamp="20210205 17:12:16.717" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.715" endtime="20210205 17:12:16.717"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.718" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.717" endtime="20210205 17:12:16.718"></status>
</kw>
<msg timestamp="20210205 17:12:16.718" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.717" endtime="20210205 17:12:16.718"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.721" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.719" endtime="20210205 17:12:16.721"></status>
</kw>
<msg timestamp="20210205 17:12:16.721" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.719" endtime="20210205 17:12:16.721"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.723" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.722" endtime="20210205 17:12:16.723"></status>
</kw>
<msg timestamp="20210205 17:12:16.723" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.721" endtime="20210205 17:12:16.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.724" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.724" endtime="20210205 17:12:16.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 17:12:16.725" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 17:12:16.724" endtime="20210205 17:12:16.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.725" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.725" endtime="20210205 17:12:16.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.726" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.726" endtime="20210205 17:12:16.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.727" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.726" endtime="20210205 17:12:16.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.727" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.727" endtime="20210205 17:12:16.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.727" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.727" endtime="20210205 17:12:16.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.728" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.728" endtime="20210205 17:12:16.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.728" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.728" endtime="20210205 17:12:16.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.729" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.728" endtime="20210205 17:12:16.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.730" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.729" endtime="20210205 17:12:16.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.731" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.730" endtime="20210205 17:12:16.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.731" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.731" endtime="20210205 17:12:16.731"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.696" endtime="20210205 17:12:16.731"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Invalid Id Boundary Keys on TestData.json: users.InvalidInitial, users.InvalidFinal</arg>
</arguments>
<msg timestamp="20210205 17:12:16.733" level="INFO">Set test documentation to:
Invalid Id Boundary Keys on TestData.json: users.InvalidInitial, users.InvalidFinal</msg>
<status status="PASS" starttime="20210205 17:12:16.732" endtime="20210205 17:12:16.733"></status>
</kw>
<kw name="VALIDATE POST COUNT BY INVALID USER ID" library="PostsHelper">
<arguments>
<arg>${invalidIuserid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:16.734" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:16.734" endtime="20210205 17:12:16.734"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:16.735" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.734" endtime="20210205 17:12:16.735"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.737" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:16.737" endtime="20210205 17:12:16.737"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:16.797" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/0/posts 
 path_url=/users/0/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:16.797" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/0/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df0fb16c29a01ce810b35873682f02e0e1612563137; expires=Sun, 07-Mar-21 22:12:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612543132', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '20027', 'Accept-Ranges': 'bytes', 'cf-request-id': '0815d9d9f00000e6f0223a4000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=vLpJVcyNtrMrAE3reoR7MhBNtjXPhPyNfPf%2FldCJoIZFu1a5IaX6hhodf1uTK2rXEF3aaW6sHpMwxOO53CjqXIFbsGn5mgZGndGY2uspdGYzM6dWfNFadvkLMPCI"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8d64833e6f0-EWR'} 
 body=[] 
 </msg>
<msg timestamp="20210205 17:12:16.797" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.738" endtime="20210205 17:12:16.797"></status>
</kw>
<msg timestamp="20210205 17:12:16.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.736" endtime="20210205 17:12:16.798"></status>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.798" endtime="20210205 17:12:16.799"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.733" endtime="20210205 17:12:16.800"></status>
</kw>
<kw name="VALIDATE POST COUNT BY INVALID USER ID" library="PostsHelper">
<arguments>
<arg>${invalidFuserid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:16.802" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:16.801" endtime="20210205 17:12:16.802"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:16.804" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.802" endtime="20210205 17:12:16.805"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.806" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:16.805" endtime="20210205 17:12:16.806"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:16.876" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/11/posts 
 path_url=/users/11/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:16.876" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/11/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4c17513e44b0d928a8c91ed04dfa1f641612563137; expires=Sun, 07-Mar-21 22:12:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612543132', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '20027', 'Accept-Ranges': 'bytes', 'cf-request-id': '0815d9da4000003e3abda06000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mL2erWjTF3Sbhe6gapaLDwKxrW8PcSjJbJ5v5ccdmVX85UWF65WdQBlMmz3QO%2B5qWARB%2B%2FFsXDKFrG1mHVOE%2FwpP8rTzy%2FAwP%2FFrfz43uPG2qECXHVoILJh1CMA9"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8d6c8543e3a-EWR'} 
 body=[] 
 </msg>
<msg timestamp="20210205 17:12:16.876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.807" endtime="20210205 17:12:16.876"></status>
</kw>
<msg timestamp="20210205 17:12:16.876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.805" endtime="20210205 17:12:16.876"></status>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:16.876" endtime="20210205 17:12:16.877"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.800" endtime="20210205 17:12:16.878"></status>
</kw>
<doc>Invalid Id Boundary Keys on TestData.json: users.InvalidInitial, users.InvalidFinal</doc>
<tags>
<tag>Negative Boundary</tag>
</tags>
<status status="PASS" starttime="20210205 17:12:16.695" endtime="20210205 17:12:16.878" critical="yes"></status>
</test>
<test id="s1-t4" name="TC004 VALIDATE GET POST BY POST ID - VALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:16.882" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:16.881" endtime="20210205 17:12:16.882"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 17:12:16.883" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.882" endtime="20210205 17:12:16.883"></status>
</kw>
<msg timestamp="20210205 17:12:16.883" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.880" endtime="20210205 17:12:16.883"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.885" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.884" endtime="20210205 17:12:16.885"></status>
</kw>
<msg timestamp="20210205 17:12:16.885" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.883" endtime="20210205 17:12:16.885"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.908" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.886" endtime="20210205 17:12:16.908"></status>
</kw>
<msg timestamp="20210205 17:12:16.908" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.885" endtime="20210205 17:12:16.908"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.910" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.909" endtime="20210205 17:12:16.910"></status>
</kw>
<msg timestamp="20210205 17:12:16.910" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.908" endtime="20210205 17:12:16.910"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.912" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.911" endtime="20210205 17:12:16.912"></status>
</kw>
<msg timestamp="20210205 17:12:16.913" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.911" endtime="20210205 17:12:16.913"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.915" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.914" endtime="20210205 17:12:16.915"></status>
</kw>
<msg timestamp="20210205 17:12:16.916" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.913" endtime="20210205 17:12:16.916"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.917" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.917" endtime="20210205 17:12:16.918"></status>
</kw>
<msg timestamp="20210205 17:12:16.918" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.916" endtime="20210205 17:12:16.918"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.920" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.919" endtime="20210205 17:12:16.920"></status>
</kw>
<msg timestamp="20210205 17:12:16.920" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.918" endtime="20210205 17:12:16.920"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.923" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.921" endtime="20210205 17:12:16.923"></status>
</kw>
<msg timestamp="20210205 17:12:16.923" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.920" endtime="20210205 17:12:16.923"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.925" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.924" endtime="20210205 17:12:16.925"></status>
</kw>
<msg timestamp="20210205 17:12:16.925" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.923" endtime="20210205 17:12:16.925"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.927" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.926" endtime="20210205 17:12:16.927"></status>
</kw>
<msg timestamp="20210205 17:12:16.927" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.925" endtime="20210205 17:12:16.928"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:16.929" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.928" endtime="20210205 17:12:16.929"></status>
</kw>
<msg timestamp="20210205 17:12:16.930" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.928" endtime="20210205 17:12:16.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.931" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.930" endtime="20210205 17:12:16.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 17:12:16.932" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 17:12:16.931" endtime="20210205 17:12:16.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.932" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.932" endtime="20210205 17:12:16.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.933" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.933" endtime="20210205 17:12:16.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.934" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.933" endtime="20210205 17:12:16.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.935" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.934" endtime="20210205 17:12:16.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.935" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:16.935" endtime="20210205 17:12:16.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.936" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.935" endtime="20210205 17:12:16.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.936" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:16.936" endtime="20210205 17:12:16.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.937" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:16.937" endtime="20210205 17:12:16.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.938" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 17:12:16.937" endtime="20210205 17:12:16.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.939" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:16.938" endtime="20210205 17:12:16.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.939" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:16.939" endtime="20210205 17:12:16.940"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.880" endtime="20210205 17:12:16.940"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Valid Post Id Boundary Values on TestData.json: posts.validInitial, posts.validFinal</arg>
</arguments>
<msg timestamp="20210205 17:12:16.941" level="INFO">Set test documentation to:
Valid Post Id Boundary Values on TestData.json: posts.validInitial, posts.validFinal</msg>
<status status="PASS" starttime="20210205 17:12:16.941" endtime="20210205 17:12:16.941"></status>
</kw>
<kw name="VALIDATE POST BY VALID POST ID" library="PostsHelper">
<arguments>
<arg>${postinId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:16.943" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:16.942" endtime="20210205 17:12:16.943"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:16.944" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:16.943" endtime="20210205 17:12:16.944"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:16.945" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:16.945" endtime="20210205 17:12:16.945"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:16.998" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:16.998" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d6894580fe2a1a0d91f2a70a2eb95bdec1612563137; expires=Sun, 07-Mar-21 22:12:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23288', 'cf-request-id': '0815d9daba00003dc160032000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=hI3A3iEnHUil3XqADk%2FUpkgnoouSLN9apsf83WZvuooqPgNQgZ%2BYceM7kaDJLpKHViDXqwvqWuxeu%2BY5PuSeqChMGqpK74XDh%2FHkulGI93iaCBHFW2f4hAFJL86d"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8d79df83dc1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<msg timestamp="20210205 17:12:16.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.945" endtime="20210205 17:12:16.998"></status>
</kw>
<msg timestamp="20210205 17:12:16.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:16.944" endtime="20210205 17:12:16.999"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.000" endtime="20210205 17:12:17.002"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.999" endtime="20210205 17:12:17.003"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.999" endtime="20210205 17:12:17.003"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:17.004" endtime="20210205 17:12:17.005"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.003" endtime="20210205 17:12:17.005"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.006" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:17.006" endtime="20210205 17:12:17.006"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.069" level="INFO">${idvalue} = [1]</msg>
<status status="PASS" starttime="20210205 17:12:17.006" endtime="20210205 17:12:17.069"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:17.069" level="INFO">${responseid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.069" endtime="20210205 17:12:17.069"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:17.070" endtime="20210205 17:12:17.070"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.070" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:17.070" endtime="20210205 17:12:17.070"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.005" endtime="20210205 17:12:17.071"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:16.942" endtime="20210205 17:12:17.071"></status>
</kw>
<kw name="VALIDATE POST BY VALID POST ID" library="PostsHelper">
<arguments>
<arg>${postfId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:17.072" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:17.072" endtime="20210205 17:12:17.072"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:17.074" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:17.073" endtime="20210205 17:12:17.074"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.076" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:17.075" endtime="20210205 17:12:17.076"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:17.133" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:17.134" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5942c552bda733588b4394f007d6a9391612563137; expires=Sun, 07-Mar-21 22:12:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611591853', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23067', 'cf-request-id': '0815d9db450000e72c9dbbc000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=3da5rRUJTNXHlsVmm%2BGkf1MM3cv4%2BRYpZLAwOnLDT2rnme7BLgMzjBXPiM86TQWScZOE%2FH6J9SaytqyJo7WsTl7ZS%2BE%2F9rHqWFdQ0oDTh0FlHPgNkUOM58rCuxfv"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8d8696ee72c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<msg timestamp="20210205 17:12:17.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:17.076" endtime="20210205 17:12:17.134"></status>
</kw>
<msg timestamp="20210205 17:12:17.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:17.074" endtime="20210205 17:12:17.134"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.137" endtime="20210205 17:12:17.140"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.136" endtime="20210205 17:12:17.140"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.135" endtime="20210205 17:12:17.141"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:17.142" endtime="20210205 17:12:17.142"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.141" endtime="20210205 17:12:17.143"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.144" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:17.144" endtime="20210205 17:12:17.144"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.193" level="INFO">${idvalue} = [100]</msg>
<status status="PASS" starttime="20210205 17:12:17.144" endtime="20210205 17:12:17.193"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:17.194" level="INFO">${responseid} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.193" endtime="20210205 17:12:17.194"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:17.194" endtime="20210205 17:12:17.195"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.196" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:17.195" endtime="20210205 17:12:17.196"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.143" endtime="20210205 17:12:17.196"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.071" endtime="20210205 17:12:17.196"></status>
</kw>
<doc>Valid Post Id Boundary Values on TestData.json: posts.validInitial, posts.validFinal</doc>
<tags>
<tag>Positive Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 17:12:16.879" endtime="20210205 17:12:17.197" critical="yes"></status>
</test>
<test id="s1-t5" name="TC005 VALIDATE GET POST BY POST ID - INVALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:17.203" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:17.202" endtime="20210205 17:12:17.203"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 17:12:17.206" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:17.203" endtime="20210205 17:12:17.206"></status>
</kw>
<msg timestamp="20210205 17:12:17.207" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:17.201" endtime="20210205 17:12:17.207"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.209" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.208" endtime="20210205 17:12:17.209"></status>
</kw>
<msg timestamp="20210205 17:12:17.211" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.207" endtime="20210205 17:12:17.211"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.215" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.214" endtime="20210205 17:12:17.216"></status>
</kw>
<msg timestamp="20210205 17:12:17.216" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.211" endtime="20210205 17:12:17.216"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.218" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.217" endtime="20210205 17:12:17.218"></status>
</kw>
<msg timestamp="20210205 17:12:17.219" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.216" endtime="20210205 17:12:17.219"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.222" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.220" endtime="20210205 17:12:17.222"></status>
</kw>
<msg timestamp="20210205 17:12:17.223" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.219" endtime="20210205 17:12:17.223"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.225" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.224" endtime="20210205 17:12:17.225"></status>
</kw>
<msg timestamp="20210205 17:12:17.226" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.223" endtime="20210205 17:12:17.226"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.229" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.227" endtime="20210205 17:12:17.229"></status>
</kw>
<msg timestamp="20210205 17:12:17.229" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.226" endtime="20210205 17:12:17.229"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.232" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 17:12:17.231" endtime="20210205 17:12:17.232"></status>
</kw>
<msg timestamp="20210205 17:12:17.233" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:17.230" endtime="20210205 17:12:17.233"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.235" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.234" endtime="20210205 17:12:17.235"></status>
</kw>
<msg timestamp="20210205 17:12:17.235" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.233" endtime="20210205 17:12:17.235"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.237" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.236" endtime="20210205 17:12:17.237"></status>
</kw>
<msg timestamp="20210205 17:12:17.238" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.236" endtime="20210205 17:12:17.238"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.240" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.239" endtime="20210205 17:12:17.240"></status>
</kw>
<msg timestamp="20210205 17:12:17.241" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.238" endtime="20210205 17:12:17.241"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.243" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 17:12:17.242" endtime="20210205 17:12:17.243"></status>
</kw>
<msg timestamp="20210205 17:12:17.243" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:17.241" endtime="20210205 17:12:17.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.245" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:17.244" endtime="20210205 17:12:17.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 17:12:17.246" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 17:12:17.246" endtime="20210205 17:12:17.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.247" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.247" endtime="20210205 17:12:17.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.248" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.247" endtime="20210205 17:12:17.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.250" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.249" endtime="20210205 17:12:17.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.252" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.251" endtime="20210205 17:12:17.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.253" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.253" endtime="20210205 17:12:17.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.255" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.254" endtime="20210205 17:12:17.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.256" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:17.255" endtime="20210205 17:12:17.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.257" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.256" endtime="20210205 17:12:17.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.258" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.257" endtime="20210205 17:12:17.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.259" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.258" endtime="20210205 17:12:17.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.261" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:17.260" endtime="20210205 17:12:17.261"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.201" endtime="20210205 17:12:17.261"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Invalid Post Id Boundary Values: posts.InvalidInitial, posts.InvalidFinal</arg>
</arguments>
<msg timestamp="20210205 17:12:17.263" level="INFO">Set test documentation to:
Invalid Post Id Boundary Values: posts.InvalidInitial, posts.InvalidFinal</msg>
<status status="PASS" starttime="20210205 17:12:17.263" endtime="20210205 17:12:17.264"></status>
</kw>
<kw name="VALIDATE POST BY INVALID POST ID" library="PostsHelper">
<arguments>
<arg>${invalidIpostid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:17.266" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:17.265" endtime="20210205 17:12:17.266"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:17.267" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:17.266" endtime="20210205 17:12:17.267"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.268" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:17.268" endtime="20210205 17:12:17.269"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:17.327" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/0 
 path_url=/posts/0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:17.327" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/0 
 status=404, reason=Not Found 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=def5e3aadd56211702b11786763d7f1461612563137; expires=Sun, 07-Mar-21 22:12:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612546792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '16350', 'cf-request-id': '0815d9dbff00003de612a4f000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=MhCrQkKiBrfGXSTjL%2BjOpGipwqNKo48N%2FrZHQEVCTodBNFX8DvidG8N8Kj90ewz71lt7Tw9M%2FpxEZff9hnH5%2BBQurGm2Eej54jkRJGZEeerxssJksuES7JR%2FOZCC"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8d999503de6-EWR'} 
 body={} 
 </msg>
<msg timestamp="20210205 17:12:17.331" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/0</msg>
<status status="FAIL" starttime="20210205 17:12:17.269" endtime="20210205 17:12:17.332"></status>
</kw>
<status status="FAIL" starttime="20210205 17:12:17.268" endtime="20210205 17:12:17.332"></status>
</kw>
<msg timestamp="20210205 17:12:17.332" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/0</msg>
<status status="PASS" starttime="20210205 17:12:17.267" endtime="20210205 17:12:17.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.333" endtime="20210205 17:12:17.333"></status>
</kw>
<kw name="GET RANDOM STRING" library="PostsHelper">
<assign>
<var>${randomstr}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${randompostid}</var>
</assign>
<msg timestamp="20210205 17:12:17.334" level="INFO">${randompostid} = UpYkF</msg>
<status status="PASS" starttime="20210205 17:12:17.333" endtime="20210205 17:12:17.334"></status>
</kw>
<msg timestamp="20210205 17:12:17.334" level="INFO">${randomstr} = UpYkF</msg>
<status status="PASS" starttime="20210205 17:12:17.333" endtime="20210205 17:12:17.334"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.335" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:17.335" endtime="20210205 17:12:17.336"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:17.422" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/UpYkF 
 path_url=/posts/UpYkF 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:17.422" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/UpYkF 
 status=404, reason=Not Found 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7ef3222b6ab1e1d69a5bf42e0db09d4d1612563137; expires=Sun, 07-Mar-21 22:12:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612563161', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'MISS', 'cf-request-id': '0815d9dc4400003e3f39276000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=nvmbvDKcEBqrjGeIsq6t2tTJJQDvxRo35%2B%2Flw2F2afbmacPLCVVHe271YQyoomuPNm0q6a0uCnc4oFscfzJEjuMvWMY015%2FEAyqfONzBIqqP%2F2N%2BA4rl8AW2Nrjj"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8da09213e3f-EWR'} 
 body={} 
 </msg>
<msg timestamp="20210205 17:12:17.425" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/UpYkF</msg>
<status status="FAIL" starttime="20210205 17:12:17.336" endtime="20210205 17:12:17.426"></status>
</kw>
<status status="FAIL" starttime="20210205 17:12:17.335" endtime="20210205 17:12:17.426"></status>
</kw>
<msg timestamp="20210205 17:12:17.426" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/UpYkF</msg>
<status status="PASS" starttime="20210205 17:12:17.334" endtime="20210205 17:12:17.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.427" endtime="20210205 17:12:17.427"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.264" endtime="20210205 17:12:17.428"></status>
</kw>
<kw name="VALIDATE POST BY INVALID POST ID" library="PostsHelper">
<arguments>
<arg>${invalidFpostid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:17.430" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:17.429" endtime="20210205 17:12:17.430"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:17.431" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:17.430" endtime="20210205 17:12:17.431"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.433" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:17.433" endtime="20210205 17:12:17.434"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:17.657" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/101 
 path_url=/posts/101 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:17.658" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/101 
 status=404, reason=Not Found 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d037cb0be5b48f682f68915c0571f5a651612563137; expires=Sun, 07-Mar-21 22:12:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '998', 'x-ratelimit-reset': '1612546792', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '16350', 'cf-request-id': '0815d9dd4c0000e851910c1000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ey898tH8UCIzsh2%2BevGmdNZmYA4jilM1cbY6Elr0MW6yUGgXrhyMa6LKTaUtFSsGJIE4BsN%2F7W59vLeZ4A4OTsJMetyBEQco8QjZbr29SmENuTHEJyPIzH56mfEy"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8dbaca6e851-EWR'} 
 body={} 
 </msg>
<msg timestamp="20210205 17:12:17.661" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/101</msg>
<status status="FAIL" starttime="20210205 17:12:17.434" endtime="20210205 17:12:17.661"></status>
</kw>
<status status="FAIL" starttime="20210205 17:12:17.432" endtime="20210205 17:12:17.662"></status>
</kw>
<msg timestamp="20210205 17:12:17.662" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/101</msg>
<status status="PASS" starttime="20210205 17:12:17.431" endtime="20210205 17:12:17.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.662" endtime="20210205 17:12:17.663"></status>
</kw>
<kw name="GET RANDOM STRING" library="PostsHelper">
<assign>
<var>${randomstr}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${randompostid}</var>
</assign>
<msg timestamp="20210205 17:12:17.665" level="INFO">${randompostid} = sLLDe</msg>
<status status="PASS" starttime="20210205 17:12:17.664" endtime="20210205 17:12:17.665"></status>
</kw>
<msg timestamp="20210205 17:12:17.665" level="INFO">${randomstr} = sLLDe</msg>
<status status="PASS" starttime="20210205 17:12:17.663" endtime="20210205 17:12:17.665"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.668" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:17.667" endtime="20210205 17:12:17.668"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:17.757" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/sLLDe 
 path_url=/posts/sLLDe 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:17.757" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/sLLDe 
 status=404, reason=Not Found 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da17072154e1be02c0c75937ee01ea4311612563137; expires=Sun, 07-Mar-21 22:12:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612563161', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'MISS', 'cf-request-id': '0815d9dd8e0000e8555c299000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=41mrCvXgwhG%2FaPNobl2%2BDOX5gzYuuWknkDGKKJ5FV3gSU9AZOZcDuVF4vKcWtMk5h8REdFUQGrHdhLO25VvmpsvHyGeC1ME2wj%2F9XcBf%2Ft8eEJ%2BCVcP8PSM2hbW9"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8dc1c01e855-EWR'} 
 body={} 
 </msg>
<msg timestamp="20210205 17:12:17.759" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/sLLDe</msg>
<status status="FAIL" starttime="20210205 17:12:17.669" endtime="20210205 17:12:17.759"></status>
</kw>
<status status="FAIL" starttime="20210205 17:12:17.666" endtime="20210205 17:12:17.760"></status>
</kw>
<msg timestamp="20210205 17:12:17.760" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/sLLDe</msg>
<status status="PASS" starttime="20210205 17:12:17.666" endtime="20210205 17:12:17.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.760" endtime="20210205 17:12:17.760"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.429" endtime="20210205 17:12:17.761"></status>
</kw>
<doc>Invalid Post Id Boundary Values: posts.InvalidInitial, posts.InvalidFinal</doc>
<tags>
<tag>Negative Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 17:12:17.199" endtime="20210205 17:12:17.761" critical="yes"></status>
</test>
<test id="s1-t6" name="TC006 COMPARE USER ID FILTERED ALL POSTS RESPONSE TO GET POST BY USER ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:17.768" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:17.767" endtime="20210205 17:12:17.768"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 17:12:17.770" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:17.769" endtime="20210205 17:12:17.770"></status>
</kw>
<msg timestamp="20210205 17:12:17.771" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:17.765" endtime="20210205 17:12:17.771"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.774" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.773" endtime="20210205 17:12:17.774"></status>
</kw>
<msg timestamp="20210205 17:12:17.774" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.771" endtime="20210205 17:12:17.774"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.776" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.775" endtime="20210205 17:12:17.776"></status>
</kw>
<msg timestamp="20210205 17:12:17.776" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.774" endtime="20210205 17:12:17.776"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.778" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.777" endtime="20210205 17:12:17.778"></status>
</kw>
<msg timestamp="20210205 17:12:17.778" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.776" endtime="20210205 17:12:17.778"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.779" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.779" endtime="20210205 17:12:17.779"></status>
</kw>
<msg timestamp="20210205 17:12:17.780" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.778" endtime="20210205 17:12:17.780"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.782" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.781" endtime="20210205 17:12:17.782"></status>
</kw>
<msg timestamp="20210205 17:12:17.782" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.780" endtime="20210205 17:12:17.782"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.784" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.783" endtime="20210205 17:12:17.784"></status>
</kw>
<msg timestamp="20210205 17:12:17.784" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.782" endtime="20210205 17:12:17.784"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.785" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 17:12:17.785" endtime="20210205 17:12:17.785"></status>
</kw>
<msg timestamp="20210205 17:12:17.785" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:17.784" endtime="20210205 17:12:17.785"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.786" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.786" endtime="20210205 17:12:17.786"></status>
</kw>
<msg timestamp="20210205 17:12:17.786" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.785" endtime="20210205 17:12:17.786"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.788" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.787" endtime="20210205 17:12:17.788"></status>
</kw>
<msg timestamp="20210205 17:12:17.788" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.787" endtime="20210205 17:12:17.788"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.789" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.788" endtime="20210205 17:12:17.789"></status>
</kw>
<msg timestamp="20210205 17:12:17.789" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.788" endtime="20210205 17:12:17.789"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:17.790" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 17:12:17.790" endtime="20210205 17:12:17.790"></status>
</kw>
<msg timestamp="20210205 17:12:17.790" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:17.789" endtime="20210205 17:12:17.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.791" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:17.790" endtime="20210205 17:12:17.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 17:12:17.791" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 17:12:17.791" endtime="20210205 17:12:17.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.791" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.791" endtime="20210205 17:12:17.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.792" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.792" endtime="20210205 17:12:17.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.792" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.792" endtime="20210205 17:12:17.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.793" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.792" endtime="20210205 17:12:17.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.793" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:17.793" endtime="20210205 17:12:17.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.793" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.793" endtime="20210205 17:12:17.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.794" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:17.793" endtime="20210205 17:12:17.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.794" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:17.794" endtime="20210205 17:12:17.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.794" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 17:12:17.794" endtime="20210205 17:12:17.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.795" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:17.795" endtime="20210205 17:12:17.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.795" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:17.795" endtime="20210205 17:12:17.795"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.765" endtime="20210205 17:12:17.795"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Compare Full Response User Id filtering to /users/{userid}/posts</arg>
</arguments>
<msg timestamp="20210205 17:12:17.796" level="INFO">Set test documentation to:
Compare Full Response User Id filtering to /users/{userid}/posts</msg>
<status status="PASS" starttime="20210205 17:12:17.796" endtime="20210205 17:12:17.796"></status>
</kw>
<kw name="VALIDATE FILTERED POST RESPONSE MATCHES USER ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${userinId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:17.798" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:17.797" endtime="20210205 17:12:17.798"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:17.800" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:17.799" endtime="20210205 17:12:17.800"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.802" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:17.801" endtime="20210205 17:12:17.802"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:17.852" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/1/posts 
 path_url=/users/1/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:17.852" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/1/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5fa03a0f81b73ab18ddc3acad0e258551612563138; expires=Sun, 07-Mar-21 22:12:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612397753', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"aa6-j2NSH739l9uq40OywFMn7Y0C/iY"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12935', 'cf-request-id': '0815d9de1000000cb92aa00000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=aig41EYCXX16E%2FeysMeAQH%2FXS1YCRWZHubcZYkUnMbD255RwpwETWo%2BnLDFC8Gl85IUX6uy3b54%2BVsJbv0RGV0XXNGu%2FnuqarZM4Qx9JAXZVQvHkH8Swa6d5eGGz"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8dcee8a0cb9-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  }
] 
 </msg>
<msg timestamp="20210205 17:12:17.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:17.802" endtime="20210205 17:12:17.853"></status>
</kw>
<msg timestamp="20210205 17:12:17.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:17.800" endtime="20210205 17:12:17.853"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:17.854" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:17.854" endtime="20210205 17:12:17.854"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:17.855" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:17.854" endtime="20210205 17:12:17.855"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:17.855" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:17.855" endtime="20210205 17:12:17.855"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:17.856" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:17.856" endtime="20210205 17:12:17.856"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:17.857" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:17.856" endtime="20210205 17:12:17.857"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:17.858" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:17.857" endtime="20210205 17:12:17.858"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.859" endtime="20210205 17:12:17.859"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.860" endtime="20210205 17:12:17.860"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.860" endtime="20210205 17:12:17.861"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.858" endtime="20210205 17:12:17.861"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.862" endtime="20210205 17:12:17.862"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.862" endtime="20210205 17:12:17.863"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.863" endtime="20210205 17:12:17.864"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.861" endtime="20210205 17:12:17.864"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.864" endtime="20210205 17:12:17.864"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.864" endtime="20210205 17:12:17.864"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.865" endtime="20210205 17:12:17.865"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.864" endtime="20210205 17:12:17.865"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.865" endtime="20210205 17:12:17.865"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.865" endtime="20210205 17:12:17.866"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.866" endtime="20210205 17:12:17.866"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.865" endtime="20210205 17:12:17.866"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.866" endtime="20210205 17:12:17.866"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.866" endtime="20210205 17:12:17.867"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.867" endtime="20210205 17:12:17.867"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.866" endtime="20210205 17:12:17.867"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.867" endtime="20210205 17:12:17.867"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.867" endtime="20210205 17:12:17.868"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.868" endtime="20210205 17:12:17.868"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.867" endtime="20210205 17:12:17.868"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.868" endtime="20210205 17:12:17.868"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.868" endtime="20210205 17:12:17.869"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.869" endtime="20210205 17:12:17.869"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.868" endtime="20210205 17:12:17.869"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.869" endtime="20210205 17:12:17.870"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.870" endtime="20210205 17:12:17.870"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.870" endtime="20210205 17:12:17.870"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.869" endtime="20210205 17:12:17.870"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.870" endtime="20210205 17:12:17.871"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.871" endtime="20210205 17:12:17.871"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.871" endtime="20210205 17:12:17.871"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.870" endtime="20210205 17:12:17.871"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.872" endtime="20210205 17:12:17.872"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.872" endtime="20210205 17:12:17.872"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.872" endtime="20210205 17:12:17.873"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.871" endtime="20210205 17:12:17.873"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.858" endtime="20210205 17:12:17.873"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_All_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:17.873" level="INFO">Creating Session using : alias=Get_All_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:17.873" endtime="20210205 17:12:17.874"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:17.929" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:17.929" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d191b6fda4e9dc3378ac363990ba991be1612563138; expires=Sun, 07-Mar-21 22:12:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612307992', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23187', 'cf-request-id': '0815d9de5b000015af670eb000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=rKbH88ehBYilwvyj6fPwZbRTHT8kKNER9XJL5%2Bkm1ibb6MWWqTS3WnYdgpjTmiWfs3yqjxleze%2BkOF%2FueHeP4XNcmIPW03RDnXmzmmkvi4scID%2BbRSTi3RZ6HXrm"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8dd5abb15af-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210205 17:12:17.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:17.874" endtime="20210205 17:12:17.930"></status>
</kw>
<msg timestamp="20210205 17:12:17.931" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:17.873" endtime="20210205 17:12:17.931"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.933" endtime="20210205 17:12:17.934"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.932" endtime="20210205 17:12:17.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.935" endtime="20210205 17:12:17.936"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.934" endtime="20210205 17:12:17.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.937" endtime="20210205 17:12:17.937"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.936" endtime="20210205 17:12:17.938"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.932" endtime="20210205 17:12:17.938"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.939" endtime="20210205 17:12:17.939"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.938" endtime="20210205 17:12:17.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.939" endtime="20210205 17:12:17.940"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.939" endtime="20210205 17:12:17.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.941" endtime="20210205 17:12:17.941"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.940" endtime="20210205 17:12:17.941"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.938" endtime="20210205 17:12:17.941"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.941" endtime="20210205 17:12:17.942"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.941" endtime="20210205 17:12:17.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.942" endtime="20210205 17:12:17.942"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.942" endtime="20210205 17:12:17.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.943" endtime="20210205 17:12:17.943"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.942" endtime="20210205 17:12:17.943"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.941" endtime="20210205 17:12:17.943"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.944" endtime="20210205 17:12:17.944"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.943" endtime="20210205 17:12:17.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.944" endtime="20210205 17:12:17.945"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.944" endtime="20210205 17:12:17.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.945" endtime="20210205 17:12:17.945"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.945" endtime="20210205 17:12:17.945"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.943" endtime="20210205 17:12:17.945"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.946" endtime="20210205 17:12:17.946"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.946" endtime="20210205 17:12:17.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.947" endtime="20210205 17:12:17.947"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.946" endtime="20210205 17:12:17.947"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.947" endtime="20210205 17:12:17.948"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.947" endtime="20210205 17:12:17.948"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.946" endtime="20210205 17:12:17.948"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.948" endtime="20210205 17:12:17.948"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.948" endtime="20210205 17:12:17.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.949" endtime="20210205 17:12:17.949"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.948" endtime="20210205 17:12:17.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.949" endtime="20210205 17:12:17.950"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.949" endtime="20210205 17:12:17.950"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.948" endtime="20210205 17:12:17.950"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.950" endtime="20210205 17:12:17.950"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.950" endtime="20210205 17:12:17.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.951" endtime="20210205 17:12:17.951"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.951" endtime="20210205 17:12:17.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.952" endtime="20210205 17:12:17.952"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.951" endtime="20210205 17:12:17.952"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.950" endtime="20210205 17:12:17.952"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.953" endtime="20210205 17:12:17.953"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.952" endtime="20210205 17:12:17.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.953" endtime="20210205 17:12:17.953"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.953" endtime="20210205 17:12:17.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.954" endtime="20210205 17:12:17.954"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.954" endtime="20210205 17:12:17.954"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.952" endtime="20210205 17:12:17.954"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.955" endtime="20210205 17:12:17.955"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.954" endtime="20210205 17:12:17.955"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.955" endtime="20210205 17:12:17.956"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.955" endtime="20210205 17:12:17.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.957" endtime="20210205 17:12:17.957"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.956" endtime="20210205 17:12:17.957"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.954" endtime="20210205 17:12:17.957"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.958" endtime="20210205 17:12:17.958"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.958" endtime="20210205 17:12:17.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.959" endtime="20210205 17:12:17.959"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.958" endtime="20210205 17:12:17.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.959" endtime="20210205 17:12:17.959"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.959" endtime="20210205 17:12:17.960"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.957" endtime="20210205 17:12:17.960"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.960" endtime="20210205 17:12:17.960"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.960" endtime="20210205 17:12:17.960"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.961" endtime="20210205 17:12:17.961"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.960" endtime="20210205 17:12:17.961"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.961" endtime="20210205 17:12:17.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.961" endtime="20210205 17:12:17.962"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.962" endtime="20210205 17:12:17.962"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.961" endtime="20210205 17:12:17.962"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.962" endtime="20210205 17:12:17.962"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.962" endtime="20210205 17:12:17.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.963" endtime="20210205 17:12:17.963"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.962" endtime="20210205 17:12:17.963"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.963" endtime="20210205 17:12:17.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.964" endtime="20210205 17:12:17.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.964" endtime="20210205 17:12:17.964"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.963" endtime="20210205 17:12:17.964"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.964" endtime="20210205 17:12:17.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.965" endtime="20210205 17:12:17.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.965" endtime="20210205 17:12:17.965"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.964" endtime="20210205 17:12:17.965"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.966" endtime="20210205 17:12:17.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.966" endtime="20210205 17:12:17.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.966" endtime="20210205 17:12:17.967"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.965" endtime="20210205 17:12:17.967"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.967" endtime="20210205 17:12:17.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.967" endtime="20210205 17:12:17.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.967" endtime="20210205 17:12:17.968"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.967" endtime="20210205 17:12:17.968"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.968" endtime="20210205 17:12:17.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.968" endtime="20210205 17:12:17.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.969" endtime="20210205 17:12:17.969"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.968" endtime="20210205 17:12:17.969"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.969" endtime="20210205 17:12:17.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.969" endtime="20210205 17:12:17.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.970" endtime="20210205 17:12:17.970"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.969" endtime="20210205 17:12:17.970"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.970" endtime="20210205 17:12:17.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.971" endtime="20210205 17:12:17.971"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.971" endtime="20210205 17:12:17.971"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.970" endtime="20210205 17:12:17.971"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.971" endtime="20210205 17:12:17.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.972" endtime="20210205 17:12:17.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.972" endtime="20210205 17:12:17.972"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.971" endtime="20210205 17:12:17.973"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.973" endtime="20210205 17:12:17.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.973" endtime="20210205 17:12:17.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.973" endtime="20210205 17:12:17.974"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.973" endtime="20210205 17:12:17.974"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.974" endtime="20210205 17:12:17.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.974" endtime="20210205 17:12:17.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.975" endtime="20210205 17:12:17.975"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.974" endtime="20210205 17:12:17.975"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.975" endtime="20210205 17:12:17.975"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.975" endtime="20210205 17:12:17.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.976" endtime="20210205 17:12:17.976"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.975" endtime="20210205 17:12:17.976"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.976" endtime="20210205 17:12:17.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.976" endtime="20210205 17:12:17.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.977" endtime="20210205 17:12:17.977"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.976" endtime="20210205 17:12:17.977"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.977" endtime="20210205 17:12:17.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.978" endtime="20210205 17:12:17.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.978" endtime="20210205 17:12:17.978"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.977" endtime="20210205 17:12:17.978"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.978" endtime="20210205 17:12:17.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.979" endtime="20210205 17:12:17.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.980" endtime="20210205 17:12:17.980"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.978" endtime="20210205 17:12:17.980"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.980" endtime="20210205 17:12:17.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.981" endtime="20210205 17:12:17.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.981" endtime="20210205 17:12:17.981"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.980" endtime="20210205 17:12:17.981"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.981" endtime="20210205 17:12:17.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.982" endtime="20210205 17:12:17.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.982" endtime="20210205 17:12:17.982"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.981" endtime="20210205 17:12:17.982"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.983" endtime="20210205 17:12:17.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.983" endtime="20210205 17:12:17.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.983" endtime="20210205 17:12:17.984"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.982" endtime="20210205 17:12:17.984"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.984" endtime="20210205 17:12:17.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.984" endtime="20210205 17:12:17.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.984" endtime="20210205 17:12:17.985"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.984" endtime="20210205 17:12:17.985"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.985" endtime="20210205 17:12:17.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.985" endtime="20210205 17:12:17.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.986" endtime="20210205 17:12:17.986"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.985" endtime="20210205 17:12:17.986"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.986" endtime="20210205 17:12:17.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.986" endtime="20210205 17:12:17.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.987" endtime="20210205 17:12:17.987"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.986" endtime="20210205 17:12:17.987"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.987" endtime="20210205 17:12:17.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.988" endtime="20210205 17:12:17.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.988" endtime="20210205 17:12:17.988"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.987" endtime="20210205 17:12:17.988"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.988" endtime="20210205 17:12:17.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.989" endtime="20210205 17:12:17.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.989" endtime="20210205 17:12:17.989"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.988" endtime="20210205 17:12:17.989"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.990" endtime="20210205 17:12:17.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.990" endtime="20210205 17:12:17.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.990" endtime="20210205 17:12:17.991"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.990" endtime="20210205 17:12:17.991"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.991" endtime="20210205 17:12:17.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.991" endtime="20210205 17:12:17.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.992" endtime="20210205 17:12:17.992"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.991" endtime="20210205 17:12:17.992"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.992" endtime="20210205 17:12:17.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.992" endtime="20210205 17:12:17.993"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.993" endtime="20210205 17:12:17.993"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.992" endtime="20210205 17:12:17.993"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.993" endtime="20210205 17:12:17.993"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.994" endtime="20210205 17:12:17.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.994" endtime="20210205 17:12:17.994"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.993" endtime="20210205 17:12:17.994"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.994" endtime="20210205 17:12:17.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.995" endtime="20210205 17:12:17.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.995" endtime="20210205 17:12:17.995"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.994" endtime="20210205 17:12:17.995"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.995" endtime="20210205 17:12:17.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.996" endtime="20210205 17:12:17.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.996" endtime="20210205 17:12:17.996"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.995" endtime="20210205 17:12:17.996"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.997" endtime="20210205 17:12:17.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.997" endtime="20210205 17:12:17.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.997" endtime="20210205 17:12:17.998"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.997" endtime="20210205 17:12:17.998"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.998" endtime="20210205 17:12:17.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.998" endtime="20210205 17:12:17.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.999" endtime="20210205 17:12:17.999"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.998" endtime="20210205 17:12:17.999"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.999" endtime="20210205 17:12:17.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:17.999" endtime="20210205 17:12:18.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.000" endtime="20210205 17:12:18.000"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.999" endtime="20210205 17:12:18.000"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.000" endtime="20210205 17:12:18.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.001" endtime="20210205 17:12:18.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.001" endtime="20210205 17:12:18.001"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.000" endtime="20210205 17:12:18.001"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.001" endtime="20210205 17:12:18.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.002" endtime="20210205 17:12:18.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.002" endtime="20210205 17:12:18.002"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.001" endtime="20210205 17:12:18.002"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.003" endtime="20210205 17:12:18.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.003" endtime="20210205 17:12:18.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.003" endtime="20210205 17:12:18.003"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.002" endtime="20210205 17:12:18.003"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.004" endtime="20210205 17:12:18.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.005" endtime="20210205 17:12:18.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.005" endtime="20210205 17:12:18.005"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.004" endtime="20210205 17:12:18.005"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.006" endtime="20210205 17:12:18.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.006" endtime="20210205 17:12:18.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.007" endtime="20210205 17:12:18.007"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.006" endtime="20210205 17:12:18.007"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.007" endtime="20210205 17:12:18.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.007" endtime="20210205 17:12:18.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.008" endtime="20210205 17:12:18.008"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.007" endtime="20210205 17:12:18.008"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.008" endtime="20210205 17:12:18.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.009" endtime="20210205 17:12:18.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.009" endtime="20210205 17:12:18.009"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.008" endtime="20210205 17:12:18.009"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.009" endtime="20210205 17:12:18.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.010" endtime="20210205 17:12:18.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.010" endtime="20210205 17:12:18.010"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.009" endtime="20210205 17:12:18.010"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.010" endtime="20210205 17:12:18.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.011" endtime="20210205 17:12:18.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.011" endtime="20210205 17:12:18.012"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.010" endtime="20210205 17:12:18.012"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.012" endtime="20210205 17:12:18.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.012" endtime="20210205 17:12:18.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.012" endtime="20210205 17:12:18.013"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.012" endtime="20210205 17:12:18.013"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.013" endtime="20210205 17:12:18.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.013" endtime="20210205 17:12:18.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.014" endtime="20210205 17:12:18.014"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.013" endtime="20210205 17:12:18.014"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.014" endtime="20210205 17:12:18.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.014" endtime="20210205 17:12:18.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.015" endtime="20210205 17:12:18.015"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.014" endtime="20210205 17:12:18.015"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.015" endtime="20210205 17:12:18.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.015" endtime="20210205 17:12:18.016"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.016" endtime="20210205 17:12:18.016"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.015" endtime="20210205 17:12:18.016"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.016" endtime="20210205 17:12:18.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.017" endtime="20210205 17:12:18.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.017" endtime="20210205 17:12:18.017"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.016" endtime="20210205 17:12:18.017"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.017" endtime="20210205 17:12:18.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.018" endtime="20210205 17:12:18.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.018" endtime="20210205 17:12:18.018"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.017" endtime="20210205 17:12:18.018"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.019" endtime="20210205 17:12:18.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.019" endtime="20210205 17:12:18.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.019" endtime="20210205 17:12:18.020"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.019" endtime="20210205 17:12:18.020"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.020" endtime="20210205 17:12:18.020"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.021" endtime="20210205 17:12:18.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.021" endtime="20210205 17:12:18.021"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.020" endtime="20210205 17:12:18.021"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.021" endtime="20210205 17:12:18.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.022" endtime="20210205 17:12:18.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.022" endtime="20210205 17:12:18.022"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.021" endtime="20210205 17:12:18.022"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.023" endtime="20210205 17:12:18.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.023" endtime="20210205 17:12:18.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.023" endtime="20210205 17:12:18.024"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.023" endtime="20210205 17:12:18.024"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.024" endtime="20210205 17:12:18.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.024" endtime="20210205 17:12:18.025"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.025" endtime="20210205 17:12:18.025"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.024" endtime="20210205 17:12:18.025"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.025" endtime="20210205 17:12:18.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.026" endtime="20210205 17:12:18.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.026" endtime="20210205 17:12:18.026"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.025" endtime="20210205 17:12:18.026"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.027" endtime="20210205 17:12:18.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.027" endtime="20210205 17:12:18.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.027" endtime="20210205 17:12:18.028"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.026" endtime="20210205 17:12:18.028"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.028" endtime="20210205 17:12:18.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.028" endtime="20210205 17:12:18.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.029" endtime="20210205 17:12:18.029"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.028" endtime="20210205 17:12:18.029"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.029" endtime="20210205 17:12:18.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.029" endtime="20210205 17:12:18.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.030" endtime="20210205 17:12:18.030"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.029" endtime="20210205 17:12:18.030"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.030" endtime="20210205 17:12:18.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.031" endtime="20210205 17:12:18.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.031" endtime="20210205 17:12:18.031"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.030" endtime="20210205 17:12:18.031"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.032" endtime="20210205 17:12:18.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.032" endtime="20210205 17:12:18.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.033" endtime="20210205 17:12:18.033"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.032" endtime="20210205 17:12:18.033"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.033" endtime="20210205 17:12:18.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.033" endtime="20210205 17:12:18.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.034" endtime="20210205 17:12:18.034"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.033" endtime="20210205 17:12:18.034"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.034" endtime="20210205 17:12:18.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.035" endtime="20210205 17:12:18.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.035" endtime="20210205 17:12:18.035"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.034" endtime="20210205 17:12:18.035"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.036" endtime="20210205 17:12:18.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.036" endtime="20210205 17:12:18.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.037" endtime="20210205 17:12:18.037"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.035" endtime="20210205 17:12:18.037"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.037" endtime="20210205 17:12:18.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.037" endtime="20210205 17:12:18.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.038" endtime="20210205 17:12:18.038"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.037" endtime="20210205 17:12:18.038"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.038" endtime="20210205 17:12:18.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.039" endtime="20210205 17:12:18.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.039" endtime="20210205 17:12:18.039"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.038" endtime="20210205 17:12:18.039"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.040" endtime="20210205 17:12:18.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.040" endtime="20210205 17:12:18.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.040" endtime="20210205 17:12:18.041"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.039" endtime="20210205 17:12:18.041"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.041" endtime="20210205 17:12:18.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.041" endtime="20210205 17:12:18.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.042" endtime="20210205 17:12:18.042"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.041" endtime="20210205 17:12:18.042"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.042" endtime="20210205 17:12:18.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.042" endtime="20210205 17:12:18.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.043" endtime="20210205 17:12:18.043"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.042" endtime="20210205 17:12:18.043"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.043" endtime="20210205 17:12:18.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.044" endtime="20210205 17:12:18.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.044" endtime="20210205 17:12:18.044"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.043" endtime="20210205 17:12:18.044"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.045" endtime="20210205 17:12:18.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.045" endtime="20210205 17:12:18.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.045" endtime="20210205 17:12:18.046"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.045" endtime="20210205 17:12:18.046"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.046" endtime="20210205 17:12:18.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.046" endtime="20210205 17:12:18.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.047" endtime="20210205 17:12:18.047"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.046" endtime="20210205 17:12:18.047"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.047" endtime="20210205 17:12:18.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.048" endtime="20210205 17:12:18.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.048" endtime="20210205 17:12:18.048"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.047" endtime="20210205 17:12:18.048"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.048" endtime="20210205 17:12:18.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.049" endtime="20210205 17:12:18.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.049" endtime="20210205 17:12:18.050"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.048" endtime="20210205 17:12:18.050"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.050" endtime="20210205 17:12:18.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.050" endtime="20210205 17:12:18.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.051" endtime="20210205 17:12:18.051"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.050" endtime="20210205 17:12:18.051"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.051" endtime="20210205 17:12:18.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.051" endtime="20210205 17:12:18.052"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.052" endtime="20210205 17:12:18.052"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.051" endtime="20210205 17:12:18.052"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.052" endtime="20210205 17:12:18.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.053" endtime="20210205 17:12:18.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.053" endtime="20210205 17:12:18.054"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.052" endtime="20210205 17:12:18.054"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.054" endtime="20210205 17:12:18.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.054" endtime="20210205 17:12:18.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.054" endtime="20210205 17:12:18.055"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.054" endtime="20210205 17:12:18.055"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.055" endtime="20210205 17:12:18.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.055" endtime="20210205 17:12:18.056"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.056" endtime="20210205 17:12:18.056"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.055" endtime="20210205 17:12:18.056"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.056" endtime="20210205 17:12:18.056"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.057" endtime="20210205 17:12:18.057"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.057" endtime="20210205 17:12:18.057"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.056" endtime="20210205 17:12:18.057"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.057" endtime="20210205 17:12:18.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.058" endtime="20210205 17:12:18.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.058" endtime="20210205 17:12:18.059"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.057" endtime="20210205 17:12:18.059"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.059" endtime="20210205 17:12:18.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.059" endtime="20210205 17:12:18.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.060" endtime="20210205 17:12:18.060"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.059" endtime="20210205 17:12:18.060"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.060" endtime="20210205 17:12:18.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.061" endtime="20210205 17:12:18.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.061" endtime="20210205 17:12:18.061"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.060" endtime="20210205 17:12:18.061"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.062" endtime="20210205 17:12:18.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.062" endtime="20210205 17:12:18.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.062" endtime="20210205 17:12:18.063"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.061" endtime="20210205 17:12:18.063"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.063" endtime="20210205 17:12:18.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.063" endtime="20210205 17:12:18.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.064" endtime="20210205 17:12:18.064"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.063" endtime="20210205 17:12:18.064"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.064" endtime="20210205 17:12:18.064"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.064" endtime="20210205 17:12:18.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.065" endtime="20210205 17:12:18.065"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.064" endtime="20210205 17:12:18.065"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.065" endtime="20210205 17:12:18.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.066" endtime="20210205 17:12:18.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.066" endtime="20210205 17:12:18.066"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.065" endtime="20210205 17:12:18.066"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.067" endtime="20210205 17:12:18.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.067" endtime="20210205 17:12:18.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.067" endtime="20210205 17:12:18.068"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.066" endtime="20210205 17:12:18.068"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.068" endtime="20210205 17:12:18.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.068" endtime="20210205 17:12:18.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.069" endtime="20210205 17:12:18.069"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.068" endtime="20210205 17:12:18.069"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.069" endtime="20210205 17:12:18.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.069" endtime="20210205 17:12:18.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.070" endtime="20210205 17:12:18.070"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.069" endtime="20210205 17:12:18.070"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.070" endtime="20210205 17:12:18.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.071" endtime="20210205 17:12:18.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.071" endtime="20210205 17:12:18.071"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.070" endtime="20210205 17:12:18.071"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.931" endtime="20210205 17:12:18.071"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${filteridlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.071" endtime="20210205 17:12:18.072"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${filtertitlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.072" endtime="20210205 17:12:18.072"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${filterbodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.072" endtime="20210205 17:12:18.072"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.072" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.072" endtime="20210205 17:12:18.072"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.073" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.073" endtime="20210205 17:12:18.073"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.073" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.073" endtime="20210205 17:12:18.073"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.073" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.073" endtime="20210205 17:12:18.073"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.074" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.073" endtime="20210205 17:12:18.074"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.074" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.074" endtime="20210205 17:12:18.074"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:17.797" endtime="20210205 17:12:18.074"></status>
</kw>
<kw name="VALIDATE FILTERED POST RESPONSE MATCHES USER ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${userfId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:18.076" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:18.075" endtime="20210205 17:12:18.076"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:18.077" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:18.076" endtime="20210205 17:12:18.077"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.078" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:18.077" endtime="20210205 17:12:18.078"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:18.131" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/10/posts 
 path_url=/users/10/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:18.131" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/10/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d60d72ef66d24a276d1ca2a8f152a9cb31612563138; expires=Sun, 07-Mar-21 22:12:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612542892', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"a68-bp+xhXz2hSYZZUvrpfEFLIhQbe4"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '20269', 'cf-request-id': '0815d9df270000ccfed6b79000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=X5A8qEnl66XkGjreXtUX%2Bzqxpn13T%2Fn5hmiJly6YVFboP2s%2BgFh6oyxfoqIY03DMEtkFKrx0fcJhM8vPyzueULqt60Tphnp1jpLNh5WX36Xg0rhVBv4%2FALNxBZxv"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8de9e9eccfe-EWR'} 
 body=[
  {
    "userId": 10,
    "id": 91,
    "title": "aut amet sed",
    "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
  },
  {
    "userId": 10,
    "id": 92,
    "title": "ratione ex tenetur perferendis",
    "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
  },
  {
    "userId": 10,
    "id": 93,
    "title": "beatae soluta recusandae",
    "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
  },
  {
    "userId": 10,
    "id": 94,
    "title": "qui qui voluptates illo iste minima",
    "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
  },
  {
    "userId": 10,
    "id": 95,
    "title": "id minus libero illum nam ad officiis",
    "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
  },
  {
    "userId": 10,
    "id": 96,
    "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
    "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
  },
  {
    "userId": 10,
    "id": 97,
    "title": "quas fugiat ut perspiciatis vero provident",
    "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
  },
  {
    "userId": 10,
    "id": 98,
    "title": "laboriosam dolor voluptates",
    "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
  },
  {
    "userId": 10,
    "id": 99,
    "title": "temporibus sit alias delectus eligendi possimus magni",
    "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
  },
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<msg timestamp="20210205 17:12:18.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:18.078" endtime="20210205 17:12:18.131"></status>
</kw>
<msg timestamp="20210205 17:12:18.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:18.077" endtime="20210205 17:12:18.132"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.132" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.132" endtime="20210205 17:12:18.132"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.133" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.132" endtime="20210205 17:12:18.133"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.133" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.133" endtime="20210205 17:12:18.133"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.134" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.133" endtime="20210205 17:12:18.134"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.134" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.134" endtime="20210205 17:12:18.134"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.135" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.134" endtime="20210205 17:12:18.135"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.135" endtime="20210205 17:12:18.136"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.136" endtime="20210205 17:12:18.136"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.136" endtime="20210205 17:12:18.137"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.135" endtime="20210205 17:12:18.137"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.137" endtime="20210205 17:12:18.137"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.138" endtime="20210205 17:12:18.138"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.138" endtime="20210205 17:12:18.139"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.137" endtime="20210205 17:12:18.139"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.139" endtime="20210205 17:12:18.139"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.139" endtime="20210205 17:12:18.140"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.140" endtime="20210205 17:12:18.140"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.139" endtime="20210205 17:12:18.140"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.140" endtime="20210205 17:12:18.141"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.141" endtime="20210205 17:12:18.141"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.141" endtime="20210205 17:12:18.141"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.140" endtime="20210205 17:12:18.141"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.141" endtime="20210205 17:12:18.142"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.142" endtime="20210205 17:12:18.142"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.142" endtime="20210205 17:12:18.142"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.141" endtime="20210205 17:12:18.142"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.143" endtime="20210205 17:12:18.143"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.143" endtime="20210205 17:12:18.143"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.143" endtime="20210205 17:12:18.143"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.142" endtime="20210205 17:12:18.143"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.144" endtime="20210205 17:12:18.144"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.144" endtime="20210205 17:12:18.144"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.144" endtime="20210205 17:12:18.144"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.144" endtime="20210205 17:12:18.144"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.145" endtime="20210205 17:12:18.145"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.145" endtime="20210205 17:12:18.145"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.145" endtime="20210205 17:12:18.146"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.145" endtime="20210205 17:12:18.146"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.146" endtime="20210205 17:12:18.146"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.146" endtime="20210205 17:12:18.146"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.147" endtime="20210205 17:12:18.147"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.146" endtime="20210205 17:12:18.147"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.147" endtime="20210205 17:12:18.147"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.147" endtime="20210205 17:12:18.147"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.148" endtime="20210205 17:12:18.148"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.147" endtime="20210205 17:12:18.148"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.135" endtime="20210205 17:12:18.148"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_All_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.149" level="INFO">Creating Session using : alias=Get_All_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:18.148" endtime="20210205 17:12:18.149"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:18.205" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:18.206" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dde303101da551deb263aeb2588cb92e41612563138; expires=Sun, 07-Mar-21 22:12:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612307992', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23187', 'cf-request-id': '0815d9df6d000015d7df162000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BHI6w0W1SSeooPzaMDb10JAWvbCfNwCQs%2BFXvz%2FSAnyWYw0qLJy0913Loj1R97Ajq1KTZ4es5AVLpeROOo0JPpYPJzcZCwFrusIOP9bDbbypynSPMVisA1rbEmXb"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8df188315d7-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210205 17:12:18.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:18.149" endtime="20210205 17:12:18.206"></status>
</kw>
<msg timestamp="20210205 17:12:18.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:18.148" endtime="20210205 17:12:18.207"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.208" endtime="20210205 17:12:18.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.209" endtime="20210205 17:12:18.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.210" endtime="20210205 17:12:18.210"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.208" endtime="20210205 17:12:18.210"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.210" endtime="20210205 17:12:18.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.211" endtime="20210205 17:12:18.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.211" endtime="20210205 17:12:18.212"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.210" endtime="20210205 17:12:18.212"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.212" endtime="20210205 17:12:18.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.212" endtime="20210205 17:12:18.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.213" endtime="20210205 17:12:18.213"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.212" endtime="20210205 17:12:18.213"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.213" endtime="20210205 17:12:18.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.214" endtime="20210205 17:12:18.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.214" endtime="20210205 17:12:18.214"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.213" endtime="20210205 17:12:18.214"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.215" endtime="20210205 17:12:18.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.215" endtime="20210205 17:12:18.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.215" endtime="20210205 17:12:18.216"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.215" endtime="20210205 17:12:18.216"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.216" endtime="20210205 17:12:18.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.216" endtime="20210205 17:12:18.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.217" endtime="20210205 17:12:18.217"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.216" endtime="20210205 17:12:18.217"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.217" endtime="20210205 17:12:18.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.217" endtime="20210205 17:12:18.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.218" endtime="20210205 17:12:18.218"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.217" endtime="20210205 17:12:18.218"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.218" endtime="20210205 17:12:18.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.219" endtime="20210205 17:12:18.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.219" endtime="20210205 17:12:18.219"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.218" endtime="20210205 17:12:18.219"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.220" endtime="20210205 17:12:18.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.220" endtime="20210205 17:12:18.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.220" endtime="20210205 17:12:18.221"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.219" endtime="20210205 17:12:18.221"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.221" endtime="20210205 17:12:18.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.221" endtime="20210205 17:12:18.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.221" endtime="20210205 17:12:18.222"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.221" endtime="20210205 17:12:18.222"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.222" endtime="20210205 17:12:18.222"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.222" endtime="20210205 17:12:18.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.223" endtime="20210205 17:12:18.223"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.222" endtime="20210205 17:12:18.223"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.223" endtime="20210205 17:12:18.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.223" endtime="20210205 17:12:18.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.224" endtime="20210205 17:12:18.224"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.223" endtime="20210205 17:12:18.224"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.224" endtime="20210205 17:12:18.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.225" endtime="20210205 17:12:18.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.225" endtime="20210205 17:12:18.225"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.224" endtime="20210205 17:12:18.225"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.226" endtime="20210205 17:12:18.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.226" endtime="20210205 17:12:18.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.226" endtime="20210205 17:12:18.227"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.226" endtime="20210205 17:12:18.227"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.227" endtime="20210205 17:12:18.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.227" endtime="20210205 17:12:18.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.227" endtime="20210205 17:12:18.228"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.227" endtime="20210205 17:12:18.228"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.228" endtime="20210205 17:12:18.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.228" endtime="20210205 17:12:18.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.229" endtime="20210205 17:12:18.229"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.228" endtime="20210205 17:12:18.229"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.229" endtime="20210205 17:12:18.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.229" endtime="20210205 17:12:18.230"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.230" endtime="20210205 17:12:18.230"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.229" endtime="20210205 17:12:18.230"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.230" endtime="20210205 17:12:18.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.231" endtime="20210205 17:12:18.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.231" endtime="20210205 17:12:18.231"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.230" endtime="20210205 17:12:18.231"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.231" endtime="20210205 17:12:18.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.232" endtime="20210205 17:12:18.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.232" endtime="20210205 17:12:18.232"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.231" endtime="20210205 17:12:18.232"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.233" endtime="20210205 17:12:18.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.233" endtime="20210205 17:12:18.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.233" endtime="20210205 17:12:18.233"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.232" endtime="20210205 17:12:18.234"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.234" endtime="20210205 17:12:18.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.234" endtime="20210205 17:12:18.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.234" endtime="20210205 17:12:18.235"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.234" endtime="20210205 17:12:18.235"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.235" endtime="20210205 17:12:18.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.235" endtime="20210205 17:12:18.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.236" endtime="20210205 17:12:18.236"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.235" endtime="20210205 17:12:18.236"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.236" endtime="20210205 17:12:18.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.236" endtime="20210205 17:12:18.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.237" endtime="20210205 17:12:18.237"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.236" endtime="20210205 17:12:18.237"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.237" endtime="20210205 17:12:18.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.238" endtime="20210205 17:12:18.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.238" endtime="20210205 17:12:18.238"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.237" endtime="20210205 17:12:18.238"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.238" endtime="20210205 17:12:18.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.239" endtime="20210205 17:12:18.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.239" endtime="20210205 17:12:18.239"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.238" endtime="20210205 17:12:18.239"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.240" endtime="20210205 17:12:18.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.240" endtime="20210205 17:12:18.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.240" endtime="20210205 17:12:18.240"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.239" endtime="20210205 17:12:18.240"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.241" endtime="20210205 17:12:18.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.241" endtime="20210205 17:12:18.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.242" endtime="20210205 17:12:18.242"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.241" endtime="20210205 17:12:18.242"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.242" endtime="20210205 17:12:18.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.242" endtime="20210205 17:12:18.243"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.243" endtime="20210205 17:12:18.243"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.242" endtime="20210205 17:12:18.243"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.243" endtime="20210205 17:12:18.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.244" endtime="20210205 17:12:18.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.244" endtime="20210205 17:12:18.244"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.243" endtime="20210205 17:12:18.244"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.244" endtime="20210205 17:12:18.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.245" endtime="20210205 17:12:18.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.245" endtime="20210205 17:12:18.245"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.244" endtime="20210205 17:12:18.245"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.246" endtime="20210205 17:12:18.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.246" endtime="20210205 17:12:18.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.246" endtime="20210205 17:12:18.246"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.245" endtime="20210205 17:12:18.247"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.247" endtime="20210205 17:12:18.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.247" endtime="20210205 17:12:18.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.247" endtime="20210205 17:12:18.248"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.247" endtime="20210205 17:12:18.248"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.248" endtime="20210205 17:12:18.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.248" endtime="20210205 17:12:18.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.249" endtime="20210205 17:12:18.249"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.248" endtime="20210205 17:12:18.249"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.249" endtime="20210205 17:12:18.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.249" endtime="20210205 17:12:18.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.250" endtime="20210205 17:12:18.250"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.249" endtime="20210205 17:12:18.250"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.250" endtime="20210205 17:12:18.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.251" endtime="20210205 17:12:18.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.251" endtime="20210205 17:12:18.251"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.250" endtime="20210205 17:12:18.251"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.251" endtime="20210205 17:12:18.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.252" endtime="20210205 17:12:18.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.252" endtime="20210205 17:12:18.252"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.251" endtime="20210205 17:12:18.252"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.252" endtime="20210205 17:12:18.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.253" endtime="20210205 17:12:18.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.253" endtime="20210205 17:12:18.253"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.252" endtime="20210205 17:12:18.253"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.254" endtime="20210205 17:12:18.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.254" endtime="20210205 17:12:18.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.254" endtime="20210205 17:12:18.255"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.254" endtime="20210205 17:12:18.255"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.255" endtime="20210205 17:12:18.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.255" endtime="20210205 17:12:18.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.256" endtime="20210205 17:12:18.256"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.255" endtime="20210205 17:12:18.256"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.256" endtime="20210205 17:12:18.256"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.256" endtime="20210205 17:12:18.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.257" endtime="20210205 17:12:18.257"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.256" endtime="20210205 17:12:18.257"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.257" endtime="20210205 17:12:18.258"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.258" endtime="20210205 17:12:18.258"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.258" endtime="20210205 17:12:18.258"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.257" endtime="20210205 17:12:18.258"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.259" endtime="20210205 17:12:18.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.259" endtime="20210205 17:12:18.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.259" endtime="20210205 17:12:18.259"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.258" endtime="20210205 17:12:18.260"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.260" endtime="20210205 17:12:18.260"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.260" endtime="20210205 17:12:18.260"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.260" endtime="20210205 17:12:18.261"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.260" endtime="20210205 17:12:18.261"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.261" endtime="20210205 17:12:18.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.261" endtime="20210205 17:12:18.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.262" endtime="20210205 17:12:18.262"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.261" endtime="20210205 17:12:18.262"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.262" endtime="20210205 17:12:18.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.262" endtime="20210205 17:12:18.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.263" endtime="20210205 17:12:18.263"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.262" endtime="20210205 17:12:18.263"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.263" endtime="20210205 17:12:18.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.264" endtime="20210205 17:12:18.264"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.264" endtime="20210205 17:12:18.264"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.263" endtime="20210205 17:12:18.264"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.264" endtime="20210205 17:12:18.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.265" endtime="20210205 17:12:18.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.265" endtime="20210205 17:12:18.265"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.264" endtime="20210205 17:12:18.265"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.265" endtime="20210205 17:12:18.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.266" endtime="20210205 17:12:18.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.266" endtime="20210205 17:12:18.266"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.265" endtime="20210205 17:12:18.266"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.267" endtime="20210205 17:12:18.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.267" endtime="20210205 17:12:18.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.267" endtime="20210205 17:12:18.268"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.267" endtime="20210205 17:12:18.268"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.268" endtime="20210205 17:12:18.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.268" endtime="20210205 17:12:18.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.269" endtime="20210205 17:12:18.269"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.268" endtime="20210205 17:12:18.269"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.269" endtime="20210205 17:12:18.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.269" endtime="20210205 17:12:18.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.270" endtime="20210205 17:12:18.270"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.269" endtime="20210205 17:12:18.270"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.270" endtime="20210205 17:12:18.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.271" endtime="20210205 17:12:18.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.271" endtime="20210205 17:12:18.271"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.270" endtime="20210205 17:12:18.271"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.271" endtime="20210205 17:12:18.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.272" endtime="20210205 17:12:18.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.272" endtime="20210205 17:12:18.272"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.271" endtime="20210205 17:12:18.272"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.273" endtime="20210205 17:12:18.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.273" endtime="20210205 17:12:18.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.274" endtime="20210205 17:12:18.274"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.272" endtime="20210205 17:12:18.274"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.274" endtime="20210205 17:12:18.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.274" endtime="20210205 17:12:18.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.275" endtime="20210205 17:12:18.275"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.274" endtime="20210205 17:12:18.275"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.275" endtime="20210205 17:12:18.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.276" endtime="20210205 17:12:18.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.276" endtime="20210205 17:12:18.276"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.275" endtime="20210205 17:12:18.276"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.276" endtime="20210205 17:12:18.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.277" endtime="20210205 17:12:18.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.277" endtime="20210205 17:12:18.277"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.276" endtime="20210205 17:12:18.277"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.277" endtime="20210205 17:12:18.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.278" endtime="20210205 17:12:18.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.278" endtime="20210205 17:12:18.278"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.277" endtime="20210205 17:12:18.278"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.279" endtime="20210205 17:12:18.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.279" endtime="20210205 17:12:18.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.279" endtime="20210205 17:12:18.280"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.279" endtime="20210205 17:12:18.280"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.280" endtime="20210205 17:12:18.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.280" endtime="20210205 17:12:18.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.281" endtime="20210205 17:12:18.281"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.280" endtime="20210205 17:12:18.281"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.281" endtime="20210205 17:12:18.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.281" endtime="20210205 17:12:18.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.282" endtime="20210205 17:12:18.282"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.281" endtime="20210205 17:12:18.282"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.282" endtime="20210205 17:12:18.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.282" endtime="20210205 17:12:18.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.283" endtime="20210205 17:12:18.283"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.282" endtime="20210205 17:12:18.283"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.283" endtime="20210205 17:12:18.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.284" endtime="20210205 17:12:18.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.284" endtime="20210205 17:12:18.284"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.283" endtime="20210205 17:12:18.284"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.284" endtime="20210205 17:12:18.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.285" endtime="20210205 17:12:18.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.285" endtime="20210205 17:12:18.285"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.284" endtime="20210205 17:12:18.285"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.286" endtime="20210205 17:12:18.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.286" endtime="20210205 17:12:18.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.286" endtime="20210205 17:12:18.287"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.286" endtime="20210205 17:12:18.287"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.287" endtime="20210205 17:12:18.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.287" endtime="20210205 17:12:18.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.287" endtime="20210205 17:12:18.288"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.287" endtime="20210205 17:12:18.288"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.288" endtime="20210205 17:12:18.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.288" endtime="20210205 17:12:18.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.289" endtime="20210205 17:12:18.290"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.288" endtime="20210205 17:12:18.290"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.290" endtime="20210205 17:12:18.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.291" endtime="20210205 17:12:18.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.291" endtime="20210205 17:12:18.292"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.290" endtime="20210205 17:12:18.292"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.292" endtime="20210205 17:12:18.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.293" endtime="20210205 17:12:18.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.293" endtime="20210205 17:12:18.294"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.292" endtime="20210205 17:12:18.294"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.294" endtime="20210205 17:12:18.295"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.295" endtime="20210205 17:12:18.295"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.295" endtime="20210205 17:12:18.296"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.294" endtime="20210205 17:12:18.296"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.296" endtime="20210205 17:12:18.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.297" endtime="20210205 17:12:18.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.297" endtime="20210205 17:12:18.297"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.296" endtime="20210205 17:12:18.297"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.298" endtime="20210205 17:12:18.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.298" endtime="20210205 17:12:18.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.299" endtime="20210205 17:12:18.299"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.297" endtime="20210205 17:12:18.299"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.299" endtime="20210205 17:12:18.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.300" endtime="20210205 17:12:18.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.300" endtime="20210205 17:12:18.301"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.299" endtime="20210205 17:12:18.301"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.301" endtime="20210205 17:12:18.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.302" endtime="20210205 17:12:18.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.302" endtime="20210205 17:12:18.303"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.301" endtime="20210205 17:12:18.303"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.303" endtime="20210205 17:12:18.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.303" endtime="20210205 17:12:18.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.304" endtime="20210205 17:12:18.305"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.303" endtime="20210205 17:12:18.305"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.305" endtime="20210205 17:12:18.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.306" endtime="20210205 17:12:18.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.306" endtime="20210205 17:12:18.306"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.305" endtime="20210205 17:12:18.306"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.307" endtime="20210205 17:12:18.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.307" endtime="20210205 17:12:18.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.307" endtime="20210205 17:12:18.308"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.306" endtime="20210205 17:12:18.308"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.308" endtime="20210205 17:12:18.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.308" endtime="20210205 17:12:18.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.309" endtime="20210205 17:12:18.309"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.308" endtime="20210205 17:12:18.309"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.309" endtime="20210205 17:12:18.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.309" endtime="20210205 17:12:18.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.310" endtime="20210205 17:12:18.310"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.309" endtime="20210205 17:12:18.310"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.310" endtime="20210205 17:12:18.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.311" endtime="20210205 17:12:18.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.311" endtime="20210205 17:12:18.311"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.310" endtime="20210205 17:12:18.311"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.312" endtime="20210205 17:12:18.312"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.312" endtime="20210205 17:12:18.312"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.312" endtime="20210205 17:12:18.313"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.312" endtime="20210205 17:12:18.313"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.313" endtime="20210205 17:12:18.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.313" endtime="20210205 17:12:18.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.314" endtime="20210205 17:12:18.314"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.313" endtime="20210205 17:12:18.314"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.314" endtime="20210205 17:12:18.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.315" endtime="20210205 17:12:18.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.315" endtime="20210205 17:12:18.315"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.314" endtime="20210205 17:12:18.315"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.315" endtime="20210205 17:12:18.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.316" endtime="20210205 17:12:18.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.316" endtime="20210205 17:12:18.316"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.315" endtime="20210205 17:12:18.317"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.317" endtime="20210205 17:12:18.317"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.317" endtime="20210205 17:12:18.317"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.317" endtime="20210205 17:12:18.318"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.317" endtime="20210205 17:12:18.318"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.318" endtime="20210205 17:12:18.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.318" endtime="20210205 17:12:18.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.319" endtime="20210205 17:12:18.319"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.318" endtime="20210205 17:12:18.319"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.319" endtime="20210205 17:12:18.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.320" endtime="20210205 17:12:18.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.320" endtime="20210205 17:12:18.320"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.319" endtime="20210205 17:12:18.320"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.321" endtime="20210205 17:12:18.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.321" endtime="20210205 17:12:18.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.321" endtime="20210205 17:12:18.322"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.320" endtime="20210205 17:12:18.322"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.322" endtime="20210205 17:12:18.322"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.322" endtime="20210205 17:12:18.322"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.323" endtime="20210205 17:12:18.323"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.322" endtime="20210205 17:12:18.323"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.323" endtime="20210205 17:12:18.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.323" endtime="20210205 17:12:18.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.324" endtime="20210205 17:12:18.324"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.323" endtime="20210205 17:12:18.324"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.324" endtime="20210205 17:12:18.325"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.324" endtime="20210205 17:12:18.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.325" endtime="20210205 17:12:18.326"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.325" endtime="20210205 17:12:18.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.326" endtime="20210205 17:12:18.326"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.326" endtime="20210205 17:12:18.326"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.324" endtime="20210205 17:12:18.326"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.327" endtime="20210205 17:12:18.327"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.326" endtime="20210205 17:12:18.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.327" endtime="20210205 17:12:18.328"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.327" endtime="20210205 17:12:18.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.328" endtime="20210205 17:12:18.328"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.328" endtime="20210205 17:12:18.328"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.326" endtime="20210205 17:12:18.328"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.329" endtime="20210205 17:12:18.329"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.329" endtime="20210205 17:12:18.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.330" endtime="20210205 17:12:18.330"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.329" endtime="20210205 17:12:18.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.330" endtime="20210205 17:12:18.331"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.330" endtime="20210205 17:12:18.331"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.329" endtime="20210205 17:12:18.331"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.331" endtime="20210205 17:12:18.331"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.331" endtime="20210205 17:12:18.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.332" endtime="20210205 17:12:18.332"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.331" endtime="20210205 17:12:18.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.332" endtime="20210205 17:12:18.333"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.332" endtime="20210205 17:12:18.333"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.331" endtime="20210205 17:12:18.333"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.333" endtime="20210205 17:12:18.334"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.333" endtime="20210205 17:12:18.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.334" endtime="20210205 17:12:18.334"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.334" endtime="20210205 17:12:18.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.335" endtime="20210205 17:12:18.335"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.334" endtime="20210205 17:12:18.335"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.333" endtime="20210205 17:12:18.335"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.335" endtime="20210205 17:12:18.336"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.335" endtime="20210205 17:12:18.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.336" endtime="20210205 17:12:18.336"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.336" endtime="20210205 17:12:18.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.337" endtime="20210205 17:12:18.337"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.336" endtime="20210205 17:12:18.337"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.335" endtime="20210205 17:12:18.337"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.338" endtime="20210205 17:12:18.338"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.337" endtime="20210205 17:12:18.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.338" endtime="20210205 17:12:18.339"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.338" endtime="20210205 17:12:18.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.339" endtime="20210205 17:12:18.339"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.339" endtime="20210205 17:12:18.339"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.337" endtime="20210205 17:12:18.339"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.340" endtime="20210205 17:12:18.340"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.340" endtime="20210205 17:12:18.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.341" endtime="20210205 17:12:18.341"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.340" endtime="20210205 17:12:18.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.341" endtime="20210205 17:12:18.342"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.341" endtime="20210205 17:12:18.342"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.339" endtime="20210205 17:12:18.342"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.342" endtime="20210205 17:12:18.342"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.342" endtime="20210205 17:12:18.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.343" endtime="20210205 17:12:18.343"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.342" endtime="20210205 17:12:18.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.343" endtime="20210205 17:12:18.344"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.343" endtime="20210205 17:12:18.344"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.342" endtime="20210205 17:12:18.344"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.344" endtime="20210205 17:12:18.344"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.344" endtime="20210205 17:12:18.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.345" endtime="20210205 17:12:18.345"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.345" endtime="20210205 17:12:18.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.346" endtime="20210205 17:12:18.346"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.345" endtime="20210205 17:12:18.346"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.344" endtime="20210205 17:12:18.346"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.207" endtime="20210205 17:12:18.346"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${filteridlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.346" endtime="20210205 17:12:18.346"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${filtertitlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.346" endtime="20210205 17:12:18.347"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${filterbodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.347" endtime="20210205 17:12:18.347"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.347" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.347" endtime="20210205 17:12:18.347"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.347" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.347" endtime="20210205 17:12:18.347"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.348" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.348" endtime="20210205 17:12:18.348"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.348" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.348" endtime="20210205 17:12:18.348"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.348" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.348" endtime="20210205 17:12:18.348"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.349" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.348" endtime="20210205 17:12:18.349"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.075" endtime="20210205 17:12:18.349"></status>
</kw>
<doc>Compare Full Response User Id filtering to /users/{userid}/posts</doc>
<status status="PASS" starttime="20210205 17:12:17.763" endtime="20210205 17:12:18.349" critical="yes"></status>
</test>
<test id="s1-t7" name="TC007 COMPARE POST ID FILTERED POST ENDPOINT RESPONSE TO GET POST BY POST ID URI RESPONSE">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:18.353" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:18.352" endtime="20210205 17:12:18.353"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 17:12:18.354" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:18.353" endtime="20210205 17:12:18.354"></status>
</kw>
<msg timestamp="20210205 17:12:18.354" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:18.352" endtime="20210205 17:12:18.354"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:18.355" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:18.355" endtime="20210205 17:12:18.355"></status>
</kw>
<msg timestamp="20210205 17:12:18.356" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 17:12:18.354" endtime="20210205 17:12:18.356"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:18.357" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:18.356" endtime="20210205 17:12:18.357"></status>
</kw>
<msg timestamp="20210205 17:12:18.357" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:18.356" endtime="20210205 17:12:18.357"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:18.358" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:18.357" endtime="20210205 17:12:18.358"></status>
</kw>
<msg timestamp="20210205 17:12:18.358" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:18.357" endtime="20210205 17:12:18.358"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:18.359" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:18.358" endtime="20210205 17:12:18.359"></status>
</kw>
<msg timestamp="20210205 17:12:18.359" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 17:12:18.358" endtime="20210205 17:12:18.359"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:18.360" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:18.360" endtime="20210205 17:12:18.360"></status>
</kw>
<msg timestamp="20210205 17:12:18.360" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:18.359" endtime="20210205 17:12:18.360"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:18.361" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:18.361" endtime="20210205 17:12:18.361"></status>
</kw>
<msg timestamp="20210205 17:12:18.361" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:18.360" endtime="20210205 17:12:18.362"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:18.362" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 17:12:18.362" endtime="20210205 17:12:18.363"></status>
</kw>
<msg timestamp="20210205 17:12:18.363" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:18.362" endtime="20210205 17:12:18.363"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:18.365" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:18.364" endtime="20210205 17:12:18.365"></status>
</kw>
<msg timestamp="20210205 17:12:18.365" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:18.363" endtime="20210205 17:12:18.365"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:18.367" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:18.366" endtime="20210205 17:12:18.367"></status>
</kw>
<msg timestamp="20210205 17:12:18.367" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 17:12:18.365" endtime="20210205 17:12:18.367"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:18.369" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:18.368" endtime="20210205 17:12:18.369"></status>
</kw>
<msg timestamp="20210205 17:12:18.369" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:18.367" endtime="20210205 17:12:18.369"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:18.371" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 17:12:18.370" endtime="20210205 17:12:18.371"></status>
</kw>
<msg timestamp="20210205 17:12:18.371" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:18.369" endtime="20210205 17:12:18.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.372" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:18.372" endtime="20210205 17:12:18.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 17:12:18.373" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 17:12:18.372" endtime="20210205 17:12:18.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.373" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 17:12:18.373" endtime="20210205 17:12:18.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.374" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:18.374" endtime="20210205 17:12:18.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.375" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:18.374" endtime="20210205 17:12:18.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.375" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 17:12:18.375" endtime="20210205 17:12:18.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.376" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:18.375" endtime="20210205 17:12:18.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.376" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:18.376" endtime="20210205 17:12:18.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.377" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:18.377" endtime="20210205 17:12:18.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.378" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:18.378" endtime="20210205 17:12:18.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.379" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 17:12:18.378" endtime="20210205 17:12:18.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.379" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:18.379" endtime="20210205 17:12:18.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.380" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:18.379" endtime="20210205 17:12:18.380"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.352" endtime="20210205 17:12:18.380"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Compare /posts parameter filter response to posts/{num}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.380" level="INFO">Set test documentation to:
Compare /posts parameter filter response to posts/{num}</msg>
<status status="PASS" starttime="20210205 17:12:18.380" endtime="20210205 17:12:18.380"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postinId}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:18.382" level="INFO">@{post_list} = [ 1 ]</msg>
<status status="PASS" starttime="20210205 17:12:18.381" endtime="20210205 17:12:18.382"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 17:12:18.382" level="INFO">Length is 1</msg>
<msg timestamp="20210205 17:12:18.382" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20210205 17:12:18.382" endtime="20210205 17:12:18.382"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.382" endtime="20210205 17:12:18.392"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:18.393" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:18.392" endtime="20210205 17:12:18.393"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:18.394" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:18.393" endtime="20210205 17:12:18.394"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.394" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:18.394" endtime="20210205 17:12:18.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 17:12:18.445" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=1 
 path_url=/posts?id=1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:18.445" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=1 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df55bda8c0314564465b5688faac5b41a1612563138; expires=Sun, 07-Mar-21 22:12:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612535091', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-QtF0EaiifRh1Z3cEspXIXV0RoQY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '28050', 'cf-request-id': '0815d9e06300003e22e9158000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=umyIROPMtFtPynbZU4KAlwuryDmPzhTx8VlsWLcwqZPv1okpMUAFw20dUX7LvRigFDHQypil6tzEtqXkqJRtE8EIaEaibwbCIgHRY2NOST1qvsYIyIYaII5Q7%2FjW"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8e09fbb3e22-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 17:12:18.395" endtime="20210205 17:12:18.445"></status>
</kw>
<msg timestamp="20210205 17:12:18.445" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:18.395" endtime="20210205 17:12:18.445"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.446" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.445" endtime="20210205 17:12:18.446"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.446" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.446" endtime="20210205 17:12:18.446"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.447" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.446" endtime="20210205 17:12:18.447"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.447" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.447" endtime="20210205 17:12:18.448"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.448" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.448" endtime="20210205 17:12:18.448"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.449" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.448" endtime="20210205 17:12:18.449"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.449" endtime="20210205 17:12:18.449"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.449" endtime="20210205 17:12:18.450"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.450" endtime="20210205 17:12:18.450"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.449" endtime="20210205 17:12:18.450"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.449" endtime="20210205 17:12:18.450"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.450" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:18.450" endtime="20210205 17:12:18.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 17:12:18.499" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:18.500" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d618eebb7f957ba643637e41fd1bb34651612563138; expires=Sun, 07-Mar-21 22:12:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23289', 'cf-request-id': '0815d9e09900003dc7081ff000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=SQkWa61mpCKKbzNayZwITl%2FCP%2FMlFBGFr18r%2B0io96EcmYVFo%2Fozdk%2B3l3FEHr3z2kobRWFA1AMgSmfqGKfehSYDuNhhD617v0olbE8ocFRTfyYxWzMnzyHWVV72"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8e0ff603dc7-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<status status="PASS" starttime="20210205 17:12:18.451" endtime="20210205 17:12:18.500"></status>
</kw>
<msg timestamp="20210205 17:12:18.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:18.451" endtime="20210205 17:12:18.500"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20210205 17:12:18.501" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210205 17:12:18.502" level="INFO">To JSON using : content={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} </msg>
<msg timestamp="20210205 17:12:18.503" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210205 17:12:18.503" level="INFO">${json_response} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit...</msg>
<status status="PASS" starttime="20210205 17:12:18.500" endtime="20210205 17:12:18.503"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.536" level="INFO">${filteridlist} = [1]</msg>
<status status="PASS" starttime="20210205 17:12:18.503" endtime="20210205 17:12:18.536"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.565" level="INFO">${filtertitlelist} = ['sunt aut facere repellat provident occaecati excepturi optio reprehenderit']</msg>
<status status="PASS" starttime="20210205 17:12:18.536" endtime="20210205 17:12:18.565"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.593" level="INFO">${filterbodylist} = ['quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto']</msg>
<status status="PASS" starttime="20210205 17:12:18.565" endtime="20210205 17:12:18.593"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.593" endtime="20210205 17:12:18.593"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.593" endtime="20210205 17:12:18.593"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.594" endtime="20210205 17:12:18.594"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.594" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.594" endtime="20210205 17:12:18.594"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.594" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.594" endtime="20210205 17:12:18.594"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.594" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.594" endtime="20210205 17:12:18.595"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.595" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.595" endtime="20210205 17:12:18.595"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.595" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.595" endtime="20210205 17:12:18.595"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.595" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.595" endtime="20210205 17:12:18.595"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:18.596" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.595" endtime="20210205 17:12:18.596"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.381" endtime="20210205 17:12:18.596"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postfId}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:18.597" level="INFO">@{post_list} = [ 100 ]</msg>
<status status="PASS" starttime="20210205 17:12:18.597" endtime="20210205 17:12:18.597"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 17:12:18.598" level="INFO">Length is 1</msg>
<msg timestamp="20210205 17:12:18.598" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20210205 17:12:18.597" endtime="20210205 17:12:18.598"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.598" endtime="20210205 17:12:18.599"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:18.599" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:18.599" endtime="20210205 17:12:18.600"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:18.600" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:18.600" endtime="20210205 17:12:18.600"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.601" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:18.601" endtime="20210205 17:12:18.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 17:12:18.740" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=100 
 path_url=/posts?id=100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:18.740" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=100 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=daa6af892bc9c6f0874109d40ce3426231612563138; expires=Sun, 07-Mar-21 22:12:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612561421', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-AbapSgcu4MKsanVu8/m5reKm/rI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '1776', 'cf-request-id': '0815d9e1850000ccea9dab5000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=N4e1Wgxi594fePDF8ygXjCi9geu5PyoIHb%2F4%2F4n8H7CHR55x1Rrmwkdx5qP9wBADq%2BLzX22WtuzJx5dxuRFUb65lUZI4orQiTQOFT%2F9UTZruf1cp4JUWfitZLdLg"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8e26856ccea-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 17:12:18.602" endtime="20210205 17:12:18.741"></status>
</kw>
<msg timestamp="20210205 17:12:18.741" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:18.601" endtime="20210205 17:12:18.741"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.742" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.741" endtime="20210205 17:12:18.742"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.743" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.742" endtime="20210205 17:12:18.743"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.743" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.743" endtime="20210205 17:12:18.743"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.744" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.744" endtime="20210205 17:12:18.744"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.745" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.744" endtime="20210205 17:12:18.745"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.746" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.745" endtime="20210205 17:12:18.746"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.747" endtime="20210205 17:12:18.747"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.748" endtime="20210205 17:12:18.748"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.749" endtime="20210205 17:12:18.749"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.746" endtime="20210205 17:12:18.749"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.746" endtime="20210205 17:12:18.749"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.750" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:18.749" endtime="20210205 17:12:18.750"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 17:12:18.822" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:18.822" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d76f95e23e7350d26922657453d26d9a61612563139; expires=Sun, 07-Mar-21 22:12:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611591853', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23069', 'cf-request-id': '0815d9e1c80000e710a0116000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=NDzz8wriXRZam1jB7l3mks3n1Qgq2LZBzcfdQrOXmS92TTNgkVLB%2BRQAuzCDU4dQ8vd1CDJxWvg6EVvNaMTRu8%2F9jc5dMpaMMZVWs4vA8ociEIkmGKZsiF4drya2"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8e2da4de710-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<status status="PASS" starttime="20210205 17:12:18.750" endtime="20210205 17:12:18.822"></status>
</kw>
<msg timestamp="20210205 17:12:18.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:18.750" endtime="20210205 17:12:18.823"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20210205 17:12:18.823" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210205 17:12:18.825" level="INFO">To JSON using : content={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} </msg>
<msg timestamp="20210205 17:12:18.825" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210205 17:12:18.826" level="INFO">${json_response} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti...</msg>
<status status="PASS" starttime="20210205 17:12:18.823" endtime="20210205 17:12:18.826"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.865" level="INFO">${filteridlist} = [100]</msg>
<status status="PASS" starttime="20210205 17:12:18.826" endtime="20210205 17:12:18.865"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.897" level="INFO">${filtertitlelist} = ['at nam consequatur ea labore ea harum']</msg>
<status status="PASS" starttime="20210205 17:12:18.866" endtime="20210205 17:12:18.897"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.924" level="INFO">${filterbodylist} = ['cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut']</msg>
<status status="PASS" starttime="20210205 17:12:18.897" endtime="20210205 17:12:18.924"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.924" endtime="20210205 17:12:18.924"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.924" endtime="20210205 17:12:18.924"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.925" endtime="20210205 17:12:18.925"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.925" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.925" endtime="20210205 17:12:18.925"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:18.925" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.925" endtime="20210205 17:12:18.925"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.926" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.925" endtime="20210205 17:12:18.926"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:18.926" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.926" endtime="20210205 17:12:18.926"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.926" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.926" endtime="20210205 17:12:18.926"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:18.926" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.926" endtime="20210205 17:12:18.926"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:18.927" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:18.926" endtime="20210205 17:12:18.927"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.596" endtime="20210205 17:12:18.927"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postfId} ${invalidIpostid}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:18.928" level="INFO">@{post_list} = [ 100 | 0 ]</msg>
<status status="PASS" starttime="20210205 17:12:18.928" endtime="20210205 17:12:18.928"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 17:12:18.929" level="INFO">Length is 2</msg>
<msg timestamp="20210205 17:12:18.929" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 17:12:18.928" endtime="20210205 17:12:18.929"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:18.929" endtime="20210205 17:12:18.930"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:18.931" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:18.930" endtime="20210205 17:12:18.931"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:18.932" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:18.931" endtime="20210205 17:12:18.932"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:18.933" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:18.932" endtime="20210205 17:12:18.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 17:12:19.018" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=100&amp;id=0 
 path_url=/posts?id=100&amp;id=0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:19.018" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=100&amp;id=0 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db112a4d9acbd674af85d36dcf09bcce11612563139; expires=Sun, 07-Mar-21 22:12:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612563041', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-AbapSgcu4MKsanVu8/m5reKm/rI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '155', 'cf-request-id': '0815d9e2a00000efe0e693b000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=DQjeyH8nSi4Mc9pCX9rL5Ac%2BtkvXXMgPX3xdiSA4fhPUaTlm0G3BlpAou2pXpfd8Ec8L4ZjPfGsFhBfJF3C9%2BzIb9G%2BCuTLKKmVHNxG8GKPvxLM3LU5HKlffvuPE"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8e43d6cefe0-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 17:12:18.934" endtime="20210205 17:12:19.018"></status>
</kw>
<msg timestamp="20210205 17:12:19.018" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:18.933" endtime="20210205 17:12:19.018"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.019" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.019" endtime="20210205 17:12:19.019"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.020" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.019" endtime="20210205 17:12:19.020"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.020" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.020" endtime="20210205 17:12:19.020"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.021" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.021" endtime="20210205 17:12:19.021"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.022" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.021" endtime="20210205 17:12:19.022"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.023" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.022" endtime="20210205 17:12:19.023"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.024" endtime="20210205 17:12:19.024"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.024" endtime="20210205 17:12:19.025"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.025" endtime="20210205 17:12:19.025"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:19.023" endtime="20210205 17:12:19.025"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:19.023" endtime="20210205 17:12:19.025"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:19.026" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:19.026" endtime="20210205 17:12:19.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 17:12:19.077" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:19.077" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d00b3d73e39681e5883577a376ad3b3ff1612563139; expires=Sun, 07-Mar-21 22:12:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611591853', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23069', 'cf-request-id': '0815d9e2da00000cbdde1a2000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=aEeXcByT34BK9KCj9e7WQ9W%2FpElNuccQ1mwIsPwpxDC5XvNm3O%2BgWtkTuFRg7qbyo9rHzKlKJ72yvYIA5d6aOgxENlcjgHBjLqAj%2BpwuqkiUHNxjWU%2FSTpKD%2B4JP"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8e498030cbd-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<status status="PASS" starttime="20210205 17:12:19.027" endtime="20210205 17:12:19.078"></status>
</kw>
<msg timestamp="20210205 17:12:19.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:19.027" endtime="20210205 17:12:19.078"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20210205 17:12:19.078" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210205 17:12:19.080" level="INFO">To JSON using : content={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} </msg>
<msg timestamp="20210205 17:12:19.080" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210205 17:12:19.081" level="INFO">${json_response} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti...</msg>
<status status="PASS" starttime="20210205 17:12:19.078" endtime="20210205 17:12:19.081"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.131" level="INFO">${filteridlist} = [100]</msg>
<status status="PASS" starttime="20210205 17:12:19.081" endtime="20210205 17:12:19.131"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.172" level="INFO">${filtertitlelist} = ['at nam consequatur ea labore ea harum']</msg>
<status status="PASS" starttime="20210205 17:12:19.131" endtime="20210205 17:12:19.172"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.210" level="INFO">${filterbodylist} = ['cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut']</msg>
<status status="PASS" starttime="20210205 17:12:19.172" endtime="20210205 17:12:19.210"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.210" endtime="20210205 17:12:19.211"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.211" endtime="20210205 17:12:19.211"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.211" endtime="20210205 17:12:19.212"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.212" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.212" endtime="20210205 17:12:19.212"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.212" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.212" endtime="20210205 17:12:19.212"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.213" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.212" endtime="20210205 17:12:19.213"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.213" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.213" endtime="20210205 17:12:19.213"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.214" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.213" endtime="20210205 17:12:19.214"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.214" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.214" endtime="20210205 17:12:19.214"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:19.214" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.214" endtime="20210205 17:12:19.214"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:18.927" endtime="20210205 17:12:19.215"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${invalidIpostid} ${postfId}</arg>
<arg>1</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:19.216" level="INFO">@{post_list} = [ 0 | 100 ]</msg>
<status status="PASS" starttime="20210205 17:12:19.216" endtime="20210205 17:12:19.216"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 17:12:19.216" level="INFO">Length is 2</msg>
<msg timestamp="20210205 17:12:19.216" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 17:12:19.216" endtime="20210205 17:12:19.216"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.216" endtime="20210205 17:12:19.217"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:19.218" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:19.217" endtime="20210205 17:12:19.218"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:19.219" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:19.218" endtime="20210205 17:12:19.219"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:19.219" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:19.219" endtime="20210205 17:12:19.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 17:12:19.311" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=0&amp;id=100 
 path_url=/posts?id=0&amp;id=100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:19.311" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=0&amp;id=100 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da6b0d616cff43d3a04644962df17fabe1612563139; expires=Sun, 07-Mar-21 22:12:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1612563041', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-AbapSgcu4MKsanVu8/m5reKm/rI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '155', 'cf-request-id': '0815d9e3b50000f021b4316000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=yfrAnlMxQkwafTmvNYN3%2BNn8aNgPwKPXb%2B%2BABktpRsc3RFSXMnsLn90qJgW4aX8BNGsCTFCQIZoZD2PBsAAam5dlcLENlEzsY36UdtNE8WNB8ccH9RJFze8JTrIz"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8e5ead7f021-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 17:12:19.220" endtime="20210205 17:12:19.312"></status>
</kw>
<msg timestamp="20210205 17:12:19.312" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:19.220" endtime="20210205 17:12:19.312"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.313" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.312" endtime="20210205 17:12:19.313"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.314" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.313" endtime="20210205 17:12:19.314"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.314" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.314" endtime="20210205 17:12:19.314"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.315" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.315" endtime="20210205 17:12:19.315"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.316" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.315" endtime="20210205 17:12:19.316"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.317" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.316" endtime="20210205 17:12:19.317"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.318" endtime="20210205 17:12:19.318"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.319" endtime="20210205 17:12:19.319"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.319" endtime="20210205 17:12:19.320"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:19.317" endtime="20210205 17:12:19.320"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:19.317" endtime="20210205 17:12:19.320"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:19.320" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:19.320" endtime="20210205 17:12:19.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 17:12:19.380" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:19.380" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da6b0d616cff43d3a04644962df17fabe1612563139; expires=Sun, 07-Mar-21 22:12:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611591853', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23069', 'cf-request-id': '0815d9e4090000f0218e86f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=kATx8Sx7ix5l1Zt2mL1WpEaPuLO0owXbGBsmjsSx1JUeHYI6nkIi0BRuZ8OZ041kJkkcxSL5IP8vTIycaK5QZuu1S99AwzrY0x5NOCHlaKc1CUm2i211DAKZx2kj"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8e67bbaf021-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<status status="PASS" starttime="20210205 17:12:19.321" endtime="20210205 17:12:19.380"></status>
</kw>
<msg timestamp="20210205 17:12:19.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:19.320" endtime="20210205 17:12:19.381"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20210205 17:12:19.381" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210205 17:12:19.383" level="INFO">To JSON using : content={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} </msg>
<msg timestamp="20210205 17:12:19.384" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210205 17:12:19.384" level="INFO">${json_response} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti...</msg>
<status status="PASS" starttime="20210205 17:12:19.381" endtime="20210205 17:12:19.384"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.420" level="INFO">${filteridlist} = [100]</msg>
<status status="PASS" starttime="20210205 17:12:19.384" endtime="20210205 17:12:19.420"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.449" level="INFO">${filtertitlelist} = ['at nam consequatur ea labore ea harum']</msg>
<status status="PASS" starttime="20210205 17:12:19.420" endtime="20210205 17:12:19.449"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.479" level="INFO">${filterbodylist} = ['cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut']</msg>
<status status="PASS" starttime="20210205 17:12:19.449" endtime="20210205 17:12:19.479"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.479" endtime="20210205 17:12:19.479"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.479" endtime="20210205 17:12:19.480"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.480" endtime="20210205 17:12:19.480"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.480" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.480" endtime="20210205 17:12:19.480"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.480" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.480" endtime="20210205 17:12:19.480"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.481" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.481" endtime="20210205 17:12:19.481"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.481" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.481" endtime="20210205 17:12:19.481"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.481" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.481" endtime="20210205 17:12:19.481"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.481" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.481" endtime="20210205 17:12:19.482"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:19.482" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.482" endtime="20210205 17:12:19.482"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:19.215" endtime="20210205 17:12:19.482"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postinId} ${invalidFpostid}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:19.484" level="INFO">@{post_list} = [ 1 | 101 ]</msg>
<status status="PASS" starttime="20210205 17:12:19.483" endtime="20210205 17:12:19.484"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 17:12:19.484" level="INFO">Length is 2</msg>
<msg timestamp="20210205 17:12:19.484" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 17:12:19.484" endtime="20210205 17:12:19.484"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.484" endtime="20210205 17:12:19.488"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:19.489" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:19.488" endtime="20210205 17:12:19.489"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:19.490" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:19.489" endtime="20210205 17:12:19.490"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:19.491" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:19.490" endtime="20210205 17:12:19.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 17:12:19.586" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=1&amp;id=101 
 path_url=/posts?id=1&amp;id=101 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:19.586" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=1&amp;id=101 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0f2e14504051659c157b06f8bb35e9b51612563139; expires=Sun, 07-Mar-21 22:12:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '997', 'x-ratelimit-reset': '1612561301', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"134-QtF0EaiifRh1Z3cEspXIXV0RoQY"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '1845', 'cf-request-id': '0815d9e4d40000c5fcf6b99000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=T87sMyn0cMNKTC40THSsW7htdl7pZ6N6q122j6KzgIVgNnecUNP%2ByAKHznTwHVZxsDkqhQ%2Bx6rlsSQHmgfLoWATHKrE4HNpQvPnu9bgYM7z7Ufn1Fxq56XgCB3hE"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8e7bae1c5fc-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 17:12:19.492" endtime="20210205 17:12:19.587"></status>
</kw>
<msg timestamp="20210205 17:12:19.587" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:19.491" endtime="20210205 17:12:19.587"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.588" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.587" endtime="20210205 17:12:19.588"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.588" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.588" endtime="20210205 17:12:19.589"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.589" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.589" endtime="20210205 17:12:19.589"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.590" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.590" endtime="20210205 17:12:19.590"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.591" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.590" endtime="20210205 17:12:19.591"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.591" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.591" endtime="20210205 17:12:19.591"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.592" endtime="20210205 17:12:19.592"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.592" endtime="20210205 17:12:19.593"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.593" endtime="20210205 17:12:19.593"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:19.592" endtime="20210205 17:12:19.593"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:19.591" endtime="20210205 17:12:19.593"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:19.593" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:19.593" endtime="20210205 17:12:19.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 17:12:19.669" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:19.669" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db0059338330bb338f37185ad273586531612563139; expires=Sun, 07-Mar-21 22:12:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23290', 'cf-request-id': '0815d9e5280000919ed3916000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=F2kDStemuSkvFDbj88HebHeRZ2F9%2BmIEWsEMvhqKGtS4MiCjLOc9I3aB9EIF4GtsDlXhl1Myv9wHzy44vZY%2FuPHum9ridwICklGCYEMtcGs%2F7HjSepQ%2FT%2BO56FiN"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8e839ac919e-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<status status="PASS" starttime="20210205 17:12:19.594" endtime="20210205 17:12:19.670"></status>
</kw>
<msg timestamp="20210205 17:12:19.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:19.594" endtime="20210205 17:12:19.670"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20210205 17:12:19.670" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210205 17:12:19.673" level="INFO">To JSON using : content={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} </msg>
<msg timestamp="20210205 17:12:19.673" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210205 17:12:19.673" level="INFO">${json_response} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit...</msg>
<status status="PASS" starttime="20210205 17:12:19.670" endtime="20210205 17:12:19.673"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.710" level="INFO">${filteridlist} = [1]</msg>
<status status="PASS" starttime="20210205 17:12:19.673" endtime="20210205 17:12:19.710"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.737" level="INFO">${filtertitlelist} = ['sunt aut facere repellat provident occaecati excepturi optio reprehenderit']</msg>
<status status="PASS" starttime="20210205 17:12:19.710" endtime="20210205 17:12:19.737"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.767" level="INFO">${filterbodylist} = ['quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto']</msg>
<status status="PASS" starttime="20210205 17:12:19.738" endtime="20210205 17:12:19.768"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.768" endtime="20210205 17:12:19.768"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.768" endtime="20210205 17:12:19.768"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.768" endtime="20210205 17:12:19.769"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.769" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.769" endtime="20210205 17:12:19.769"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.769" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.769" endtime="20210205 17:12:19.769"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.770" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.769" endtime="20210205 17:12:19.770"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.770" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.770" endtime="20210205 17:12:19.770"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.770" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.770" endtime="20210205 17:12:19.770"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.770" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.770" endtime="20210205 17:12:19.770"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:19.771" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.770" endtime="20210205 17:12:19.771"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:19.483" endtime="20210205 17:12:19.771"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${invalidFpostid} ${postinId}</arg>
<arg>1</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:19.772" level="INFO">@{post_list} = [ 101 | 1 ]</msg>
<status status="PASS" starttime="20210205 17:12:19.772" endtime="20210205 17:12:19.772"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 17:12:19.773" level="INFO">Length is 2</msg>
<msg timestamp="20210205 17:12:19.773" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 17:12:19.772" endtime="20210205 17:12:19.773"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.773" endtime="20210205 17:12:19.777"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:19.779" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:19.778" endtime="20210205 17:12:19.779"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 17:12:19.780" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:19.779" endtime="20210205 17:12:19.780"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:19.780" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:19.780" endtime="20210205 17:12:19.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 17:12:19.891" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=101&amp;id=1 
 path_url=/posts?id=101&amp;id=1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:19.892" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=101&amp;id=1 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db858a787b22203b03ba9e47fdf5230821612563140; expires=Sun, 07-Mar-21 22:12:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612563161', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-QtF0EaiifRh1Z3cEspXIXV0RoQY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'MISS', 'cf-request-id': '0815d9e5ee0000e7589ab61000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=8GffqgL%2BZ1N2OOg16uA%2FT5et5BlHX0uTBTuM1w75R%2FWvsE%2B5zeuFLEEDxa7eR7v60aTfoMLz7ub3kFO3tmQY%2BNd28a%2BrTqATE9H7eJnY62vh3bAg%2FA1YM%2FpL3MvE"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8e97ac9e758-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 17:12:19.782" endtime="20210205 17:12:19.892"></status>
</kw>
<msg timestamp="20210205 17:12:19.892" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:19.781" endtime="20210205 17:12:19.892"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.893" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.893" endtime="20210205 17:12:19.893"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:19.894" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.893" endtime="20210205 17:12:19.894"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.895" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.894" endtime="20210205 17:12:19.895"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:19.895" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.895" endtime="20210205 17:12:19.896"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.897" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.896" endtime="20210205 17:12:19.897"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:19.897" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:19.897" endtime="20210205 17:12:19.897"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.899" endtime="20210205 17:12:19.899"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.900" endtime="20210205 17:12:19.900"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:19.900" endtime="20210205 17:12:19.901"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:19.898" endtime="20210205 17:12:19.901"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:19.897" endtime="20210205 17:12:19.901"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 17:12:19.902" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:19.901" endtime="20210205 17:12:19.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 17:12:20.014" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:20.014" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d08bb890944a1c34aa0370eeca758907e1612563140; expires=Sun, 07-Mar-21 22:12:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23291', 'cf-request-id': '0815d9e65300003dfe9ab4b000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=EKDGukxesGoPDhBTh2I9p2phh2G86%2FoY58JVe8I1BPrrUhnQwyo%2F8tLDoOW1pgO2zz%2FodELXAlfAlGiswNhD7LfOdjf2ltbJJ3bT6JEHGrYyzjiR1vcyy6DA3ijZ"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8ea1bff3dfe-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<status status="PASS" starttime="20210205 17:12:19.903" endtime="20210205 17:12:20.014"></status>
</kw>
<msg timestamp="20210205 17:12:20.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:19.903" endtime="20210205 17:12:20.015"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20210205 17:12:20.015" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210205 17:12:20.018" level="INFO">To JSON using : content={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} </msg>
<msg timestamp="20210205 17:12:20.018" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210205 17:12:20.018" level="INFO">${json_response} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit...</msg>
<status status="PASS" starttime="20210205 17:12:20.015" endtime="20210205 17:12:20.018"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:20.057" level="INFO">${filteridlist} = [1]</msg>
<status status="PASS" starttime="20210205 17:12:20.018" endtime="20210205 17:12:20.057"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:20.086" level="INFO">${filtertitlelist} = ['sunt aut facere repellat provident occaecati excepturi optio reprehenderit']</msg>
<status status="PASS" starttime="20210205 17:12:20.057" endtime="20210205 17:12:20.086"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_response}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:20.117" level="INFO">${filterbodylist} = ['quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto']</msg>
<status status="PASS" starttime="20210205 17:12:20.086" endtime="20210205 17:12:20.117"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.118" endtime="20210205 17:12:20.118"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.118" endtime="20210205 17:12:20.118"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.118" endtime="20210205 17:12:20.119"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 17:12:20.119" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.119" endtime="20210205 17:12:20.119"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 17:12:20.119" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.119" endtime="20210205 17:12:20.119"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 17:12:20.119" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.119" endtime="20210205 17:12:20.119"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 17:12:20.120" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.119" endtime="20210205 17:12:20.120"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 17:12:20.120" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.120" endtime="20210205 17:12:20.120"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 17:12:20.120" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.120" endtime="20210205 17:12:20.120"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 17:12:20.120" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.120" endtime="20210205 17:12:20.120"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:19.771" endtime="20210205 17:12:20.121"></status>
</kw>
<doc>Compare /posts parameter filter response to posts/{num}</doc>
<tags>
<tag>Hybrid</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 17:12:18.351" endtime="20210205 17:12:20.121" critical="yes"></status>
</test>
<test id="s1-t8" name="TC008 VALIDATE GET POST BY POST ID FOR ALL POST ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 17:12:20.124" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 17:12:20.123" endtime="20210205 17:12:20.124"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 17:12:20.125" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:20.124" endtime="20210205 17:12:20.125"></status>
</kw>
<msg timestamp="20210205 17:12:20.126" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:20.123" endtime="20210205 17:12:20.126"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.127" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:20.127" endtime="20210205 17:12:20.128"></status>
</kw>
<msg timestamp="20210205 17:12:20.128" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 17:12:20.126" endtime="20210205 17:12:20.128"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.129" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:20.129" endtime="20210205 17:12:20.129"></status>
</kw>
<msg timestamp="20210205 17:12:20.130" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:20.128" endtime="20210205 17:12:20.130"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.131" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:20.130" endtime="20210205 17:12:20.131"></status>
</kw>
<msg timestamp="20210205 17:12:20.132" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:20.130" endtime="20210205 17:12:20.132"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.134" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:20.132" endtime="20210205 17:12:20.134"></status>
</kw>
<msg timestamp="20210205 17:12:20.135" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 17:12:20.132" endtime="20210205 17:12:20.135"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.136" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 17:12:20.135" endtime="20210205 17:12:20.136"></status>
</kw>
<msg timestamp="20210205 17:12:20.136" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:20.135" endtime="20210205 17:12:20.136"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.137" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:20.137" endtime="20210205 17:12:20.137"></status>
</kw>
<msg timestamp="20210205 17:12:20.137" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:20.136" endtime="20210205 17:12:20.137"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.138" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 17:12:20.138" endtime="20210205 17:12:20.138"></status>
</kw>
<msg timestamp="20210205 17:12:20.138" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:20.137" endtime="20210205 17:12:20.138"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.141" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 17:12:20.139" endtime="20210205 17:12:20.141"></status>
</kw>
<msg timestamp="20210205 17:12:20.141" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:20.139" endtime="20210205 17:12:20.141"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.143" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 17:12:20.142" endtime="20210205 17:12:20.143"></status>
</kw>
<msg timestamp="20210205 17:12:20.143" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 17:12:20.141" endtime="20210205 17:12:20.143"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.144" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 17:12:20.144" endtime="20210205 17:12:20.144"></status>
</kw>
<msg timestamp="20210205 17:12:20.144" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:20.143" endtime="20210205 17:12:20.144"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.145" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 17:12:20.145" endtime="20210205 17:12:20.145"></status>
</kw>
<msg timestamp="20210205 17:12:20.146" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:20.144" endtime="20210205 17:12:20.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.146" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 17:12:20.146" endtime="20210205 17:12:20.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 17:12:20.146" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 17:12:20.146" endtime="20210205 17:12:20.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.147" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 17:12:20.147" endtime="20210205 17:12:20.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.147" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:20.147" endtime="20210205 17:12:20.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.148" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:20.148" endtime="20210205 17:12:20.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.149" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 17:12:20.148" endtime="20210205 17:12:20.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.150" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 17:12:20.149" endtime="20210205 17:12:20.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.150" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:20.150" endtime="20210205 17:12:20.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.151" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:20.150" endtime="20210205 17:12:20.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.151" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 17:12:20.151" endtime="20210205 17:12:20.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.151" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 17:12:20.151" endtime="20210205 17:12:20.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.152" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 17:12:20.152" endtime="20210205 17:12:20.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.152" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 17:12:20.152" endtime="20210205 17:12:20.152"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.123" endtime="20210205 17:12:20.152"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${allpostcnt}</arg>
</arguments>
<assign>
<var>${allpostnum}</var>
</assign>
<msg timestamp="20210205 17:12:20.160" level="INFO">${allpostnum} = 100</msg>
<status status="PASS" starttime="20210205 17:12:20.160" endtime="20210205 17:12:20.161"></status>
</kw>
<kw name="${postid} IN RANGE [ 1 | ${allpostnum+1} ]" type="for">
<kw name="${postid} = 1" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.163" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:20.162" endtime="20210205 17:12:20.163"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:20.214" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:20.214" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d6edb00fcddd96138ba98200b5505da381612563140; expires=Sun, 07-Mar-21 22:12:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23291', 'cf-request-id': '0815d9e74a00000ca1b5912000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=1zO%2BhnLHXeTgdj9f1XaHo87EeEKrdfc8DCOdcm0tmXZESBxZU67sWWhzGApBlA2yWCStmnknuAU921pI3WrR8yQhseWtVlDjMpPNQfjgqj6et%2FXPHkEBTC9lyzdA"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8ebab370ca1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<msg timestamp="20210205 17:12:20.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.164" endtime="20210205 17:12:20.215"></status>
</kw>
<msg timestamp="20210205 17:12:20.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.162" endtime="20210205 17:12:20.215"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.216" endtime="20210205 17:12:20.218"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.216" endtime="20210205 17:12:20.218"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.215" endtime="20210205 17:12:20.218"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.219" endtime="20210205 17:12:20.219"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.218" endtime="20210205 17:12:20.220"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.220" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.220" endtime="20210205 17:12:20.220"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.251" level="INFO">${idvalue} = [1]</msg>
<status status="PASS" starttime="20210205 17:12:20.221" endtime="20210205 17:12:20.251"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:20.251" level="INFO">${responseid} = 1</msg>
<status status="PASS" starttime="20210205 17:12:20.251" endtime="20210205 17:12:20.251"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.251" endtime="20210205 17:12:20.252"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.252" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.252" endtime="20210205 17:12:20.252"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.220" endtime="20210205 17:12:20.252"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.161" endtime="20210205 17:12:20.252"></status>
</kw>
<kw name="${postid} = 2" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.253" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:20.253" endtime="20210205 17:12:20.253"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:20.432" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/2 
 path_url=/posts/2 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:20.432" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/2 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d50842a4a7d9886694d104aaa22bb47a21612563140; expires=Sun, 07-Mar-21 22:12:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612518289', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"116-jnDuMpjju89+9j7e0BqkdFsVRjs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '15966', 'cf-request-id': '0815d9e7ee00003dc634b13000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=x4kJhfyN71PtNJ2OEeSE%2BTg7IAFZdAOo48x58SvgIOV638IudJtlF4JmN7RFqoYQPUZrtZChydb0HFPGhqXhxjMsUhv1UX7Mj72qdmPU1vEOBTNlpMZwuJNgEK1Q"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8ecb90c3dc6-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 2,
  "title": "qui est esse",
  "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
} 
 </msg>
<msg timestamp="20210205 17:12:20.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.253" endtime="20210205 17:12:20.432"></status>
</kw>
<msg timestamp="20210205 17:12:20.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.252" endtime="20210205 17:12:20.433"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.435" endtime="20210205 17:12:20.437"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.434" endtime="20210205 17:12:20.437"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.433" endtime="20210205 17:12:20.437"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.438" endtime="20210205 17:12:20.439"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.438" endtime="20210205 17:12:20.439"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.441" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.440" endtime="20210205 17:12:20.441"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.471" level="INFO">${idvalue} = [2]</msg>
<status status="PASS" starttime="20210205 17:12:20.441" endtime="20210205 17:12:20.471"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:20.471" level="INFO">${responseid} = 2</msg>
<status status="PASS" starttime="20210205 17:12:20.471" endtime="20210205 17:12:20.471"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.471" endtime="20210205 17:12:20.472"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.472" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.472" endtime="20210205 17:12:20.472"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.439" endtime="20210205 17:12:20.472"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.252" endtime="20210205 17:12:20.472"></status>
</kw>
<kw name="${postid} = 3" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.473" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:20.473" endtime="20210205 17:12:20.474"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:20.629" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/3 
 path_url=/posts/3 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:20.629" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/3 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db9b72b9c0af7ec677725daf8b52dbb961612563140; expires=Sun, 07-Mar-21 22:12:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1610298431', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11b-USacuIw5a/iXAGdNKBvqr/TbMTc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '8141', 'cf-request-id': '0815d9e8e80000c5c8b089a000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=LJyKlXND9asCdtP2swVzSzQqooowgRfC8oWK1kzSVVaMZ6HHD2BQHWMrTfqfJ45U%2BC7Xp2TeBLVxtCQpLt%2BYO1ogz%2BpEi3wmBx8YpZ4IvabBGI1y%2FwnKwU3UHKR%2B"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8ee49a4c5c8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 3,
  "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
  "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
} 
 </msg>
<msg timestamp="20210205 17:12:20.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.474" endtime="20210205 17:12:20.630"></status>
</kw>
<msg timestamp="20210205 17:12:20.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.472" endtime="20210205 17:12:20.630"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.631" endtime="20210205 17:12:20.633"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.631" endtime="20210205 17:12:20.633"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.630" endtime="20210205 17:12:20.633"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.633" endtime="20210205 17:12:20.634"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.633" endtime="20210205 17:12:20.634"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.634" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.634" endtime="20210205 17:12:20.634"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.682" level="INFO">${idvalue} = [3]</msg>
<status status="PASS" starttime="20210205 17:12:20.635" endtime="20210205 17:12:20.682"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:20.683" level="INFO">${responseid} = 3</msg>
<status status="PASS" starttime="20210205 17:12:20.683" endtime="20210205 17:12:20.683"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.683" endtime="20210205 17:12:20.683"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.684" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.683" endtime="20210205 17:12:20.684"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.634" endtime="20210205 17:12:20.684"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.472" endtime="20210205 17:12:20.684"></status>
</kw>
<kw name="${postid} = 4" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.685" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:20.684" endtime="20210205 17:12:20.685"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:20.737" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/4 
 path_url=/posts/4 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:20.737" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/4 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=deb371ad02d8e8b1d80c885de0b59c0e31612563140; expires=Sun, 07-Mar-21 22:12:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1610298431', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10e-HqG77o1RAmatkSwR36f4+Io6g1E"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23072', 'cf-request-id': '0815d9e95200003df8a7bcc000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=qDtkMuzUpTMe9cItYwRy%2FDPH3Qla6r7Y%2FqE%2BFlXbvovVPaCHVsUyW8CwWO0kuKwWcWnXcx9YpAgHkox%2FNzH780J8qqSGdiIhX5ESNCLZEDoJ5CHD8%2FIW50CFSTW3"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8eee9253df8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 4,
  "title": "eum et est occaecati",
  "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
} 
 </msg>
<msg timestamp="20210205 17:12:20.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.685" endtime="20210205 17:12:20.738"></status>
</kw>
<msg timestamp="20210205 17:12:20.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.684" endtime="20210205 17:12:20.738"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.741" endtime="20210205 17:12:20.744"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.739" endtime="20210205 17:12:20.744"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.739" endtime="20210205 17:12:20.744"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.745" endtime="20210205 17:12:20.745"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.744" endtime="20210205 17:12:20.745"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.746" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.746" endtime="20210205 17:12:20.746"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.774" level="INFO">${idvalue} = [4]</msg>
<status status="PASS" starttime="20210205 17:12:20.746" endtime="20210205 17:12:20.774"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:20.774" level="INFO">${responseid} = 4</msg>
<status status="PASS" starttime="20210205 17:12:20.774" endtime="20210205 17:12:20.774"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.774" endtime="20210205 17:12:20.774"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.775" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.775" endtime="20210205 17:12:20.775"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.745" endtime="20210205 17:12:20.775"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.684" endtime="20210205 17:12:20.775"></status>
</kw>
<kw name="${postid} = 5" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.776" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:20.775" endtime="20210205 17:12:20.776"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:20.911" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/5 
 path_url=/posts/5 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:20.911" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/5 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=ddb3e5208808f59e22bbc93734eb571941612563141; expires=Sun, 07-Mar-21 22:12:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612523149', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-IivojO0CtPZmcMK0iydTbsfG7Wc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '8142', 'cf-request-id': '0815d9e9ff00003deb06925000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=3U5BzpFk5S%2BFVP%2Fdx9IZpAKpA7m%2FkEPZu349mCd9h1K2MbQ4oyT9Xq1sIWCAnT%2B5dINf%2Fx14HCxARSkQPYy0kBpUBjtHFwu7XN97%2FYu5q3qwDs7Zu5bNTlVd3ruO"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8effea83deb-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 5,
  "title": "nesciunt quas odio",
  "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
} 
 </msg>
<msg timestamp="20210205 17:12:20.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.776" endtime="20210205 17:12:20.912"></status>
</kw>
<msg timestamp="20210205 17:12:20.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.775" endtime="20210205 17:12:20.912"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.914" endtime="20210205 17:12:20.917"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.913" endtime="20210205 17:12:20.917"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.912" endtime="20210205 17:12:20.918"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.919" endtime="20210205 17:12:20.919"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.918" endtime="20210205 17:12:20.920"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.921" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.921" endtime="20210205 17:12:20.921"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.957" level="INFO">${idvalue} = [5]</msg>
<status status="PASS" starttime="20210205 17:12:20.921" endtime="20210205 17:12:20.957"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:20.958" level="INFO">${responseid} = 5</msg>
<status status="PASS" starttime="20210205 17:12:20.958" endtime="20210205 17:12:20.958"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:20.958" endtime="20210205 17:12:20.958"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:20.958" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:20.958" endtime="20210205 17:12:20.958"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.920" endtime="20210205 17:12:20.959"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.775" endtime="20210205 17:12:20.959"></status>
</kw>
<kw name="${postid} = 6" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:20.959" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:20.959" endtime="20210205 17:12:20.960"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:21.129" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/6 
 path_url=/posts/6 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:21.129" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/6 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2bd5b941f5d83fab4e610b82490040681612563141; expires=Sun, 07-Mar-21 22:12:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612517389', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-kxIuVC3UpKrGIRfIBmsZMsJaaiA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '16771', 'cf-request-id': '0815d9ea6a00003e2827962000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=jCEeP246Apzl%2BFb7rw9Ua7x3vNP8JzxMS96HYDs8Zj3vm8sei2B7VN7%2FydnL6kZlZWfoJOV%2FCCGxPrHbx8Gitun7VHGoeTFKvHhjtDd%2BT3SvQOxj98PLlpyYaIr1"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8f0aa163e28-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 6,
  "title": "dolorem eum magni eos aperiam quia",
  "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
} 
 </msg>
<msg timestamp="20210205 17:12:21.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.960" endtime="20210205 17:12:21.130"></status>
</kw>
<msg timestamp="20210205 17:12:21.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:20.959" endtime="20210205 17:12:21.130"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.133" endtime="20210205 17:12:21.135"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.132" endtime="20210205 17:12:21.135"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.131" endtime="20210205 17:12:21.135"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.136" endtime="20210205 17:12:21.136"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.135" endtime="20210205 17:12:21.136"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.137" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.137" endtime="20210205 17:12:21.137"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.168" level="INFO">${idvalue} = [6]</msg>
<status status="PASS" starttime="20210205 17:12:21.137" endtime="20210205 17:12:21.168"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:21.169" level="INFO">${responseid} = 6</msg>
<status status="PASS" starttime="20210205 17:12:21.169" endtime="20210205 17:12:21.169"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.169" endtime="20210205 17:12:21.169"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.170" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.169" endtime="20210205 17:12:21.170"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.136" endtime="20210205 17:12:21.170"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.959" endtime="20210205 17:12:21.170"></status>
</kw>
<kw name="${postid} = 7" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.170" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:21.170" endtime="20210205 17:12:21.171"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:21.218" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/7 
 path_url=/posts/7 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:21.218" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/7 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc335bc6997ddcc1b35d3c19f363ab36e1612563141; expires=Sun, 07-Mar-21 22:12:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612523209', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-wrK4SLERwov0EbpkNAKTHsvGWBs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '8141', 'cf-request-id': '0815d9eb380000e744e305c000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=XWpniIKT8Y6e8JqbxER4St5AtixQZUJj4h%2F47Jxi6z7WBNgCwL6nzWGZYs4VY%2Fa0GdLsRRmF2sXEjXN763NZ3ZPuJLklbxOyefTFlc%2F9u60UumxqZbG0Fk%2F1QyWy"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8f1fceae744-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 7,
  "title": "magnam facilis autem",
  "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
} 
 </msg>
<msg timestamp="20210205 17:12:21.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.171" endtime="20210205 17:12:21.219"></status>
</kw>
<msg timestamp="20210205 17:12:21.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.170" endtime="20210205 17:12:21.219"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.222" endtime="20210205 17:12:21.224"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.221" endtime="20210205 17:12:21.224"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.220" endtime="20210205 17:12:21.224"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.225" endtime="20210205 17:12:21.225"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.224" endtime="20210205 17:12:21.225"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.226" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.226" endtime="20210205 17:12:21.226"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.255" level="INFO">${idvalue} = [7]</msg>
<status status="PASS" starttime="20210205 17:12:21.226" endtime="20210205 17:12:21.255"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:21.256" level="INFO">${responseid} = 7</msg>
<status status="PASS" starttime="20210205 17:12:21.255" endtime="20210205 17:12:21.256"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.256" endtime="20210205 17:12:21.256"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.257" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.256" endtime="20210205 17:12:21.257"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.225" endtime="20210205 17:12:21.257"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.170" endtime="20210205 17:12:21.257"></status>
</kw>
<kw name="${postid} = 8" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.258" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:21.258" endtime="20210205 17:12:21.258"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:21.426" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/8 
 path_url=/posts/8 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:21.426" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/8 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de269d228100362a9fe2cc05137fd6b021612563141; expires=Sun, 07-Mar-21 22:12:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '999', 'x-ratelimit-reset': '1612211807', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"104-Yd+P3vUk4gJ20H3qrEyZIqbProI"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23073', 'cf-request-id': '0815d9ec0100000ce187831000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=eJQTizUsST%2FLqf0Xr%2FYCcfB2DZcm%2BHigDa1uefOxl6NnWoCyDCi7jjIyKE%2BWB9RmVaTBhjxuQTnSeP%2FyD3mD5Cz3uUFt58%2FSSExbhBfS14UQSu75nie2SZnIvPs%2F"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8f33e830ce1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 8,
  "title": "dolorem dolore est ipsam",
  "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
} 
 </msg>
<msg timestamp="20210205 17:12:21.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.259" endtime="20210205 17:12:21.427"></status>
</kw>
<msg timestamp="20210205 17:12:21.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.257" endtime="20210205 17:12:21.427"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.430" endtime="20210205 17:12:21.433"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.429" endtime="20210205 17:12:21.433"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.428" endtime="20210205 17:12:21.433"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.434" endtime="20210205 17:12:21.435"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.433" endtime="20210205 17:12:21.435"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.435" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.435" endtime="20210205 17:12:21.435"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.464" level="INFO">${idvalue} = [8]</msg>
<status status="PASS" starttime="20210205 17:12:21.436" endtime="20210205 17:12:21.464"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:21.465" level="INFO">${responseid} = 8</msg>
<status status="PASS" starttime="20210205 17:12:21.464" endtime="20210205 17:12:21.465"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.465" endtime="20210205 17:12:21.465"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.465" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.465" endtime="20210205 17:12:21.465"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.435" endtime="20210205 17:12:21.465"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.257" endtime="20210205 17:12:21.465"></status>
</kw>
<kw name="${postid} = 9" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.466" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:21.466" endtime="20210205 17:12:21.466"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:21.518" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/9 
 path_url=/posts/9 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:21.519" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/9 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de06d6d36b21d72b589d3953f7a0604001612563141; expires=Sun, 07-Mar-21 22:12:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '991', 'X-Ratelimit-Reset': '1611625595', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-mPDZopc4bkupX1TAvUQz4Bpbp5s"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '24973', 'cf-request-id': '0815d9ec6000003e042e3ba000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=AfeqqkD40qAoDCc2J71oETvz49LGaKsFHiJRhvU5KZGc7cVFV%2Flzi9eTt8uT6NDelHM%2By7kIhmajUdp4HDR8n08KyS%2FqM1txknrMWxGl%2FZpIgY%2FTCfZAk%2FlJNAls"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8f3cde93e04-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 9,
  "title": "nesciunt iure omnis dolorem tempora et accusantium",
  "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
} 
 </msg>
<msg timestamp="20210205 17:12:21.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.467" endtime="20210205 17:12:21.519"></status>
</kw>
<msg timestamp="20210205 17:12:21.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.466" endtime="20210205 17:12:21.520"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.522" endtime="20210205 17:12:21.525"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.521" endtime="20210205 17:12:21.525"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.520" endtime="20210205 17:12:21.525"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.526" endtime="20210205 17:12:21.526"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.525" endtime="20210205 17:12:21.527"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.527" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.527" endtime="20210205 17:12:21.527"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.566" level="INFO">${idvalue} = [9]</msg>
<status status="PASS" starttime="20210205 17:12:21.528" endtime="20210205 17:12:21.566"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:21.566" level="INFO">${responseid} = 9</msg>
<status status="PASS" starttime="20210205 17:12:21.566" endtime="20210205 17:12:21.566"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.566" endtime="20210205 17:12:21.567"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.567" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.567" endtime="20210205 17:12:21.567"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.527" endtime="20210205 17:12:21.567"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.466" endtime="20210205 17:12:21.567"></status>
</kw>
<kw name="${postid} = 10" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.568" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:21.568" endtime="20210205 17:12:21.568"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:21.735" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/10 
 path_url=/posts/10 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:21.735" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/10 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc007366dbd723f989bbb7afcd351105b1612563141; expires=Sun, 07-Mar-21 22:12:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '993', 'X-Ratelimit-Reset': '1612521769', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d9-iWGkhNuCVU3QUpWXcSkr72qX524"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '8141', 'cf-request-id': '0815d9ed2800000ce5742e6000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=xW0q33RwypvD3yvy1JSy6OIfsRZ47dYCDZYvZ%2FSiDtbrsvbeXoR4g2EXjH%2BPsg7RcyGrAZRpyFjIkGZFPcRnHu%2FUMfw9POHpDUcQuo6e88RYOX6%2FfkWqcQcobQZN"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8f50cdb0ce5-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 10,
  "title": "optio molestias id quia eum",
  "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
} 
 </msg>
<msg timestamp="20210205 17:12:21.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.568" endtime="20210205 17:12:21.736"></status>
</kw>
<msg timestamp="20210205 17:12:21.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.567" endtime="20210205 17:12:21.736"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.739" endtime="20210205 17:12:21.742"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.737" endtime="20210205 17:12:21.742"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.736" endtime="20210205 17:12:21.743"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.744" endtime="20210205 17:12:21.745"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.743" endtime="20210205 17:12:21.745"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.746" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.746" endtime="20210205 17:12:21.746"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.776" level="INFO">${idvalue} = [10]</msg>
<status status="PASS" starttime="20210205 17:12:21.746" endtime="20210205 17:12:21.776"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:21.776" level="INFO">${responseid} = 10</msg>
<status status="PASS" starttime="20210205 17:12:21.776" endtime="20210205 17:12:21.776"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.776" endtime="20210205 17:12:21.777"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.777" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.777" endtime="20210205 17:12:21.777"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.745" endtime="20210205 17:12:21.777"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.567" endtime="20210205 17:12:21.777"></status>
</kw>
<kw name="${postid} = 11" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.778" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:21.778" endtime="20210205 17:12:21.779"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:21.924" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/11 
 path_url=/posts/11 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:21.924" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/11 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d471a90fcc570cff9c212f1944186869c1612563142; expires=Sun, 07-Mar-21 22:12:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '936', 'X-Ratelimit-Reset': '1610900006', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-uIZ0aYbaIRT3eH//+EjRpRGAwRw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '24973', 'cf-request-id': '0815d9ed980000e6b86e343000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=UjwL0BRCqDwKJyr%2FIawT7f5poke4evhIh6BoUgz3Fl90LHjPAOKiHm9j8TRAvpx4AaLbZVxtcSyrCNk96ZzVaiTuK%2BXoGiVP9k%2FxrgOS1B4m6TrCxYl4kc5JxI%2BT"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8f5bce6e6b8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 11,
  "title": "et ea vero quia laudantium autem",
  "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
} 
 </msg>
<msg timestamp="20210205 17:12:21.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.779" endtime="20210205 17:12:21.925"></status>
</kw>
<msg timestamp="20210205 17:12:21.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.778" endtime="20210205 17:12:21.925"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.928" endtime="20210205 17:12:21.930"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.926" endtime="20210205 17:12:21.930"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.925" endtime="20210205 17:12:21.930"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.931" endtime="20210205 17:12:21.931"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.930" endtime="20210205 17:12:21.932"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.933" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.932" endtime="20210205 17:12:21.933"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.960" level="INFO">${idvalue} = [11]</msg>
<status status="PASS" starttime="20210205 17:12:21.933" endtime="20210205 17:12:21.960"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:21.961" level="INFO">${responseid} = 11</msg>
<status status="PASS" starttime="20210205 17:12:21.961" endtime="20210205 17:12:21.961"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:21.961" endtime="20210205 17:12:21.961"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:21.962" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:21.962" endtime="20210205 17:12:21.962"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.932" endtime="20210205 17:12:21.962"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.777" endtime="20210205 17:12:21.962"></status>
</kw>
<kw name="${postid} = 12" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:21.963" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:21.963" endtime="20210205 17:12:21.963"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:22.016" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/12 
 path_url=/posts/12 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:22.016" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/12 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d490615bc9a21f89e589228fd70733a351612563142; expires=Sun, 07-Mar-21 22:12:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612515589', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fa-Kb6iNtCKEzLRQ8QyZ5zRPuKRNgs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '18543', 'cf-request-id': '0815d9ee58000015d70690d000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=2EYqx%2BjkHAHSMyftSIi1oh%2BUSHB0PYB4OznqSim2Lhj%2Fh3u6mWoPWuATbv2oEqlkbd%2B%2Fre1vHPK48Y7xLsANvjnjgouIb%2F%2FFEXnq3Ma2A62FnjOjWH2HyeUGA1FD"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8f6fbc715d7-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 12,
  "title": "in quibusdam tempore odit est dolorem",
  "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
} 
 </msg>
<msg timestamp="20210205 17:12:22.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.964" endtime="20210205 17:12:22.017"></status>
</kw>
<msg timestamp="20210205 17:12:22.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:21.962" endtime="20210205 17:12:22.017"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.019" endtime="20210205 17:12:22.021"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.019" endtime="20210205 17:12:22.021"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.018" endtime="20210205 17:12:22.021"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.022" endtime="20210205 17:12:22.022"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.022" endtime="20210205 17:12:22.023"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.023" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.023" endtime="20210205 17:12:22.023"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.057" level="INFO">${idvalue} = [12]</msg>
<status status="PASS" starttime="20210205 17:12:22.024" endtime="20210205 17:12:22.057"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:22.058" level="INFO">${responseid} = 12</msg>
<status status="PASS" starttime="20210205 17:12:22.058" endtime="20210205 17:12:22.058"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.058" endtime="20210205 17:12:22.058"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.059" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.059" endtime="20210205 17:12:22.059"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.023" endtime="20210205 17:12:22.059"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:21.962" endtime="20210205 17:12:22.059"></status>
</kw>
<kw name="${postid} = 13" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.060" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:22.060" endtime="20210205 17:12:22.061"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:22.213" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/13 
 path_url=/posts/13 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:22.213" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/13 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8d84c6a40379f2eb001c6172266c7a491612563142; expires=Sun, 07-Mar-21 22:12:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '991', 'X-Ratelimit-Reset': '1611532392', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"150-jmPMxXQIZLCEEVRunU0Zippecws"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '24972', 'cf-request-id': '0815d9ef1c00003e1cc8387000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=i1bsxo0R8kzMEWOXBC2SUTUxyS5WoQ96%2BRSE7olfAOItvt9hoLmmiK3fMaJPO8ohZl%2BWEyOkbYHavD2AT%2B1GEiz7P79e5d2MwkjANYxM0JkQZHWskjszjggOSGFi"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8f82e2f3e1c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 13,
  "title": "dolorum ut in voluptas mollitia et saepe quo animi",
  "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
} 
 </msg>
<msg timestamp="20210205 17:12:22.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.061" endtime="20210205 17:12:22.214"></status>
</kw>
<msg timestamp="20210205 17:12:22.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.059" endtime="20210205 17:12:22.214"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.217" endtime="20210205 17:12:22.219"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.216" endtime="20210205 17:12:22.220"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.215" endtime="20210205 17:12:22.220"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.221" endtime="20210205 17:12:22.222"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.220" endtime="20210205 17:12:22.222"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.224" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.223" endtime="20210205 17:12:22.224"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.254" level="INFO">${idvalue} = [13]</msg>
<status status="PASS" starttime="20210205 17:12:22.224" endtime="20210205 17:12:22.254"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:22.254" level="INFO">${responseid} = 13</msg>
<status status="PASS" starttime="20210205 17:12:22.254" endtime="20210205 17:12:22.254"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.255" endtime="20210205 17:12:22.255"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.255" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.255" endtime="20210205 17:12:22.255"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.222" endtime="20210205 17:12:22.255"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.059" endtime="20210205 17:12:22.255"></status>
</kw>
<kw name="${postid} = 14" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.256" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:22.256" endtime="20210205 17:12:22.256"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:22.323" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/14 
 path_url=/posts/14 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:22.323" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/14 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d6ac3c09e7ce1e4b434609ad3107b93b81612563142; expires=Sun, 07-Mar-21 22:12:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612525730', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e6-a5waiJMRxEr5D9vgRbpDZ2ofS4U"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '8141', 'cf-request-id': '0815d9ef8a0000e744d483f000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=NgLZes53SZhy9hhjPe2ODV41c%2B12pQqhvVfyXAJ4wtwEYDidxgHeY40nopfY2v3K5UZy8X4MHVF%2BQmoREurCpGXYclTiCbBRK5XWNnOYDEwFAo9oVrz36cWXd6Tz"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8f8d81de744-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 14,
  "title": "voluptatem eligendi optio",
  "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
} 
 </msg>
<msg timestamp="20210205 17:12:22.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.256" endtime="20210205 17:12:22.324"></status>
</kw>
<msg timestamp="20210205 17:12:22.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.255" endtime="20210205 17:12:22.324"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.327" endtime="20210205 17:12:22.330"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.326" endtime="20210205 17:12:22.330"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.325" endtime="20210205 17:12:22.330"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.332" endtime="20210205 17:12:22.333"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.331" endtime="20210205 17:12:22.333"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.334" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.334" endtime="20210205 17:12:22.334"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.361" level="INFO">${idvalue} = [14]</msg>
<status status="PASS" starttime="20210205 17:12:22.334" endtime="20210205 17:12:22.361"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:22.362" level="INFO">${responseid} = 14</msg>
<status status="PASS" starttime="20210205 17:12:22.362" endtime="20210205 17:12:22.362"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.362" endtime="20210205 17:12:22.363"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.363" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.363" endtime="20210205 17:12:22.363"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.333" endtime="20210205 17:12:22.363"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.255" endtime="20210205 17:12:22.363"></status>
</kw>
<kw name="${postid} = 15" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.364" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:22.364" endtime="20210205 17:12:22.364"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:22.508" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/15 
 path_url=/posts/15 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:22.508" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/15 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5816a2c132ec3051888a2fb9ffb175c21612563142; expires=Sun, 07-Mar-21 22:12:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1610900126', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"eb-g42jCAr46rCEFHt8pUWS/uASMcA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '24975', 'cf-request-id': '0815d9f0400000e83d8a302000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=kPlcsBSa0yJGbFyMqJu%2FSacuGrlh8DGjVj8Pw3U9QWWOOx1aLVoUXjadCH2hLjSyTptiIfN%2FfqJ%2B8qBlW0tjyp4EPI6%2BUvDAdbLh96xOktkG%2B16WpLJVyzFM7YLA"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8f9f932e83d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 15,
  "title": "eveniet quod temporibus",
  "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
} 
 </msg>
<msg timestamp="20210205 17:12:22.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.364" endtime="20210205 17:12:22.508"></status>
</kw>
<msg timestamp="20210205 17:12:22.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.363" endtime="20210205 17:12:22.509"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.511" endtime="20210205 17:12:22.513"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.510" endtime="20210205 17:12:22.513"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.509" endtime="20210205 17:12:22.513"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.514" endtime="20210205 17:12:22.515"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.513" endtime="20210205 17:12:22.515"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.516" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.516" endtime="20210205 17:12:22.516"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.550" level="INFO">${idvalue} = [15]</msg>
<status status="PASS" starttime="20210205 17:12:22.516" endtime="20210205 17:12:22.550"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:22.551" level="INFO">${responseid} = 15</msg>
<status status="PASS" starttime="20210205 17:12:22.551" endtime="20210205 17:12:22.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.551" endtime="20210205 17:12:22.551"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.552" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.551" endtime="20210205 17:12:22.552"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.515" endtime="20210205 17:12:22.552"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.363" endtime="20210205 17:12:22.552"></status>
</kw>
<kw name="${postid} = 16" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.553" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:22.552" endtime="20210205 17:12:22.553"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:22.600" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/16 
 path_url=/posts/16 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:22.600" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/16 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df7badad1b61cb91762427c1769ae6ada1612563142; expires=Sun, 07-Mar-21 22:12:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612523209', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"139-Ry5LVphQL/+x/ADbFfrczHgqqDs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '8141', 'cf-request-id': '0815d9f09e0000e84d022dc000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=AizMWQ%2F9q7%2Fi3QrEVcluqLTmTFPfvNIkX1p5x3pUwPpsnBTG9PnVzCJDKhrHatvf63R9zBuCFxdstvF9rJ2uEidesy%2BfN6ErbmWRe15Tw91kDMLAAboFhf%2FGsi6v"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8fa9bc4e84d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 16,
  "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
  "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
} 
 </msg>
<msg timestamp="20210205 17:12:22.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.553" endtime="20210205 17:12:22.600"></status>
</kw>
<msg timestamp="20210205 17:12:22.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.552" endtime="20210205 17:12:22.601"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.602" endtime="20210205 17:12:22.604"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.601" endtime="20210205 17:12:22.604"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.601" endtime="20210205 17:12:22.604"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.605" endtime="20210205 17:12:22.605"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.604" endtime="20210205 17:12:22.605"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.606" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.606" endtime="20210205 17:12:22.606"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.638" level="INFO">${idvalue} = [16]</msg>
<status status="PASS" starttime="20210205 17:12:22.606" endtime="20210205 17:12:22.638"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:22.638" level="INFO">${responseid} = 16</msg>
<status status="PASS" starttime="20210205 17:12:22.638" endtime="20210205 17:12:22.638"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.639" endtime="20210205 17:12:22.639"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.639" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.639" endtime="20210205 17:12:22.639"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.606" endtime="20210205 17:12:22.639"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.552" endtime="20210205 17:12:22.639"></status>
</kw>
<kw name="${postid} = 17" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.640" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:22.640" endtime="20210205 17:12:22.640"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:22.764" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/17 
 path_url=/posts/17 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:22.764" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/17 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da10e0c9f3ab98c4a0606f3212ec5ad8d1612563142; expires=Sun, 07-Mar-21 22:12:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '989', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-Y7y9zgdEq0WndoXZmQZBsN4+z14"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '24972', 'cf-request-id': '0815d9f140000015971e37e000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=m7I3YtF8oK2DlAB%2F5B0WJDXFopz5E86AqpM9iJrlLe7CVRiWmZpYBnoglxq164T6xlITZde2766Q25G6kh3%2Bk8ORyFGFiEhpFFIFhLmmlpAh2ZwY4MlyP%2BUTnIWS"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8fb9a4d1597-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 17,
  "title": "fugit voluptas sed molestias voluptatem provident",
  "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
} 
 </msg>
<msg timestamp="20210205 17:12:22.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.640" endtime="20210205 17:12:22.765"></status>
</kw>
<msg timestamp="20210205 17:12:22.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.639" endtime="20210205 17:12:22.765"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.768" endtime="20210205 17:12:22.770"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.767" endtime="20210205 17:12:22.770"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.766" endtime="20210205 17:12:22.770"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.771" endtime="20210205 17:12:22.771"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.770" endtime="20210205 17:12:22.771"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.772" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.771" endtime="20210205 17:12:22.772"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.802" level="INFO">${idvalue} = [17]</msg>
<status status="PASS" starttime="20210205 17:12:22.772" endtime="20210205 17:12:22.802"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:22.803" level="INFO">${responseid} = 17</msg>
<status status="PASS" starttime="20210205 17:12:22.803" endtime="20210205 17:12:22.803"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:22.803" endtime="20210205 17:12:22.803"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:22.803" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:22.803" endtime="20210205 17:12:22.803"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.771" endtime="20210205 17:12:22.804"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.639" endtime="20210205 17:12:22.804"></status>
</kw>
<kw name="${postid} = 18" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:22.804" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:22.804" endtime="20210205 17:12:22.805"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:23.114" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/18 
 path_url=/posts/18 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:23.115" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/18 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd5ce077581e9222aae6ba561405dab9a1612563143; expires=Sun, 07-Mar-21 22:12:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d6-gBDS8x9CZAqgdjWUPWV0jWIQ7ps"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23075', 'cf-request-id': '0815d9f1a800003e0f87819000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Nj5t8RGu99pUvHLwvoQTL86hjUD2ZVvcaz5Yz9PgPmpfnjmEbcjxaBnpxEE08OyGL%2Beo6wYb8l2bl9Nn23rYwIy8GsoBAFftB3Kyan3c2caqgyZZpGr21vSbmP6f"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8fc3a3f3e0f-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 18,
  "title": "voluptate et itaque vero tempora molestiae",
  "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
} 
 </msg>
<msg timestamp="20210205 17:12:23.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.805" endtime="20210205 17:12:23.115"></status>
</kw>
<msg timestamp="20210205 17:12:23.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:22.804" endtime="20210205 17:12:23.116"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.118" endtime="20210205 17:12:23.121"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.117" endtime="20210205 17:12:23.122"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.116" endtime="20210205 17:12:23.122"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.124" endtime="20210205 17:12:23.126"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.123" endtime="20210205 17:12:23.126"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.128" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.128" endtime="20210205 17:12:23.128"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.161" level="INFO">${idvalue} = [18]</msg>
<status status="PASS" starttime="20210205 17:12:23.128" endtime="20210205 17:12:23.161"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:23.161" level="INFO">${responseid} = 18</msg>
<status status="PASS" starttime="20210205 17:12:23.161" endtime="20210205 17:12:23.161"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.161" endtime="20210205 17:12:23.162"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.162" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.162" endtime="20210205 17:12:23.162"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.127" endtime="20210205 17:12:23.162"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:22.804" endtime="20210205 17:12:23.162"></status>
</kw>
<kw name="${postid} = 19" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.163" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:23.163" endtime="20210205 17:12:23.163"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:23.306" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/19 
 path_url=/posts/19 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:23.306" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/19 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=daad02c8dee00108eafce1e8993dbb47c1612563143; expires=Sun, 07-Mar-21 22:12:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '987', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f5-6MONAVAj01S9sHCgIVhhm8kT8bk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23075', 'cf-request-id': '0815d9f36000000cc9749f1000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=vuovfVOQ4MAAdzD%2FwfNTBWQkCjE2bE%2Bup7BqcHdR9ktIQi0xfoHsvOBehuI3OATZmxFOMCVqxWF3AHkOKLjFAPlcEXh7ElJfRs4VzyBDO69gkmY5eUT5JPq8yTqK"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff8ff09530cc9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 19,
  "title": "adipisci placeat illum aut reiciendis qui",
  "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
} 
 </msg>
<msg timestamp="20210205 17:12:23.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.163" endtime="20210205 17:12:23.307"></status>
</kw>
<msg timestamp="20210205 17:12:23.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.162" endtime="20210205 17:12:23.307"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.309" endtime="20210205 17:12:23.311"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.308" endtime="20210205 17:12:23.311"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.307" endtime="20210205 17:12:23.312"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.313" endtime="20210205 17:12:23.314"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.312" endtime="20210205 17:12:23.314"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.315" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.315" endtime="20210205 17:12:23.315"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.349" level="INFO">${idvalue} = [19]</msg>
<status status="PASS" starttime="20210205 17:12:23.315" endtime="20210205 17:12:23.349"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:23.350" level="INFO">${responseid} = 19</msg>
<status status="PASS" starttime="20210205 17:12:23.350" endtime="20210205 17:12:23.350"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.350" endtime="20210205 17:12:23.351"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.351" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.351" endtime="20210205 17:12:23.351"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.314" endtime="20210205 17:12:23.351"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.162" endtime="20210205 17:12:23.351"></status>
</kw>
<kw name="${postid} = 20" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.352" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:23.352" endtime="20210205 17:12:23.353"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:23.402" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/20 
 path_url=/posts/20 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:23.402" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/20 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1320ecf556becebaeba6d161b23e1b201612563143; expires=Sun, 07-Mar-21 22:12:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611843621', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-B2D4HCXMgAW5NzE2tV3HVA4JP6M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23075', 'cf-request-id': '0815d9f3bd0000157b849a3000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=K6wnW3mYVqNuLPvCySbtxRRh7S45f0O%2B%2BHc0J0b4Tfhug9AP8WnGAlxbwi621BEYgdsrJmVHCHVnww0Y2TZ40BeWb3mn5TirMyuryI%2FPmMR1oiL5gy4SCG9KRLZp"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff8ff9c37157b-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 20,
  "title": "doloribus ad provident suscipit at",
  "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
} 
 </msg>
<msg timestamp="20210205 17:12:23.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.353" endtime="20210205 17:12:23.402"></status>
</kw>
<msg timestamp="20210205 17:12:23.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.351" endtime="20210205 17:12:23.403"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.404" endtime="20210205 17:12:23.406"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.403" endtime="20210205 17:12:23.406"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.403" endtime="20210205 17:12:23.406"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.407" endtime="20210205 17:12:23.407"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.406" endtime="20210205 17:12:23.408"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.409" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.408" endtime="20210205 17:12:23.409"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.442" level="INFO">${idvalue} = [20]</msg>
<status status="PASS" starttime="20210205 17:12:23.409" endtime="20210205 17:12:23.442"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:23.443" level="INFO">${responseid} = 20</msg>
<status status="PASS" starttime="20210205 17:12:23.442" endtime="20210205 17:12:23.443"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.443" endtime="20210205 17:12:23.443"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.443" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.443" endtime="20210205 17:12:23.443"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.408" endtime="20210205 17:12:23.444"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.351" endtime="20210205 17:12:23.444"></status>
</kw>
<kw name="${postid} = 21" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.444" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:23.444" endtime="20210205 17:12:23.445"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:23.585" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/21 
 path_url=/posts/21 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:23.585" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/21 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d15c98e76a732c019446e1f63166033821612563143; expires=Sun, 07-Mar-21 22:12:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612546312', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"117-mvqE9pMkp/BxthnOAO6lQoihz2M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '16870', 'cf-request-id': '0815d9f4650000e6c0bb03b000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ZS%2Ft%2Bpj4U%2BayOwDNFux42ejduecuY4MeOrvZ2iUF2octtWkREtOY3C9IRFWM8LQQaKIr8LAmM3%2Bq3fqGCDDIcDhz%2BJCxf2jq9lBh9AlaBklqEAO5CdWpLd%2BgCJ4a"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff900acf2e6c0-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 21,
  "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
  "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
} 
 </msg>
<msg timestamp="20210205 17:12:23.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.445" endtime="20210205 17:12:23.586"></status>
</kw>
<msg timestamp="20210205 17:12:23.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.444" endtime="20210205 17:12:23.586"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.587" endtime="20210205 17:12:23.589"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.587" endtime="20210205 17:12:23.589"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.586" endtime="20210205 17:12:23.589"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.590" endtime="20210205 17:12:23.590"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.589" endtime="20210205 17:12:23.590"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.591" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.591" endtime="20210205 17:12:23.591"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.627" level="INFO">${idvalue} = [21]</msg>
<status status="PASS" starttime="20210205 17:12:23.591" endtime="20210205 17:12:23.627"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:23.628" level="INFO">${responseid} = 21</msg>
<status status="PASS" starttime="20210205 17:12:23.627" endtime="20210205 17:12:23.628"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.628" endtime="20210205 17:12:23.629"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.629" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.629" endtime="20210205 17:12:23.629"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.591" endtime="20210205 17:12:23.629"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.444" endtime="20210205 17:12:23.629"></status>
</kw>
<kw name="${postid} = 22" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.631" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:23.630" endtime="20210205 17:12:23.631"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:23.790" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/22 
 path_url=/posts/22 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:23.791" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/22 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d08080daa83e734c065cda28dedda7e4f1612563143; expires=Sun, 07-Mar-21 22:12:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612523209', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e6-PXw6heQCz2Yay/FrkPvuks+op8Y"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '8141', 'cf-request-id': '0815d9f4d300003df18aa2a000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=gv%2BonDwWNitloYgawr7Nw1aqR3vpMdsI89mGncsUIfulk16%2BxIYjF7R%2BJYJV6%2B3ZVRq%2FRRQIzdzrMmNYRxX2FVDKQ0Hap5d7Rzl%2BhOJ%2FWJSzy3ZNq9ALdNyb%2FI%2Fc"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9015c723df1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 22,
  "title": "dolor sint quo a velit explicabo quia nam",
  "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
} 
 </msg>
<msg timestamp="20210205 17:12:23.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.631" endtime="20210205 17:12:23.791"></status>
</kw>
<msg timestamp="20210205 17:12:23.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.630" endtime="20210205 17:12:23.791"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.793" endtime="20210205 17:12:23.794"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.792" endtime="20210205 17:12:23.794"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.791" endtime="20210205 17:12:23.795"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.796" endtime="20210205 17:12:23.797"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.795" endtime="20210205 17:12:23.797"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.799" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.798" endtime="20210205 17:12:23.799"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.843" level="INFO">${idvalue} = [22]</msg>
<status status="PASS" starttime="20210205 17:12:23.799" endtime="20210205 17:12:23.843"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:23.843" level="INFO">${responseid} = 22</msg>
<status status="PASS" starttime="20210205 17:12:23.843" endtime="20210205 17:12:23.843"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.843" endtime="20210205 17:12:23.844"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.844" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.844" endtime="20210205 17:12:23.844"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.797" endtime="20210205 17:12:23.844"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.629" endtime="20210205 17:12:23.844"></status>
</kw>
<kw name="${postid} = 23" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.845" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:23.845" endtime="20210205 17:12:23.845"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:23.911" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/23 
 path_url=/posts/23 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:23.911" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/23 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df75e4c8c45a593e9b5363a7fe357ddb41612563144; expires=Sun, 07-Mar-21 22:12:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-2cknVyBv5gWr1s/pxvkFBL7N/38"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23076', 'cf-request-id': '0815d9f5ae00003dec47992000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=kv7E24NVmhUNTyVF%2FY%2BFWUQElbv%2FwsvEC%2Fm5p97jz8UL9pRAF1ivUdoVjQICRw37UU5cMDL040hX%2BqOdMF2y1MjST7GMND1%2Fa3iFQngkKRI%2FYsphpz3AHamEKR2K"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff902ae9f3dec-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 23,
  "title": "maxime id vitae nihil numquam",
  "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
} 
 </msg>
<msg timestamp="20210205 17:12:23.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.845" endtime="20210205 17:12:23.912"></status>
</kw>
<msg timestamp="20210205 17:12:23.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.844" endtime="20210205 17:12:23.912"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.915" endtime="20210205 17:12:23.918"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.914" endtime="20210205 17:12:23.918"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.913" endtime="20210205 17:12:23.918"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.920" endtime="20210205 17:12:23.920"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.918" endtime="20210205 17:12:23.920"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.922" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.921" endtime="20210205 17:12:23.922"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.954" level="INFO">${idvalue} = [23]</msg>
<status status="PASS" starttime="20210205 17:12:23.922" endtime="20210205 17:12:23.954"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:23.955" level="INFO">${responseid} = 23</msg>
<status status="PASS" starttime="20210205 17:12:23.954" endtime="20210205 17:12:23.955"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:23.955" endtime="20210205 17:12:23.955"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:23.955" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:23.955" endtime="20210205 17:12:23.955"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.921" endtime="20210205 17:12:23.955"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.844" endtime="20210205 17:12:23.955"></status>
</kw>
<kw name="${postid} = 24" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:23.956" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:23.956" endtime="20210205 17:12:23.956"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:24.102" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/24 
 path_url=/posts/24 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:24.102" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/24 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d26ec4e12efdf8129c2eecfcf3ad71b2f1612563144; expires=Sun, 07-Mar-21 22:12:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f3-ifVym0pMyH3QE/zD+bJosWWZ/xY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23076', 'cf-request-id': '0815d9f6780000e6f8b8984000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2FqXd0pp6mFafUlvaA7Cu2iOsiRlXLhfeYBkyuyruFCJkP0tSJR03u8aQnzJgtmNrHBh6RSAC9ORfFqDb%2Fbo1AmVEKpKGxAslQgDZmpatd0SlR2JPvQqbOH%2BqLO3E"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff903f9efe6f8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 24,
  "title": "autem hic labore sunt dolores incidunt",
  "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
} 
 </msg>
<msg timestamp="20210205 17:12:24.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.956" endtime="20210205 17:12:24.103"></status>
</kw>
<msg timestamp="20210205 17:12:24.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:23.955" endtime="20210205 17:12:24.103"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.104" endtime="20210205 17:12:24.107"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.104" endtime="20210205 17:12:24.107"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.103" endtime="20210205 17:12:24.107"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.109" endtime="20210205 17:12:24.110"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.108" endtime="20210205 17:12:24.110"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.112" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.111" endtime="20210205 17:12:24.112"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.155" level="INFO">${idvalue} = [24]</msg>
<status status="PASS" starttime="20210205 17:12:24.112" endtime="20210205 17:12:24.155"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:24.155" level="INFO">${responseid} = 24</msg>
<status status="PASS" starttime="20210205 17:12:24.155" endtime="20210205 17:12:24.155"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.155" endtime="20210205 17:12:24.156"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.156" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.156" endtime="20210205 17:12:24.156"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.111" endtime="20210205 17:12:24.156"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:23.955" endtime="20210205 17:12:24.156"></status>
</kw>
<kw name="${postid} = 25" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.157" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:24.157" endtime="20210205 17:12:24.157"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:24.320" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/25 
 path_url=/posts/25 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:24.320" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/25 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d57860be2aa0e07aff88e0a7958159e581612563144; expires=Sun, 07-Mar-21 22:12:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '982', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ed-5nZjsj4lJ1lY/Chj2v9voa/MRVw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23076', 'cf-request-id': '0815d9f6e60000e6fc24383000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ry6cTziylPUM8d%2BApOq6%2FvvGfuk%2BTPSJIOQjrkR14LZxApquKeXjAMeK4tkVDTLm%2BAzHgoLCXAa%2BTPjnhxSzljntmUxRYj5y783UIV1NMWuNnWcgmA7kKvUf90MS"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff904aa47e6fc-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 25,
  "title": "rem alias distinctio quo quis",
  "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
} 
 </msg>
<msg timestamp="20210205 17:12:24.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.157" endtime="20210205 17:12:24.320"></status>
</kw>
<msg timestamp="20210205 17:12:24.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.156" endtime="20210205 17:12:24.321"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.324" endtime="20210205 17:12:24.329"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.322" endtime="20210205 17:12:24.329"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.321" endtime="20210205 17:12:24.329"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.331" endtime="20210205 17:12:24.332"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.329" endtime="20210205 17:12:24.332"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.334" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.333" endtime="20210205 17:12:24.334"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.378" level="INFO">${idvalue} = [25]</msg>
<status status="PASS" starttime="20210205 17:12:24.334" endtime="20210205 17:12:24.378"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:24.379" level="INFO">${responseid} = 25</msg>
<status status="PASS" starttime="20210205 17:12:24.378" endtime="20210205 17:12:24.379"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.379" endtime="20210205 17:12:24.380"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.380" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.380" endtime="20210205 17:12:24.380"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.333" endtime="20210205 17:12:24.381"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.156" endtime="20210205 17:12:24.381"></status>
</kw>
<kw name="${postid} = 26" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.382" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:24.381" endtime="20210205 17:12:24.382"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:24.432" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/26 
 path_url=/posts/26 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:24.433" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/26 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5a22caca071f9321ea40002544f9ab321612563144; expires=Sun, 07-Mar-21 22:12:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"103-nvdlqF1XCHpBd3+QuyEzLJ0DKRU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23076', 'cf-request-id': '0815d9f7c5000015abf7bfd000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=2%2BC7i0XKx9xHTCyGmxuY1tjulZFDPal7tkCrQAv%2F06hRZ%2FZ3G6G95RgA8yL7rl2%2F3Y6dWxv8KhKltCotw562kJTeNTnBI8fxQwmHNkBtI9zWFwsZCWtrxMEcgEqt"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff906087b15ab-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 26,
  "title": "est et quae odit qui non",
  "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
} 
 </msg>
<msg timestamp="20210205 17:12:24.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.382" endtime="20210205 17:12:24.433"></status>
</kw>
<msg timestamp="20210205 17:12:24.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.381" endtime="20210205 17:12:24.433"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.435" endtime="20210205 17:12:24.437"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.434" endtime="20210205 17:12:24.437"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.433" endtime="20210205 17:12:24.437"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.438" endtime="20210205 17:12:24.438"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.437" endtime="20210205 17:12:24.438"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.439" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.439" endtime="20210205 17:12:24.439"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.475" level="INFO">${idvalue} = [26]</msg>
<status status="PASS" starttime="20210205 17:12:24.439" endtime="20210205 17:12:24.475"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:24.476" level="INFO">${responseid} = 26</msg>
<status status="PASS" starttime="20210205 17:12:24.475" endtime="20210205 17:12:24.476"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.476" endtime="20210205 17:12:24.476"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.477" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.477" endtime="20210205 17:12:24.477"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.438" endtime="20210205 17:12:24.477"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.381" endtime="20210205 17:12:24.477"></status>
</kw>
<kw name="${postid} = 27" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.479" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:24.478" endtime="20210205 17:12:24.479"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:24.544" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/27 
 path_url=/posts/27 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:24.545" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/27 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d042e681d8c78aae0666b95a8f079fac41612563144; expires=Sun, 07-Mar-21 22:12:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-qKM2azhXtnWXfnWclKp4KhCN+BA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23076', 'cf-request-id': '0815d9f8270000f005c3b3b000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ZaGCrcVjYEWQmSz3cmCnYj9jbI0u0OdvtE4At3KmUxzb6fn51R1tDYQr6NxApFEaukrQY0keVRMfNBEBra3kNevwmTuYTUM7TYResu9YmCBMGVbfqxJ%2FHT8FGXKW"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff906a9f0f005-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 27,
  "title": "quasi id et eos tenetur aut quo autem",
  "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
} 
 </msg>
<msg timestamp="20210205 17:12:24.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.479" endtime="20210205 17:12:24.545"></status>
</kw>
<msg timestamp="20210205 17:12:24.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.477" endtime="20210205 17:12:24.546"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.548" endtime="20210205 17:12:24.551"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.547" endtime="20210205 17:12:24.551"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.546" endtime="20210205 17:12:24.551"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.553" endtime="20210205 17:12:24.553"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.552" endtime="20210205 17:12:24.554"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.554" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.554" endtime="20210205 17:12:24.554"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.589" level="INFO">${idvalue} = [27]</msg>
<status status="PASS" starttime="20210205 17:12:24.555" endtime="20210205 17:12:24.589"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:24.590" level="INFO">${responseid} = 27</msg>
<status status="PASS" starttime="20210205 17:12:24.589" endtime="20210205 17:12:24.590"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.590" endtime="20210205 17:12:24.590"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.590" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.590" endtime="20210205 17:12:24.590"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.554" endtime="20210205 17:12:24.591"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.477" endtime="20210205 17:12:24.591"></status>
</kw>
<kw name="${postid} = 28" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.591" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:24.591" endtime="20210205 17:12:24.592"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:24.638" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/28 
 path_url=/posts/28 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:24.638" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/28 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d128ecee6e821fcfd6b48551c48f0fc341612563144; expires=Sun, 07-Mar-21 22:12:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f9-AEZ+sXaihdyQslUCCBcxh7QHSIc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23076', 'cf-request-id': '0815d9f8950000158b2919e000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=yvlpnnvi5Jlxkacac5GMGGiMmtaBwRUXPSrrZUiNTLPY0eTG5nSC6j%2FcLBTcdEo6aIkaQ26PBHq%2F2LjZvbGrGziCKBpjCvhBUUoPlaA8o8ofBDMAL09zXLPckltb"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff90758ba158b-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 28,
  "title": "delectus ullam et corporis nulla voluptas sequi",
  "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
} 
 </msg>
<msg timestamp="20210205 17:12:24.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.592" endtime="20210205 17:12:24.638"></status>
</kw>
<msg timestamp="20210205 17:12:24.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.591" endtime="20210205 17:12:24.639"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.640" endtime="20210205 17:12:24.642"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.639" endtime="20210205 17:12:24.642"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.639" endtime="20210205 17:12:24.642"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.643" endtime="20210205 17:12:24.643"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.642" endtime="20210205 17:12:24.643"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.644" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.644" endtime="20210205 17:12:24.644"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.679" level="INFO">${idvalue} = [28]</msg>
<status status="PASS" starttime="20210205 17:12:24.644" endtime="20210205 17:12:24.679"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:24.680" level="INFO">${responseid} = 28</msg>
<status status="PASS" starttime="20210205 17:12:24.679" endtime="20210205 17:12:24.680"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.680" endtime="20210205 17:12:24.681"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.682" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.681" endtime="20210205 17:12:24.682"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.643" endtime="20210205 17:12:24.682"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.591" endtime="20210205 17:12:24.682"></status>
</kw>
<kw name="${postid} = 29" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.683" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:24.683" endtime="20210205 17:12:24.683"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:24.741" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/29 
 path_url=/posts/29 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:24.741" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/29 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dfd6b72954677e23f47a47bd7ee4609eb1612563144; expires=Sun, 07-Mar-21 22:12:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '978', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-s0ld/Dvp7Q01gQ2gs/shmGjHA3Q"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23076', 'cf-request-id': '0815d9f8f10000159f6f052000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=edMArxLclG%2BP2kKJdF8%2BMpfdS9ZvMlSnKvzPdUpi8XBF%2Fc5S%2B6JPoyX%2Foe%2BELBPlX1HZr1gZ8Li5FjFbpjdgnryfSmNfTAcUnLDGBlNJS2cQQyhU%2BmpbK4%2BJvJ%2BZ"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff907ecff159f-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 29,
  "title": "iusto eius quod necessitatibus culpa ea",
  "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
} 
 </msg>
<msg timestamp="20210205 17:12:24.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.683" endtime="20210205 17:12:24.741"></status>
</kw>
<msg timestamp="20210205 17:12:24.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.682" endtime="20210205 17:12:24.741"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.743" endtime="20210205 17:12:24.744"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.742" endtime="20210205 17:12:24.745"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.741" endtime="20210205 17:12:24.745"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.746" endtime="20210205 17:12:24.747"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.745" endtime="20210205 17:12:24.747"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.749" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.748" endtime="20210205 17:12:24.749"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.784" level="INFO">${idvalue} = [29]</msg>
<status status="PASS" starttime="20210205 17:12:24.749" endtime="20210205 17:12:24.784"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:24.785" level="INFO">${responseid} = 29</msg>
<status status="PASS" starttime="20210205 17:12:24.785" endtime="20210205 17:12:24.785"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.785" endtime="20210205 17:12:24.785"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.785" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.785" endtime="20210205 17:12:24.786"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.748" endtime="20210205 17:12:24.786"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.682" endtime="20210205 17:12:24.786"></status>
</kw>
<kw name="${postid} = 30" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.786" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:24.786" endtime="20210205 17:12:24.787"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:24.841" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/30 
 path_url=/posts/30 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:24.841" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/30 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbb65bc275d241a555281fa8a2712a4e51612563145; expires=Sun, 07-Mar-21 22:12:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '991', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-p/fED6+/tICtAVNeMV6EIhtgIes"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23077', 'cf-request-id': '0815d9f95e00003e4b0336f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=myCeqaBqHdYmsXvnnpXMA7EYh20iOj%2FYidFqoxX2ZSYfzxNHQfx1S%2Br93o4LzwWTkf8azWrsG14AapH%2BgpAU8CJJF6VyzoBxnxcSS1XWpSEV%2FBFxUTcFW66zwsSV"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff90899de3e4b-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 30,
  "title": "a quo magni similique perferendis",
  "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
} 
 </msg>
<msg timestamp="20210205 17:12:24.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.787" endtime="20210205 17:12:24.841"></status>
</kw>
<msg timestamp="20210205 17:12:24.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.786" endtime="20210205 17:12:24.842"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.843" endtime="20210205 17:12:24.845"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.843" endtime="20210205 17:12:24.845"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.842" endtime="20210205 17:12:24.845"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.846" endtime="20210205 17:12:24.847"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.845" endtime="20210205 17:12:24.847"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.848" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.848" endtime="20210205 17:12:24.848"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.910" level="INFO">${idvalue} = [30]</msg>
<status status="PASS" starttime="20210205 17:12:24.848" endtime="20210205 17:12:24.910"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:24.910" level="INFO">${responseid} = 30</msg>
<status status="PASS" starttime="20210205 17:12:24.910" endtime="20210205 17:12:24.910"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.910" endtime="20210205 17:12:24.911"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.911" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.911" endtime="20210205 17:12:24.911"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.847" endtime="20210205 17:12:24.911"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.786" endtime="20210205 17:12:24.911"></status>
</kw>
<kw name="${postid} = 31" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.912" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:24.911" endtime="20210205 17:12:24.912"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:24.963" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/31 
 path_url=/posts/31 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:24.963" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/31 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d11939f5114343f25dd592e04b6bb6b891612563145; expires=Sun, 07-Mar-21 22:12:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '992', 'X-Ratelimit-Reset': '1610900126', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"114-fvaKvcE5R6RW/jKcF4ij0mXJXnI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23077', 'cf-request-id': '0815d9f9d900003e4681a4e000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Nxw%2BTu8cI5RwQlekkwBc9waEQPE5H5b%2BAQu3D8%2F8fIYOKQ87c9lwZwS3FZeiEs7xKQj8Jo8tlodM%2FKyK2hLntrxmikXZRbBHJXtn5ZVjl351z57TiUey2rOwej72"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9095f3b3e46-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 31,
  "title": "ullam ut quidem id aut vel consequuntur",
  "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
} 
 </msg>
<msg timestamp="20210205 17:12:24.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.912" endtime="20210205 17:12:24.964"></status>
</kw>
<msg timestamp="20210205 17:12:24.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.911" endtime="20210205 17:12:24.964"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:24.967" endtime="20210205 17:12:24.970"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.966" endtime="20210205 17:12:24.970"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.965" endtime="20210205 17:12:24.970"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:24.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:24.971" endtime="20210205 17:12:24.972"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.970" endtime="20210205 17:12:24.972"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:24.973" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:24.973" endtime="20210205 17:12:24.973"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.006" level="INFO">${idvalue} = [31]</msg>
<status status="PASS" starttime="20210205 17:12:24.974" endtime="20210205 17:12:25.006"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:25.007" level="INFO">${responseid} = 31</msg>
<status status="PASS" starttime="20210205 17:12:25.007" endtime="20210205 17:12:25.007"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.007" endtime="20210205 17:12:25.007"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.008" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.007" endtime="20210205 17:12:25.008"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.972" endtime="20210205 17:12:25.008"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:24.911" endtime="20210205 17:12:25.008"></status>
</kw>
<kw name="${postid} = 32" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.008" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:25.008" endtime="20210205 17:12:25.009"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:25.059" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/32 
 path_url=/posts/32 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:25.059" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/32 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d08aaed7f52cfbe1e920ed9baa7eb6a451612563145; expires=Sun, 07-Mar-21 22:12:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '975', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"118-gU6x6yKuGnLxOVfx4b/csDm80xc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23077', 'cf-request-id': '0815d9fa380000c5f82f32e000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ctvz8NwX1BzPqxZi0YGUYgKxf4ktK3sfeJG5SX5SY4JX4lhWNJItmy4mYrPYS7UQi%2FtBx0SvLudn%2FpXJVzgiIo9kTTZmADuHAzyK6b9iHuQ5aJsdlIfvuuuNUwih"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff909f90dc5f8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 32,
  "title": "doloremque illum aliquid sunt",
  "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
} 
 </msg>
<msg timestamp="20210205 17:12:25.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.009" endtime="20210205 17:12:25.060"></status>
</kw>
<msg timestamp="20210205 17:12:25.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.008" endtime="20210205 17:12:25.060"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.063" endtime="20210205 17:12:25.066"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.061" endtime="20210205 17:12:25.066"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.060" endtime="20210205 17:12:25.066"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.068" endtime="20210205 17:12:25.069"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.067" endtime="20210205 17:12:25.069"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.070" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.070" endtime="20210205 17:12:25.070"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.101" level="INFO">${idvalue} = [32]</msg>
<status status="PASS" starttime="20210205 17:12:25.070" endtime="20210205 17:12:25.101"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:25.101" level="INFO">${responseid} = 32</msg>
<status status="PASS" starttime="20210205 17:12:25.101" endtime="20210205 17:12:25.102"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.102" endtime="20210205 17:12:25.102"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.102" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.102" endtime="20210205 17:12:25.102"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.069" endtime="20210205 17:12:25.102"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.008" endtime="20210205 17:12:25.102"></status>
</kw>
<kw name="${postid} = 33" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.103" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:25.103" endtime="20210205 17:12:25.103"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:25.170" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/33 
 path_url=/posts/33 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:25.170" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/33 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d50a06f18176d4839bff59222b20040831612563145; expires=Sun, 07-Mar-21 22:12:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '988', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e4-eJS5AAgYswVFXcpPGUc/6yS0JGs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23077', 'cf-request-id': '0815d9faa40000f059de8f8000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ZVmE6eVaTEhv42P0%2BNEep1f40lmAKD6laFUJNcUhf54q5eOL6zsGDYpA%2FatugS9wlJ5qw4nBDHJPv%2Bf2esqRUDABPvenUzFzXEQGrMvxFY7vBdFXFwrD3XC7wHAF"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff90aa9aaf059-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 33,
  "title": "qui explicabo molestiae dolorem",
  "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
} 
 </msg>
<msg timestamp="20210205 17:12:25.170" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.104" endtime="20210205 17:12:25.170"></status>
</kw>
<msg timestamp="20210205 17:12:25.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.102" endtime="20210205 17:12:25.171"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.172" endtime="20210205 17:12:25.174"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.171" endtime="20210205 17:12:25.174"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.171" endtime="20210205 17:12:25.174"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.175" endtime="20210205 17:12:25.175"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.174" endtime="20210205 17:12:25.176"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.176" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.176" endtime="20210205 17:12:25.176"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.209" level="INFO">${idvalue} = [33]</msg>
<status status="PASS" starttime="20210205 17:12:25.176" endtime="20210205 17:12:25.209"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:25.209" level="INFO">${responseid} = 33</msg>
<status status="PASS" starttime="20210205 17:12:25.209" endtime="20210205 17:12:25.210"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.210" endtime="20210205 17:12:25.210"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.210" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.210" endtime="20210205 17:12:25.210"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.176" endtime="20210205 17:12:25.210"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.102" endtime="20210205 17:12:25.210"></status>
</kw>
<kw name="${postid} = 34" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.211" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:25.211" endtime="20210205 17:12:25.212"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:25.276" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/34 
 path_url=/posts/34 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:25.277" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/34 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d006166fb73b02b56d6443065b1933c2b1612563145; expires=Sun, 07-Mar-21 22:12:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '973', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"125-Vy2bCExpJwbgL2QLF7SvYE5QZaQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23077', 'cf-request-id': '0815d9fb040000f01103bbb000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=UpPXxGNJP2Z2a7BsCyznq7xe1%2Bzzu5pREq0lkOaNLE%2Bn3iPpcKYPHINhaW4uWk9PbKwqztZfIdZ1tJp831bsB7%2B3jUchZjzDeqZIDAfJbSv2nsSN20DzU7Hm4XbP"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff90b3b72f011-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 34,
  "title": "magnam ut rerum iure",
  "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
} 
 </msg>
<msg timestamp="20210205 17:12:25.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.212" endtime="20210205 17:12:25.277"></status>
</kw>
<msg timestamp="20210205 17:12:25.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.211" endtime="20210205 17:12:25.277"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.279" endtime="20210205 17:12:25.281"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.278" endtime="20210205 17:12:25.281"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.277" endtime="20210205 17:12:25.281"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.282" endtime="20210205 17:12:25.283"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.282" endtime="20210205 17:12:25.283"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.285" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.284" endtime="20210205 17:12:25.285"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.318" level="INFO">${idvalue} = [34]</msg>
<status status="PASS" starttime="20210205 17:12:25.285" endtime="20210205 17:12:25.318"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:25.319" level="INFO">${responseid} = 34</msg>
<status status="PASS" starttime="20210205 17:12:25.319" endtime="20210205 17:12:25.319"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.320" endtime="20210205 17:12:25.320"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.320" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.320" endtime="20210205 17:12:25.320"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.284" endtime="20210205 17:12:25.320"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.210" endtime="20210205 17:12:25.321"></status>
</kw>
<kw name="${postid} = 35" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.322" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:25.321" endtime="20210205 17:12:25.322"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:25.387" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/35 
 path_url=/posts/35 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:25.388" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/35 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dea31ae9ff4203787d4d3ac3c1d64f2c81612563145; expires=Sun, 07-Mar-21 22:12:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611536052', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11b-iEiJpVAW3iKhqKkCM+WpQc2jSXM"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23077', 'cf-request-id': '0815d9fb780000f02177303000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Kkv%2BGrVi4%2BMNh6oHawfneCRF9Ii5FjtSmUN3tcuQotdv70zLz54ygtxa9MIACIVAt9L06qT0aD6bG1%2BUG%2FK2nb9sycqITJOsNUlNKAIwNpEx2G%2BspcvO5XBjL8BN"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff90beb07f021-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 35,
  "title": "id nihil consequatur molestias animi provident",
  "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
} 
 </msg>
<msg timestamp="20210205 17:12:25.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.322" endtime="20210205 17:12:25.388"></status>
</kw>
<msg timestamp="20210205 17:12:25.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.321" endtime="20210205 17:12:25.388"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.390" endtime="20210205 17:12:25.391"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.389" endtime="20210205 17:12:25.391"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.388" endtime="20210205 17:12:25.391"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.392" endtime="20210205 17:12:25.392"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.392" endtime="20210205 17:12:25.393"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.394" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.393" endtime="20210205 17:12:25.394"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.428" level="INFO">${idvalue} = [35]</msg>
<status status="PASS" starttime="20210205 17:12:25.394" endtime="20210205 17:12:25.428"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:25.429" level="INFO">${responseid} = 35</msg>
<status status="PASS" starttime="20210205 17:12:25.429" endtime="20210205 17:12:25.429"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.429" endtime="20210205 17:12:25.429"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.430" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.430" endtime="20210205 17:12:25.430"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.393" endtime="20210205 17:12:25.430"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.321" endtime="20210205 17:12:25.430"></status>
</kw>
<kw name="${postid} = 36" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.432" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:25.431" endtime="20210205 17:12:25.433"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:25.480" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/36 
 path_url=/posts/36 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:25.480" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/36 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de02554f613c63677c588db81f6c8e3611612563145; expires=Sun, 07-Mar-21 22:12:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '971', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"137-0d4vuWkf3JGVhfhGGDlsOUqEBTg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23077', 'cf-request-id': '0815d9fbde00003e3459232000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=1EFMvczdVKuNF09oBbFs8GbGofSOB6yvErqgvWFPwk%2B8%2B%2BWqHNfXU71hdUwBwkhM1mg7AUOBj4jwAzNQBIhSVeDyE3Lh2jU%2FPTt46uhs0r5sWlUHTuuvEhmdXwF0"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff90c9b4a3e34-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 36,
  "title": "fuga nam accusamus voluptas reiciendis itaque",
  "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
} 
 </msg>
<msg timestamp="20210205 17:12:25.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.433" endtime="20210205 17:12:25.481"></status>
</kw>
<msg timestamp="20210205 17:12:25.481" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.430" endtime="20210205 17:12:25.481"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.484" endtime="20210205 17:12:25.486"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.482" endtime="20210205 17:12:25.486"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.481" endtime="20210205 17:12:25.486"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.487" endtime="20210205 17:12:25.487"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.486" endtime="20210205 17:12:25.487"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.488" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.488" endtime="20210205 17:12:25.488"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.522" level="INFO">${idvalue} = [36]</msg>
<status status="PASS" starttime="20210205 17:12:25.488" endtime="20210205 17:12:25.522"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:25.522" level="INFO">${responseid} = 36</msg>
<status status="PASS" starttime="20210205 17:12:25.522" endtime="20210205 17:12:25.522"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.522" endtime="20210205 17:12:25.523"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.523" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.523" endtime="20210205 17:12:25.523"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.487" endtime="20210205 17:12:25.523"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.430" endtime="20210205 17:12:25.523"></status>
</kw>
<kw name="${postid} = 37" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.524" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:25.524" endtime="20210205 17:12:25.525"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:25.575" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/37 
 path_url=/posts/37 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:25.575" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/37 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0ee6658fb9cb3578d3e0a74b35c644021612563145; expires=Sun, 07-Mar-21 22:12:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '969', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10d-xivyKLJTyyTwJlVChjsxbkyN93k"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23077', 'cf-request-id': '0815d9fc3e00003dba4b24c000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=IshzfQafDvNLyMnMy6pTFDMwjh0bE8mA%2FquMzuGcJrs9uiZjXOzHN2nfwH2VqfNM9MUTf%2FhVrY3Et%2Bzu9M03bz5k9qge18z%2BRvqoYFyV%2F%2BffzuRD4f6Uof136Atl"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff90d3a663dba-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 37,
  "title": "provident vel ut sit ratione est",
  "body": "debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nvoluptates omnis consequatur aut enim officiis in quam qui"
} 
 </msg>
<msg timestamp="20210205 17:12:25.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.525" endtime="20210205 17:12:25.575"></status>
</kw>
<msg timestamp="20210205 17:12:25.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.524" endtime="20210205 17:12:25.576"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.577" endtime="20210205 17:12:25.579"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.576" endtime="20210205 17:12:25.579"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.576" endtime="20210205 17:12:25.580"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.581" endtime="20210205 17:12:25.581"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.580" endtime="20210205 17:12:25.582"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.583" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.583" endtime="20210205 17:12:25.583"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.619" level="INFO">${idvalue} = [37]</msg>
<status status="PASS" starttime="20210205 17:12:25.584" endtime="20210205 17:12:25.619"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:25.619" level="INFO">${responseid} = 37</msg>
<status status="PASS" starttime="20210205 17:12:25.619" endtime="20210205 17:12:25.619"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.619" endtime="20210205 17:12:25.620"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.620" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.620" endtime="20210205 17:12:25.620"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.582" endtime="20210205 17:12:25.620"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.523" endtime="20210205 17:12:25.620"></status>
</kw>
<kw name="${postid} = 38" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.621" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:25.621" endtime="20210205 17:12:25.621"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:25.676" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/38 
 path_url=/posts/38 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:25.676" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/38 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dba8a270841046849725d0dac29d039d71612563145; expires=Sun, 07-Mar-21 22:12:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '970', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"13a-HzjuaEKBfsU2W89T3U0Yxx0R1zE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23077', 'cf-request-id': '0815d9fca300000cd156301000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=cUxIdYpl4JnPBVp3EFcKGyIi1iIc48siDlq3ionejv3QeYleJPcXRplQiqbToc7eX2TLInv%2B38QokuEARQwFVhPBe71i9fEbWMcttUdXb8Mu0wS%2By9NYmb8lgioK"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff90ddafa0cd1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 38,
  "title": "explicabo et eos deleniti nostrum ab id repellendus",
  "body": "animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus ea\nrerum repudiandae quia voluptatem delectus fugit aut id quia\nratione optio eos iusto veniam iure"
} 
 </msg>
<msg timestamp="20210205 17:12:25.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.621" endtime="20210205 17:12:25.677"></status>
</kw>
<msg timestamp="20210205 17:12:25.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.620" endtime="20210205 17:12:25.677"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.678" endtime="20210205 17:12:25.681"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.678" endtime="20210205 17:12:25.681"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.677" endtime="20210205 17:12:25.681"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.683" endtime="20210205 17:12:25.684"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.682" endtime="20210205 17:12:25.684"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.685" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.685" endtime="20210205 17:12:25.685"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.721" level="INFO">${idvalue} = [38]</msg>
<status status="PASS" starttime="20210205 17:12:25.685" endtime="20210205 17:12:25.721"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:25.722" level="INFO">${responseid} = 38</msg>
<status status="PASS" starttime="20210205 17:12:25.721" endtime="20210205 17:12:25.722"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.722" endtime="20210205 17:12:25.722"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.722" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.722" endtime="20210205 17:12:25.722"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.684" endtime="20210205 17:12:25.723"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.620" endtime="20210205 17:12:25.723"></status>
</kw>
<kw name="${postid} = 39" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.723" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:25.723" endtime="20210205 17:12:25.724"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:25.771" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/39 
 path_url=/posts/39 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:25.771" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/39 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da1152953640a1c7787431ae6f49381e71612563145; expires=Sun, 07-Mar-21 22:12:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '993', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11e-UefH5pVf0iJOGuchVJ4dBA7q9aw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23077', 'cf-request-id': '0815d9fd0400000ce9bca9a000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ZALABurUZcTvMG7ofYXeEpRs7vm3uOY%2B1OyVq4fBJQbfOevTHICWBpKMwTqaYbBtoMU8DOL2vqAem3wHuJE77jzJt90uLdvgE6eFsO0sgOymA%2FygTLV0Ncv2LJhJ"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff90e69e40ce9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 39,
  "title": "eos dolorem iste accusantium est eaque quam",
  "body": "corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti asperiores fuga aut\nvoluptas sapiente vel dolore minus voluptatem incidunt ex"
} 
 </msg>
<msg timestamp="20210205 17:12:25.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.724" endtime="20210205 17:12:25.771"></status>
</kw>
<msg timestamp="20210205 17:12:25.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.723" endtime="20210205 17:12:25.772"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.773" endtime="20210205 17:12:25.774"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.772" endtime="20210205 17:12:25.775"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.772" endtime="20210205 17:12:25.775"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.775" endtime="20210205 17:12:25.776"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.775" endtime="20210205 17:12:25.776"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.777" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.776" endtime="20210205 17:12:25.777"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.810" level="INFO">${idvalue} = [39]</msg>
<status status="PASS" starttime="20210205 17:12:25.777" endtime="20210205 17:12:25.810"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:25.811" level="INFO">${responseid} = 39</msg>
<status status="PASS" starttime="20210205 17:12:25.810" endtime="20210205 17:12:25.811"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.811" endtime="20210205 17:12:25.811"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.811" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.811" endtime="20210205 17:12:25.811"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.776" endtime="20210205 17:12:25.811"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.723" endtime="20210205 17:12:25.811"></status>
</kw>
<kw name="${postid} = 40" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.812" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:25.812" endtime="20210205 17:12:25.812"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:25.862" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/40 
 path_url=/posts/40 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:25.863" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/40 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d29f10bea6cb9a419cd99ef8dcb71e5821612563146; expires=Sun, 07-Mar-21 22:12:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '997', 'x-ratelimit-reset': '1611642816', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"f4-I7RG0h0Rd47Iq9Rj+KpOcUnz3RA"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815d9fd5c0000e6cc1c36e000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=q6t%2FDi4t1itQsNQcZIDuYMGh1%2F5nzgc1fxReFQiBCVeZktYjB3pyqU%2B%2FgrTH4GIqL17l3tzttDPtjS8rgv15lB%2FekchoqegW%2BZTO39q7bcbazk609CtAfQU835cU"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff90ef859e6cc-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 40,
  "title": "enim quo cumque",
  "body": "ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptatem iure quasi maxime voluptas nam"
} 
 </msg>
<msg timestamp="20210205 17:12:25.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.813" endtime="20210205 17:12:25.863"></status>
</kw>
<msg timestamp="20210205 17:12:25.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.812" endtime="20210205 17:12:25.864"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.866" endtime="20210205 17:12:25.868"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.865" endtime="20210205 17:12:25.868"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.864" endtime="20210205 17:12:25.869"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.870" endtime="20210205 17:12:25.870"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.869" endtime="20210205 17:12:25.870"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.872" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.871" endtime="20210205 17:12:25.872"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.904" level="INFO">${idvalue} = [40]</msg>
<status status="PASS" starttime="20210205 17:12:25.872" endtime="20210205 17:12:25.904"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:25.904" level="INFO">${responseid} = 40</msg>
<status status="PASS" starttime="20210205 17:12:25.904" endtime="20210205 17:12:25.904"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.905" endtime="20210205 17:12:25.905"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.905" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.905" endtime="20210205 17:12:25.905"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.871" endtime="20210205 17:12:25.905"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.812" endtime="20210205 17:12:25.905"></status>
</kw>
<kw name="${postid} = 41" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.906" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:25.906" endtime="20210205 17:12:25.906"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:25.956" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/41 
 path_url=/posts/41 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:25.956" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/41 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5cbf7aae2f93a74490f674fa1b8463b31612563146; expires=Sun, 07-Mar-21 22:12:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '966', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"100-Q8c9gEwMpBLWIJsW0KobJ16pdlE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815d9fdbb0000f03181af1000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=iqTsqOGPTak9ygG4kxG%2BUxFQPE%2B%2B%2Br61p8I459GfGiOTEHIHcHW7h1nHhZhDAhruGn9h2ZLvyIyeMxU4mIBIGoTfUlVros48cpiyJPDyoDLRTERgPL%2BpvHt91SB6"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff90f9d84f031-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 41,
  "title": "non est facere",
  "body": "molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\nnam quidem est ducimus sunt debitis saepe"
} 
 </msg>
<msg timestamp="20210205 17:12:25.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.906" endtime="20210205 17:12:25.956"></status>
</kw>
<msg timestamp="20210205 17:12:25.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.905" endtime="20210205 17:12:25.957"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.959" endtime="20210205 17:12:25.961"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.958" endtime="20210205 17:12:25.962"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.957" endtime="20210205 17:12:25.962"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.963" endtime="20210205 17:12:25.964"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.962" endtime="20210205 17:12:25.964"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.965" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.964" endtime="20210205 17:12:25.965"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.995" level="INFO">${idvalue} = [41]</msg>
<status status="PASS" starttime="20210205 17:12:25.965" endtime="20210205 17:12:25.995"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:25.995" level="INFO">${responseid} = 41</msg>
<status status="PASS" starttime="20210205 17:12:25.995" endtime="20210205 17:12:25.995"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:25.995" endtime="20210205 17:12:25.996"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:25.996" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:25.996" endtime="20210205 17:12:25.996"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.964" endtime="20210205 17:12:25.996"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.905" endtime="20210205 17:12:25.997"></status>
</kw>
<kw name="${postid} = 42" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:25.998" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:25.997" endtime="20210205 17:12:25.998"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:26.053" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/42 
 path_url=/posts/42 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:26.053" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/42 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d84d1550b0915e61ecfa63b61237831d51612563146; expires=Sun, 07-Mar-21 22:12:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '928', 'X-Ratelimit-Reset': '1610899946', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"131-uHddi0mgHIPmmzZ13FEZKREc9o4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '17143', 'cf-request-id': '0815d9fe190000ccc2f7ba5000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Aj3i8XAAHZ2WrFcpj0N8zDfvulH6iomJAp7Q6ZUsGtXLK9riqzxi5H6r0l4K2tgUNdYN6eOJJQI03mA3eT6Bbopea1p%2FPBv2H%2FZ4AEqXsyy7rSRpRHk0jjkwJH%2F%2F"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9102e58ccc2-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 42,
  "title": "commodi ullam sint et excepturi error explicabo praesentium voluptas",
  "body": "odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis aliquam sunt sequi nulla dolorem\nnon facere repellendus voluptates quia\nratione harum vitae ut"
} 
 </msg>
<msg timestamp="20210205 17:12:26.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.998" endtime="20210205 17:12:26.054"></status>
</kw>
<msg timestamp="20210205 17:12:26.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:25.997" endtime="20210205 17:12:26.054"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.056" endtime="20210205 17:12:26.057"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.055" endtime="20210205 17:12:26.057"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.054" endtime="20210205 17:12:26.058"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.058" endtime="20210205 17:12:26.059"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.058" endtime="20210205 17:12:26.059"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.060" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.059" endtime="20210205 17:12:26.060"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.121" level="INFO">${idvalue} = [42]</msg>
<status status="PASS" starttime="20210205 17:12:26.060" endtime="20210205 17:12:26.121"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:26.121" level="INFO">${responseid} = 42</msg>
<status status="PASS" starttime="20210205 17:12:26.121" endtime="20210205 17:12:26.122"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.122" endtime="20210205 17:12:26.122"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.123" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.123" endtime="20210205 17:12:26.123"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.059" endtime="20210205 17:12:26.123"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:25.997" endtime="20210205 17:12:26.123"></status>
</kw>
<kw name="${postid} = 43" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.125" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:26.124" endtime="20210205 17:12:26.126"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:26.177" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/43 
 path_url=/posts/43 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:26.178" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/43 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbd3a149d5228b6eae638c5791dc53a221612563146; expires=Sun, 07-Mar-21 22:12:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '980', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"149-CIe5MorMt/6eiC+lMhHtDjhofck"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815d9fe96000015a7fd8f2000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=oPXh4NWcLVO7ATba6X1cHieqKNzGB4%2Bp9J0bWzVzPrdaeIE75IDalHyVb6qHj2V49tLAonvmcji84Ay9bM6TyMHbkbZdD5ROrUlv8XEA1DeidAAbMFqS4lNKtaBe"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff910fd3315a7-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 43,
  "title": "eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis",
  "body": "similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexercitationem quos nam commodi possimus cum odio nihil nulla\ndolorum exercitationem magnam ex et a et distinctio debitis"
} 
 </msg>
<msg timestamp="20210205 17:12:26.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.126" endtime="20210205 17:12:26.178"></status>
</kw>
<msg timestamp="20210205 17:12:26.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.124" endtime="20210205 17:12:26.178"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.180" endtime="20210205 17:12:26.182"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.179" endtime="20210205 17:12:26.182"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.178" endtime="20210205 17:12:26.183"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.184" endtime="20210205 17:12:26.184"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.183" endtime="20210205 17:12:26.184"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.185" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.185" endtime="20210205 17:12:26.185"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.224" level="INFO">${idvalue} = [43]</msg>
<status status="PASS" starttime="20210205 17:12:26.185" endtime="20210205 17:12:26.224"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:26.226" level="INFO">${responseid} = 43</msg>
<status status="PASS" starttime="20210205 17:12:26.225" endtime="20210205 17:12:26.226"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.226" endtime="20210205 17:12:26.227"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.227" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.227" endtime="20210205 17:12:26.227"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.184" endtime="20210205 17:12:26.227"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.123" endtime="20210205 17:12:26.227"></status>
</kw>
<kw name="${postid} = 44" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.228" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:26.228" endtime="20210205 17:12:26.229"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:26.303" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/44 
 path_url=/posts/44 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:26.303" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/44 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da75baeb658498d3db015d11d80f5a94f1612563146; expires=Sun, 07-Mar-21 22:12:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1610900306', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f9-qeEI4xhxJyQd+h1AmBEbRcZU5LE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815d9ff000000f005d425a000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=vctcT6ee3d9b1jigsFRAQnEI10i3vfYQXETG0axfxqrSG6vC5mfxNp9wq%2BwORNIg8azmgotOWD7shoJr1S9kIeS5WCvuXcRWmH0%2BbcV5Z2FFy9oKeBwCYgJGK9gV"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff9119895f005-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 44,
  "title": "optio dolor molestias sit",
  "body": "temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iure quam sed maxime ut distinctio quae"
} 
 </msg>
<msg timestamp="20210205 17:12:26.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.229" endtime="20210205 17:12:26.303"></status>
</kw>
<msg timestamp="20210205 17:12:26.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.228" endtime="20210205 17:12:26.304"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.305" endtime="20210205 17:12:26.307"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.305" endtime="20210205 17:12:26.307"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.304" endtime="20210205 17:12:26.308"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.308" endtime="20210205 17:12:26.309"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.308" endtime="20210205 17:12:26.309"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.310" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.310" endtime="20210205 17:12:26.310"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.343" level="INFO">${idvalue} = [44]</msg>
<status status="PASS" starttime="20210205 17:12:26.310" endtime="20210205 17:12:26.343"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:26.344" level="INFO">${responseid} = 44</msg>
<status status="PASS" starttime="20210205 17:12:26.343" endtime="20210205 17:12:26.344"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.344" endtime="20210205 17:12:26.344"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.345" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.344" endtime="20210205 17:12:26.345"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.309" endtime="20210205 17:12:26.345"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.227" endtime="20210205 17:12:26.345"></status>
</kw>
<kw name="${postid} = 45" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.346" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:26.346" endtime="20210205 17:12:26.346"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:26.397" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/45 
 path_url=/posts/45 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:26.397" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/45 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0a9b569532cbf6f62963204dcb6706611612563146; expires=Sun, 07-Mar-21 22:12:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '989', 'X-Ratelimit-Reset': '1611536772', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ed-rWKwMfMntbkO4fMbZo0ZEINfI8c"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815d9ff700000e6c093871000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BbCsK61QGP%2Bkt8X6CQ8cM6WLv27nGWTsnfi3ssgplxBPZtbuh8q6ip4yMd1zqO4d6p1dqGmQ9X0KpvXrBGaI9bjlYtFLH7cFtOuBTTFKevsX5VF3Uau5YuMGX7pv"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff9124998e6c0-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 45,
  "title": "ut numquam possimus omnis eius suscipit laudantium iure",
  "body": "est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum repellendus dolorem autem"
} 
 </msg>
<msg timestamp="20210205 17:12:26.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.346" endtime="20210205 17:12:26.398"></status>
</kw>
<msg timestamp="20210205 17:12:26.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.345" endtime="20210205 17:12:26.398"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.400" endtime="20210205 17:12:26.402"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.399" endtime="20210205 17:12:26.402"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.399" endtime="20210205 17:12:26.402"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.403" endtime="20210205 17:12:26.403"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.402" endtime="20210205 17:12:26.403"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.404" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.404" endtime="20210205 17:12:26.404"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.435" level="INFO">${idvalue} = [45]</msg>
<status status="PASS" starttime="20210205 17:12:26.404" endtime="20210205 17:12:26.435"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:26.436" level="INFO">${responseid} = 45</msg>
<status status="PASS" starttime="20210205 17:12:26.435" endtime="20210205 17:12:26.436"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.436" endtime="20210205 17:12:26.436"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.436" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.436" endtime="20210205 17:12:26.436"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.403" endtime="20210205 17:12:26.437"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.345" endtime="20210205 17:12:26.437"></status>
</kw>
<kw name="${postid} = 46" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.437" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:26.437" endtime="20210205 17:12:26.438"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:26.498" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/46 
 path_url=/posts/46 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:26.498" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/46 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc33468a3ae4bac7329ef12d0c1b43f831612563146; expires=Sun, 07-Mar-21 22:12:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '927', 'X-Ratelimit-Reset': '1610900006', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d0-OhfTd80AsvDHSFm9T0Fi068MWcY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815d9ffce0000efe983952000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=uC6yWzCfwkvQMtS5br%2BAwL%2Fb%2BXz5PHw0Ar7yA%2BIb3trWeCaBh8MUB3QQnD24MOLa03O%2Fi5L2BGHnJEHIW%2Ft8P1CXeEBVbDeZqJejrQXNYWUrjcR8hzFHB4Rp4WDn"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff912ea59efe9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 46,
  "title": "aut quo modi neque nostrum ducimus",
  "body": "voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid"
} 
 </msg>
<msg timestamp="20210205 17:12:26.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.438" endtime="20210205 17:12:26.499"></status>
</kw>
<msg timestamp="20210205 17:12:26.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.437" endtime="20210205 17:12:26.499"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.502" endtime="20210205 17:12:26.505"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.500" endtime="20210205 17:12:26.505"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.500" endtime="20210205 17:12:26.505"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.506" endtime="20210205 17:12:26.506"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.505" endtime="20210205 17:12:26.506"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.507" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.507" endtime="20210205 17:12:26.507"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.542" level="INFO">${idvalue} = [46]</msg>
<status status="PASS" starttime="20210205 17:12:26.507" endtime="20210205 17:12:26.542"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:26.543" level="INFO">${responseid} = 46</msg>
<status status="PASS" starttime="20210205 17:12:26.542" endtime="20210205 17:12:26.543"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.543" endtime="20210205 17:12:26.543"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.544" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.544" endtime="20210205 17:12:26.544"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.507" endtime="20210205 17:12:26.544"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.437" endtime="20210205 17:12:26.544"></status>
</kw>
<kw name="${postid} = 47" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.545" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:26.545" endtime="20210205 17:12:26.545"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:26.597" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/47 
 path_url=/posts/47 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:26.597" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/47 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de6490f056cd6143a8f051165b72281231612563146; expires=Sun, 07-Mar-21 22:12:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '961', 'x-ratelimit-reset': '1611755940', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"109-s96ANlpy6qW0Y5CU7Xc8LI9hFKE"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815da00380000c5ccfd0e1000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=nZetfgganAa6rsSDlUWwN2jUMt3p7IbTZolsk193UDl%2FFbIr8tH5ICaMYw71QqQSwjwgAj27AM%2FvVKfGjf6kf%2FOo99zI%2Bq%2FljTAZbwv6nQH8evDIcG3G0as5Dfyl"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff9138834c5cc-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 47,
  "title": "quibusdam cumque rem aut deserunt",
  "body": "voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beatae rerum ea iure soluta nostrum\neligendi et voluptate"
} 
 </msg>
<msg timestamp="20210205 17:12:26.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.545" endtime="20210205 17:12:26.598"></status>
</kw>
<msg timestamp="20210205 17:12:26.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.544" endtime="20210205 17:12:26.598"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.599" endtime="20210205 17:12:26.601"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.599" endtime="20210205 17:12:26.601"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.598" endtime="20210205 17:12:26.601"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.602" endtime="20210205 17:12:26.603"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.602" endtime="20210205 17:12:26.603"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.603" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.603" endtime="20210205 17:12:26.604"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.645" level="INFO">${idvalue} = [47]</msg>
<status status="PASS" starttime="20210205 17:12:26.604" endtime="20210205 17:12:26.646"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:26.646" level="INFO">${responseid} = 47</msg>
<status status="PASS" starttime="20210205 17:12:26.646" endtime="20210205 17:12:26.646"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.646" endtime="20210205 17:12:26.647"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.647" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.647" endtime="20210205 17:12:26.647"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.603" endtime="20210205 17:12:26.647"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.544" endtime="20210205 17:12:26.647"></status>
</kw>
<kw name="${postid} = 48" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.649" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:26.648" endtime="20210205 17:12:26.649"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:26.696" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/48 
 path_url=/posts/48 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:26.697" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/48 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d326d0ef7de3f6b205e4b4978f23df4d61612563146; expires=Sun, 07-Mar-21 22:12:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '960', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"107-td+hSQ4ZRU5RdRcCg9ZABJ7WwQI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815da009e0000e8495b92d000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=VRiVYXMCQdnl1uO%2FTeaYlqGXJFEdmIikKmBnjYLTuhUc%2B3z7ecSCX02diDA7p38NROls4u4zUvbIm9N45UK%2BSY2iVn7b6Lj%2BeK1b3mHQZi9Rk%2FIN3aw%2FjicOC3zw"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9143d01e849-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 48,
  "title": "ut voluptatem illum ea doloribus itaque eos",
  "body": "voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab deleniti\nlaudantium repellat ad ut et autem reprehenderit"
} 
 </msg>
<msg timestamp="20210205 17:12:26.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.649" endtime="20210205 17:12:26.697"></status>
</kw>
<msg timestamp="20210205 17:12:26.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.648" endtime="20210205 17:12:26.698"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.699" endtime="20210205 17:12:26.701"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.699" endtime="20210205 17:12:26.701"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.698" endtime="20210205 17:12:26.701"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.702" endtime="20210205 17:12:26.702"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.701" endtime="20210205 17:12:26.703"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.703" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.703" endtime="20210205 17:12:26.703"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.738" level="INFO">${idvalue} = [48]</msg>
<status status="PASS" starttime="20210205 17:12:26.704" endtime="20210205 17:12:26.738"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:26.738" level="INFO">${responseid} = 48</msg>
<status status="PASS" starttime="20210205 17:12:26.738" endtime="20210205 17:12:26.738"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.738" endtime="20210205 17:12:26.739"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.739" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.739" endtime="20210205 17:12:26.739"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.703" endtime="20210205 17:12:26.739"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.648" endtime="20210205 17:12:26.739"></status>
</kw>
<kw name="${postid} = 49" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.740" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:26.740" endtime="20210205 17:12:26.740"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:26.811" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/49 
 path_url=/posts/49 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:26.811" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/49 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da6ab18122679f50d345eacebbcd658ae1612563147; expires=Sun, 07-Mar-21 22:12:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '959', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"112-lKkCmj93YmY7yVGzoTlsICQTIV8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23079', 'cf-request-id': '0815da00f8000015bf07321000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=qC66kiFtc9gbg7JjoIyZD5Vo27n01N%2BYJUwBybC2rTromCef2xuZifeWPE3JLO%2FQpL2oV5fdmXoYm5levg5RlV7D6iIRgKpD%2Bepk4FkMCu%2FcrZNwh%2BS0y%2FzCdEiw"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff914cb0f15bf-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 49,
  "title": "laborum non sunt aut ut assumenda perspiciatis voluptas",
  "body": "inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum veritatis non\nquibusdam officiis aspernatur cumque aut commodi aut"
} 
 </msg>
<msg timestamp="20210205 17:12:26.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.740" endtime="20210205 17:12:26.812"></status>
</kw>
<msg timestamp="20210205 17:12:26.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.739" endtime="20210205 17:12:26.812"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.815" endtime="20210205 17:12:26.817"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.813" endtime="20210205 17:12:26.817"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.812" endtime="20210205 17:12:26.818"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.819" endtime="20210205 17:12:26.820"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.818" endtime="20210205 17:12:26.820"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.821" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.821" endtime="20210205 17:12:26.821"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.868" level="INFO">${idvalue} = [49]</msg>
<status status="PASS" starttime="20210205 17:12:26.821" endtime="20210205 17:12:26.868"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:26.869" level="INFO">${responseid} = 49</msg>
<status status="PASS" starttime="20210205 17:12:26.868" endtime="20210205 17:12:26.869"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.869" endtime="20210205 17:12:26.869"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.870" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.870" endtime="20210205 17:12:26.870"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.820" endtime="20210205 17:12:26.870"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.739" endtime="20210205 17:12:26.870"></status>
</kw>
<kw name="${postid} = 50" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.871" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:26.871" endtime="20210205 17:12:26.871"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:26.923" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/50 
 path_url=/posts/50 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:26.923" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/50 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de87407a8963b8f5a75ed8b8379f7f7a21612563147; expires=Sun, 07-Mar-21 22:12:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1611642816', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"14d-XND1VIG+pZHF+RVMSi1awppS1XI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23079', 'cf-request-id': '0815da01840000158bdb2c9000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=WEivKRI%2FLS5kfrn3BCGEA3PtxmlTbyJgks26JBKQC%2FLkqJt2jrOMgM8U8oFZnqBgny9LKZJJZiIed1ysiczTxpXQ2yUApTF43RYuNl4dc9HDor4AngJPkqIryfhN"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9159ef4158b-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 50,
  "title": "repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem",
  "body": "error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi et est et voluptates\nquia distinctio ab amet quaerat molestiae et vitae\nadipisci impedit sequi nesciunt quis consectetur"
} 
 </msg>
<msg timestamp="20210205 17:12:26.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.872" endtime="20210205 17:12:26.923"></status>
</kw>
<msg timestamp="20210205 17:12:26.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.870" endtime="20210205 17:12:26.924"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.927" endtime="20210205 17:12:26.929"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.926" endtime="20210205 17:12:26.931"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.924" endtime="20210205 17:12:26.931"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.932" endtime="20210205 17:12:26.933"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.932" endtime="20210205 17:12:26.933"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.934" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.934" endtime="20210205 17:12:26.934"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.971" level="INFO">${idvalue} = [50]</msg>
<status status="PASS" starttime="20210205 17:12:26.934" endtime="20210205 17:12:26.971"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:26.972" level="INFO">${responseid} = 50</msg>
<status status="PASS" starttime="20210205 17:12:26.972" endtime="20210205 17:12:26.972"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:26.972" endtime="20210205 17:12:26.973"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:26.973" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:26.973" endtime="20210205 17:12:26.973"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.933" endtime="20210205 17:12:26.973"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.870" endtime="20210205 17:12:26.973"></status>
</kw>
<kw name="${postid} = 51" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:26.974" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:26.974" endtime="20210205 17:12:26.974"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:27.020" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/51 
 path_url=/posts/51 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:27.020" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/51 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db41562749a819c23ea1e212143bc2ab41612563147; expires=Sun, 07-Mar-21 22:12:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '958', 'x-ratelimit-reset': '1611755940', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"ec-KSZLw8b2VyQH0CoS7Z65vSSln78"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23079', 'cf-request-id': '0815da01e40000e77058214000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=y1%2FhiWJtNllxzx7wSzd%2Fq1%2BjxUSEpNgAxZEtTS3pHOM3B8wK%2BnYSlz4PLrt989%2BpnnO2%2BuwwoBjMYjqJ7rV%2FGYZW%2FH9cmBPesh7rGfxFoTnGUtOJeraFZ2DGBcxy"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff91638bee770-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 51,
  "title": "soluta aliquam aperiam consequatur illo quis voluptas",
  "body": "sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores sit consectetur dolorem"
} 
 </msg>
<msg timestamp="20210205 17:12:27.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.974" endtime="20210205 17:12:27.020"></status>
</kw>
<msg timestamp="20210205 17:12:27.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:26.973" endtime="20210205 17:12:27.020"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.022" endtime="20210205 17:12:27.023"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.021" endtime="20210205 17:12:27.023"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.020" endtime="20210205 17:12:27.024"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.024" endtime="20210205 17:12:27.025"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.024" endtime="20210205 17:12:27.025"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.026" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.025" endtime="20210205 17:12:27.026"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.059" level="INFO">${idvalue} = [51]</msg>
<status status="PASS" starttime="20210205 17:12:27.026" endtime="20210205 17:12:27.059"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:27.059" level="INFO">${responseid} = 51</msg>
<status status="PASS" starttime="20210205 17:12:27.059" endtime="20210205 17:12:27.059"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.059" endtime="20210205 17:12:27.060"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.060" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.060" endtime="20210205 17:12:27.060"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.025" endtime="20210205 17:12:27.060"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:26.973" endtime="20210205 17:12:27.060"></status>
</kw>
<kw name="${postid} = 52" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.061" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:27.061" endtime="20210205 17:12:27.061"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:27.116" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/52 
 path_url=/posts/52 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:27.116" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/52 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8160585a3dadaf51c9a24cce3bf067221612563147; expires=Sun, 07-Mar-21 22:12:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '957', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11d-WmrD+HyY132p7brEZQ1rec9ZC6E"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815da023d0000e6dc6d091000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mDpAK2gSCB%2FXZfrCYFESadfp0rLOWJbUXhLYnb4nwI0R9WbnGLZKWBZVInc0D1%2Fz5sd3rhfhmyVONFfgIUCGm5z9OrIxwbsJsstE3rOV7TpEzTiQ9mOMd%2FPD%2BvNZ"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff916caafe6dc-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 52,
  "title": "qui enim et consequuntur quia animi quis voluptate quibusdam",
  "body": "iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iusto accusantium provident architecto\nsoluta esse reprehenderit qui laborum"
} 
 </msg>
<msg timestamp="20210205 17:12:27.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.061" endtime="20210205 17:12:27.117"></status>
</kw>
<msg timestamp="20210205 17:12:27.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.060" endtime="20210205 17:12:27.117"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.119" endtime="20210205 17:12:27.121"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.118" endtime="20210205 17:12:27.121"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.118" endtime="20210205 17:12:27.121"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.122" endtime="20210205 17:12:27.122"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.121" endtime="20210205 17:12:27.122"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.123" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.123" endtime="20210205 17:12:27.123"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.157" level="INFO">${idvalue} = [52]</msg>
<status status="PASS" starttime="20210205 17:12:27.123" endtime="20210205 17:12:27.157"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:27.158" level="INFO">${responseid} = 52</msg>
<status status="PASS" starttime="20210205 17:12:27.157" endtime="20210205 17:12:27.158"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.158" endtime="20210205 17:12:27.158"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.159" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.158" endtime="20210205 17:12:27.159"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.123" endtime="20210205 17:12:27.159"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.060" endtime="20210205 17:12:27.159"></status>
</kw>
<kw name="${postid} = 53" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.160" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:27.160" endtime="20210205 17:12:27.160"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:27.216" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/53 
 path_url=/posts/53 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:27.216" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/53 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=ddb9555b856bdeb9be8b2e3b09ca1d0dc1612563147; expires=Sun, 07-Mar-21 22:12:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '956', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-X55YQF6JtuvUfAW398enLPpXN4M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815da02a60000e85190ab5000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=bF5KdrUviik0He750M1nDYQtU19ymp%2BOm9EQhU%2BUaJcmJuKQ22sHL6tPdkbtYSPWaAja3whRo5mx3WcZ837t4aQoarBq4r8YljY8y35meRaHdOUeDMujBUqxwWK4"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff9177c80e851-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 53,
  "title": "ut quo aut ducimus alias",
  "body": "minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quidem veritatis sunt non explicabo similique"
} 
 </msg>
<msg timestamp="20210205 17:12:27.217" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.161" endtime="20210205 17:12:27.217"></status>
</kw>
<msg timestamp="20210205 17:12:27.217" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.159" endtime="20210205 17:12:27.217"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.220" endtime="20210205 17:12:27.223"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.219" endtime="20210205 17:12:27.224"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.218" endtime="20210205 17:12:27.224"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.225" endtime="20210205 17:12:27.225"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.224" endtime="20210205 17:12:27.225"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.226" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.226" endtime="20210205 17:12:27.226"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.262" level="INFO">${idvalue} = [53]</msg>
<status status="PASS" starttime="20210205 17:12:27.226" endtime="20210205 17:12:27.262"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:27.263" level="INFO">${responseid} = 53</msg>
<status status="PASS" starttime="20210205 17:12:27.262" endtime="20210205 17:12:27.263"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.263" endtime="20210205 17:12:27.263"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.265" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.264" endtime="20210205 17:12:27.265"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.225" endtime="20210205 17:12:27.265"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.159" endtime="20210205 17:12:27.266"></status>
</kw>
<kw name="${postid} = 54" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.267" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:27.267" endtime="20210205 17:12:27.268"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:27.321" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/54 
 path_url=/posts/54 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:27.321" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/54 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9a97c2766bed0e629d416dda483121161612563147; expires=Sun, 07-Mar-21 22:12:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611693280', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-/rMACUfvajsqfpLr5SV6d7Kh/pA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815da030b0000e84d398dd000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=BdkBM%2BnNFXYRJaVcEZewOINN1InEJyDf52Jm3JPJO7oSwTWF6dSVOVVqfIbFWjArZgyXTEMr%2Bq%2B8r5EE4cqhbVUuQTyfRzdT%2B1bV6lh5W4dUWciA128PRUbOAhct"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff9181903e84d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 54,
  "title": "sit asperiores ipsam eveniet odio non quia",
  "body": "totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero incidunt corrupti mollitia"
} 
 </msg>
<msg timestamp="20210205 17:12:27.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.268" endtime="20210205 17:12:27.322"></status>
</kw>
<msg timestamp="20210205 17:12:27.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.266" endtime="20210205 17:12:27.322"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.324" endtime="20210205 17:12:27.326"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.323" endtime="20210205 17:12:27.326"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.322" endtime="20210205 17:12:27.327"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.328" endtime="20210205 17:12:27.328"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.327" endtime="20210205 17:12:27.329"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.330" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.329" endtime="20210205 17:12:27.330"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.367" level="INFO">${idvalue} = [54]</msg>
<status status="PASS" starttime="20210205 17:12:27.330" endtime="20210205 17:12:27.367"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:27.369" level="INFO">${responseid} = 54</msg>
<status status="PASS" starttime="20210205 17:12:27.368" endtime="20210205 17:12:27.369"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.369" endtime="20210205 17:12:27.370"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.370" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.370" endtime="20210205 17:12:27.371"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.329" endtime="20210205 17:12:27.371"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.266" endtime="20210205 17:12:27.371"></status>
</kw>
<kw name="${postid} = 55" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.372" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:27.372" endtime="20210205 17:12:27.373"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:27.427" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/55 
 path_url=/posts/55 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:27.427" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/55 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d94e92ada60033393a0fd977bd8077b411612563147; expires=Sun, 07-Mar-21 22:12:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f0-VxeBMfiov8SnmTjGIBYMw53XYbw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815da03740000e6c06d8d1000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Bq72nIwKLKCAcfOWv87lp5Pwh5BrIdnQNdk3c03bU0U6n7hXp7Dc%2FViNBeavNltxQlR%2BjZLrGSr3Vq9YDIKrnlv8VaHZRGhM8Ookx%2B8qnuSGKrqES1%2BbBmVxAOCf"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff918bc9ce6c0-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 55,
  "title": "sit vel voluptatem et non libero",
  "body": "debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis molestiae\nnihil ut eum odit"
} 
 </msg>
<msg timestamp="20210205 17:12:27.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.373" endtime="20210205 17:12:27.428"></status>
</kw>
<msg timestamp="20210205 17:12:27.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.371" endtime="20210205 17:12:27.428"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.429" endtime="20210205 17:12:27.431"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.429" endtime="20210205 17:12:27.431"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.428" endtime="20210205 17:12:27.432"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.432" endtime="20210205 17:12:27.433"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.432" endtime="20210205 17:12:27.433"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.434" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.434" endtime="20210205 17:12:27.434"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.466" level="INFO">${idvalue} = [55]</msg>
<status status="PASS" starttime="20210205 17:12:27.434" endtime="20210205 17:12:27.466"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:27.466" level="INFO">${responseid} = 55</msg>
<status status="PASS" starttime="20210205 17:12:27.466" endtime="20210205 17:12:27.466"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.466" endtime="20210205 17:12:27.466"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.467" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.467" endtime="20210205 17:12:27.467"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.433" endtime="20210205 17:12:27.467"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.371" endtime="20210205 17:12:27.467"></status>
</kw>
<kw name="${postid} = 56" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.468" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:27.467" endtime="20210205 17:12:27.468"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:27.515" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/56 
 path_url=/posts/56 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:27.515" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/56 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d877559c7f60ce3ccc26206d556f2e3531612563147; expires=Sun, 07-Mar-21 22:12:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '969', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-u98FTQTucjGThpIemwDEky3CeT0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815da03d200000ce1a8b00000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=MTURh8AhEvdEHIx8hXILw7DjFidMUJ39CE%2B39ONBbxXgnbFt3zd9Xt33Fm%2BZIEqUAa1cTK%2BlfhZ0yRyhay%2F5akeEmtDUMDP5DEq6eQYz2MA8w8GGi6AYWNsByexv"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff91949170ce1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 56,
  "title": "qui et at rerum necessitatibus",
  "body": "aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis harum reprehenderit dolores eligendi"
} 
 </msg>
<msg timestamp="20210205 17:12:27.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.468" endtime="20210205 17:12:27.516"></status>
</kw>
<msg timestamp="20210205 17:12:27.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.467" endtime="20210205 17:12:27.516"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.518" endtime="20210205 17:12:27.521"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.517" endtime="20210205 17:12:27.521"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.516" endtime="20210205 17:12:27.521"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.522" endtime="20210205 17:12:27.523"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.521" endtime="20210205 17:12:27.523"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.524" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.524" endtime="20210205 17:12:27.525"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.554" level="INFO">${idvalue} = [56]</msg>
<status status="PASS" starttime="20210205 17:12:27.525" endtime="20210205 17:12:27.554"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:27.555" level="INFO">${responseid} = 56</msg>
<status status="PASS" starttime="20210205 17:12:27.554" endtime="20210205 17:12:27.555"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.555" endtime="20210205 17:12:27.555"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.555" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.555" endtime="20210205 17:12:27.555"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.523" endtime="20210205 17:12:27.555"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.467" endtime="20210205 17:12:27.555"></status>
</kw>
<kw name="${postid} = 57" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.556" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:27.556" endtime="20210205 17:12:27.556"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:27.620" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/57 
 path_url=/posts/57 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:27.620" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/57 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df6a9c6ab1c6aa14b601ec363dc0533ed1612563147; expires=Sun, 07-Mar-21 22:12:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '952', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ce-Iwt4vkAV2fTGb7NKDpU2J1zQlLg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815da042d0000f02524b39000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ZCajtwgSZXi5dGqcGIGUDWUGVeOdQJ%2F8MZyq5g9Z9spWeVsqmD9D%2B6xi5QpSWS%2FtXHeGDw1H%2BHpvYTHCAgyCQtZEZ3xY9Vv7sgK6NSw6BZ3LYx4eh5mYmAFGjRPn"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff919db4cf025-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 57,
  "title": "sed ab est est",
  "body": "at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est"
} 
 </msg>
<msg timestamp="20210205 17:12:27.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.556" endtime="20210205 17:12:27.620"></status>
</kw>
<msg timestamp="20210205 17:12:27.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.556" endtime="20210205 17:12:27.620"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.621" endtime="20210205 17:12:27.623"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.621" endtime="20210205 17:12:27.623"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.620" endtime="20210205 17:12:27.623"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.624" endtime="20210205 17:12:27.624"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.623" endtime="20210205 17:12:27.624"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.626" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.625" endtime="20210205 17:12:27.626"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.658" level="INFO">${idvalue} = [57]</msg>
<status status="PASS" starttime="20210205 17:12:27.626" endtime="20210205 17:12:27.658"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:27.659" level="INFO">${responseid} = 57</msg>
<status status="PASS" starttime="20210205 17:12:27.659" endtime="20210205 17:12:27.659"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.659" endtime="20210205 17:12:27.659"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.660" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.659" endtime="20210205 17:12:27.660"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.625" endtime="20210205 17:12:27.660"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.555" endtime="20210205 17:12:27.660"></status>
</kw>
<kw name="${postid} = 58" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.660" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:27.660" endtime="20210205 17:12:27.661"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:27.719" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/58 
 path_url=/posts/58 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:27.719" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/58 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4212d40fd738239034e56169fa99beb11612563147; expires=Sun, 07-Mar-21 22:12:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '949', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"df-bD3LY230qxsVBb8KHrs4UpWT93M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23078', 'cf-request-id': '0815da049900003dc69a0c9000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=omKgV9lV%2Bx1Fk0RmgR9Vqsxd%2B2SwJ76YQr2ypSAEvO0cp5ZXzhXxgKhiAWvzFZM04dbh0Rc2KUuVmf%2BSjHiogGJD3Nixdxf%2BKC%2FCJXpwG0jCYwFqffphDCa7wfJG"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff91a896e3dc6-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 58,
  "title": "voluptatum itaque dolores nisi et quasi",
  "body": "veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad similique veniam"
} 
 </msg>
<msg timestamp="20210205 17:12:27.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.661" endtime="20210205 17:12:27.720"></status>
</kw>
<msg timestamp="20210205 17:12:27.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.660" endtime="20210205 17:12:27.720"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.722" endtime="20210205 17:12:27.724"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.721" endtime="20210205 17:12:27.725"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.721" endtime="20210205 17:12:27.725"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.727" endtime="20210205 17:12:27.728"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.725" endtime="20210205 17:12:27.728"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.729" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.729" endtime="20210205 17:12:27.729"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.796" level="INFO">${idvalue} = [58]</msg>
<status status="PASS" starttime="20210205 17:12:27.730" endtime="20210205 17:12:27.796"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:27.797" level="INFO">${responseid} = 58</msg>
<status status="PASS" starttime="20210205 17:12:27.796" endtime="20210205 17:12:27.797"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.797" endtime="20210205 17:12:27.797"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.797" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.797" endtime="20210205 17:12:27.797"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.728" endtime="20210205 17:12:27.797"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.660" endtime="20210205 17:12:27.797"></status>
</kw>
<kw name="${postid} = 59" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.799" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:27.798" endtime="20210205 17:12:27.799"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:27.860" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/59 
 path_url=/posts/59 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:27.860" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/59 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc5411521962734be21a71c9cc4d175a51612563148; expires=Sun, 07-Mar-21 22:12:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '965', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"135-f8DoN5pkvK3E3Z4uNHbshLKUln0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23079', 'cf-request-id': '0815da05240000efe0e18b7000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=oo4I4pToCFJDo6kUkFrqChLAIQlad3sNzoGYm5xAXWBgOHHvS1sH1Yoq%2Bd8t78XVn59kv0WuivVE%2FpA71e%2B116PuQgXS700vsDFCYODti9BiA4nXrvNZDaYWswdI"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff91b6dfdefe0-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 59,
  "title": "qui commodi dolor at maiores et quis id accusantium",
  "body": "perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores suscipit voluptas et\nanimi doloribus cum rerum quas et magni\net hic ut ut commodi expedita sunt"
} 
 </msg>
<msg timestamp="20210205 17:12:27.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.799" endtime="20210205 17:12:27.860"></status>
</kw>
<msg timestamp="20210205 17:12:27.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.798" endtime="20210205 17:12:27.861"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.863" endtime="20210205 17:12:27.865"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.862" endtime="20210205 17:12:27.865"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.861" endtime="20210205 17:12:27.865"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.866" endtime="20210205 17:12:27.866"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.865" endtime="20210205 17:12:27.866"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.867" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.867" endtime="20210205 17:12:27.867"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.904" level="INFO">${idvalue} = [59]</msg>
<status status="PASS" starttime="20210205 17:12:27.867" endtime="20210205 17:12:27.904"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:27.905" level="INFO">${responseid} = 59</msg>
<status status="PASS" starttime="20210205 17:12:27.905" endtime="20210205 17:12:27.905"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.905" endtime="20210205 17:12:27.905"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.906" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.906" endtime="20210205 17:12:27.906"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.866" endtime="20210205 17:12:27.906"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.797" endtime="20210205 17:12:27.906"></status>
</kw>
<kw name="${postid} = 60" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.907" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:27.907" endtime="20210205 17:12:27.907"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:27.969" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/60 
 path_url=/posts/60 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:27.969" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/60 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=daedcca3610242f00811488dff0e532071612563148; expires=Sun, 07-Mar-21 22:12:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '995', 'X-Ratelimit-Reset': '1611642816', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10c-7tnlht60JBKnr58PtdEE+vo8WCI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23079', 'cf-request-id': '0815da05920000f03d3a045000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=aCyXiwQ1vmubMTfG9aePYOYoqOrTGvMT4lYMigT0Qv8oBd6ID0Z%2BT2ZNJe0TRENf25X4txpN1HHDYwil8HIJwaQqz9XLf0YR%2F6yRUtYzB8ndN6hrynz0shCDfn1l"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff91c1bbaf03d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 60,
  "title": "consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere",
  "body": "asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et fuga perferendis voluptas\nillo ratione amet aut et omnis"
} 
 </msg>
<msg timestamp="20210205 17:12:27.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.907" endtime="20210205 17:12:27.969"></status>
</kw>
<msg timestamp="20210205 17:12:27.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.906" endtime="20210205 17:12:27.970"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:27.972" endtime="20210205 17:12:27.974"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.971" endtime="20210205 17:12:27.974"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.970" endtime="20210205 17:12:27.974"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:27.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:27.975" endtime="20210205 17:12:27.975"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.975" endtime="20210205 17:12:27.976"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:27.976" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:27.976" endtime="20210205 17:12:27.976"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.011" level="INFO">${idvalue} = [60]</msg>
<status status="PASS" starttime="20210205 17:12:27.977" endtime="20210205 17:12:28.011"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:28.012" level="INFO">${responseid} = 60</msg>
<status status="PASS" starttime="20210205 17:12:28.012" endtime="20210205 17:12:28.012"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.012" endtime="20210205 17:12:28.012"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.013" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.013" endtime="20210205 17:12:28.013"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.976" endtime="20210205 17:12:28.013"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:27.906" endtime="20210205 17:12:28.013"></status>
</kw>
<kw name="${postid} = 61" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.014" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:28.014" endtime="20210205 17:12:28.015"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:28.066" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/61 
 path_url=/posts/61 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:28.066" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/61 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcecd671e61da739915b97297b787c07c1612563148; expires=Sun, 07-Mar-21 22:12:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '950', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"117-2lMq4LJFOqWrZ3nCurXp4bbe50g"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23079', 'cf-request-id': '0815da05f700003da8e80f0000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=5%2Bz1uSsOmy3i0J2Hrp%2BBures96pIdde2watCP%2Fv%2B6Hz1fIHr7GUcrZeeUOLkBfXRyxhA1AhBGiuQMG1DBC%2BUd1k92I6hiQAT3Uhwep555z75TZySP3yJl%2BuMkyAB"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff91cbdaa3da8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 61,
  "title": "voluptatem doloribus consectetur est ut ducimus",
  "body": "ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blanditiis debitis in nesciunt doloribus dicta dolores\nmagnam minus velit"
} 
 </msg>
<msg timestamp="20210205 17:12:28.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.015" endtime="20210205 17:12:28.067"></status>
</kw>
<msg timestamp="20210205 17:12:28.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.013" endtime="20210205 17:12:28.067"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.070" endtime="20210205 17:12:28.072"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.069" endtime="20210205 17:12:28.073"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.068" endtime="20210205 17:12:28.073"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.074" endtime="20210205 17:12:28.075"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.073" endtime="20210205 17:12:28.075"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.077" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.076" endtime="20210205 17:12:28.077"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.113" level="INFO">${idvalue} = [61]</msg>
<status status="PASS" starttime="20210205 17:12:28.077" endtime="20210205 17:12:28.113"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:28.113" level="INFO">${responseid} = 61</msg>
<status status="PASS" starttime="20210205 17:12:28.113" endtime="20210205 17:12:28.113"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.113" endtime="20210205 17:12:28.114"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.114" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.114" endtime="20210205 17:12:28.114"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.075" endtime="20210205 17:12:28.114"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.013" endtime="20210205 17:12:28.114"></status>
</kw>
<kw name="${postid} = 62" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.115" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:28.115" endtime="20210205 17:12:28.115"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:28.166" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/62 
 path_url=/posts/62 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:28.166" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/62 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8e625fc7143cd0f42026b6862dbd07e21612563148; expires=Sun, 07-Mar-21 22:12:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fc-wUwohCARVvkGoN5CwlwsirOR5iU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23079', 'cf-request-id': '0815da065a00003e2718213000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=WRNosuj5wUxjK%2BzvWPx10wPMvDfGhTwwoB3LZ8nSvDcRzdOTARlcCs%2F%2F4sng9Ma7vYX9whAsg%2FfvWczqIArOgvBw%2F9RaAHJSW482Aepm90zaSzuElkUPJVrAN7vY"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff91d58483e27-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 62,
  "title": "beatae enim quia vel",
  "body": "enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omnis\nquo molestiae omnis ea eveniet optio"
} 
 </msg>
<msg timestamp="20210205 17:12:28.167" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.115" endtime="20210205 17:12:28.167"></status>
</kw>
<msg timestamp="20210205 17:12:28.167" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.114" endtime="20210205 17:12:28.168"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.170" endtime="20210205 17:12:28.172"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.169" endtime="20210205 17:12:28.172"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.168" endtime="20210205 17:12:28.172"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.173" endtime="20210205 17:12:28.174"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.173" endtime="20210205 17:12:28.174"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.175" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.175" endtime="20210205 17:12:28.175"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.212" level="INFO">${idvalue} = [62]</msg>
<status status="PASS" starttime="20210205 17:12:28.175" endtime="20210205 17:12:28.212"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:28.213" level="INFO">${responseid} = 62</msg>
<status status="PASS" starttime="20210205 17:12:28.213" endtime="20210205 17:12:28.213"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.213" endtime="20210205 17:12:28.214"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.214" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.214" endtime="20210205 17:12:28.214"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.174" endtime="20210205 17:12:28.214"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.114" endtime="20210205 17:12:28.214"></status>
</kw>
<kw name="${postid} = 63" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.215" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:28.215" endtime="20210205 17:12:28.215"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:28.269" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/63 
 path_url=/posts/63 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:28.270" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/63 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9925b725b1f7ef5eaf6136bb405f2a271612563148; expires=Sun, 07-Mar-21 22:12:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"154-0kFmwh5nu5wS1Jzcpk0yszfjrjQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23079', 'cf-request-id': '0815da06be0000f015388e0000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=PS8kHGrLj90sdiiu2Y1tMv%2B9o%2BhKJ%2BR8FzpWPim%2FNC2oz6%2FkSNwfgNVEaAEaR9UxPopqv%2Bex6R2RlHvvxmNfvBgx3ZBmMgSQFQakjZikoT52FTSDCjlBPWILSYmJ"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff91dfb0df015-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 63,
  "title": "voluptas blanditiis repellendus animi ducimus error sapiente et suscipit",
  "body": "enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\nab delectus culpa quo reprehenderit blanditiis asperiores\naccusantium ut quam in voluptatibus voluptas ipsam dicta"
} 
 </msg>
<msg timestamp="20210205 17:12:28.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.215" endtime="20210205 17:12:28.270"></status>
</kw>
<msg timestamp="20210205 17:12:28.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.214" endtime="20210205 17:12:28.271"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.272" endtime="20210205 17:12:28.274"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.271" endtime="20210205 17:12:28.275"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.271" endtime="20210205 17:12:28.275"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.276" endtime="20210205 17:12:28.276"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.275" endtime="20210205 17:12:28.276"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.277" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.277" endtime="20210205 17:12:28.277"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.310" level="INFO">${idvalue} = [63]</msg>
<status status="PASS" starttime="20210205 17:12:28.278" endtime="20210205 17:12:28.310"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:28.311" level="INFO">${responseid} = 63</msg>
<status status="PASS" starttime="20210205 17:12:28.310" endtime="20210205 17:12:28.311"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.311" endtime="20210205 17:12:28.311"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.311" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.311" endtime="20210205 17:12:28.311"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.276" endtime="20210205 17:12:28.312"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.214" endtime="20210205 17:12:28.312"></status>
</kw>
<kw name="${postid} = 64" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.314" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:28.313" endtime="20210205 17:12:28.314"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:28.366" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/64 
 path_url=/posts/64 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:28.366" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/64 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d432acf99089ded9efb0719b57f07094d1612563148; expires=Sun, 07-Mar-21 22:12:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '960', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-fG+p7wNrgpgJUc/3oEW9IALNB1s"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23079', 'cf-request-id': '0815da0720000015776fa96000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=6FXn1Kmh5yKbx9sLsrzRdqOKhwhlzdFcUOw%2FdezTTlPMmb%2BBeCQZ1WB2HsnMTEtGCJzVWu3e1m2ngqcrxOYl5RYqt30KkreYNuEUZSzbDOeMQHAo%2BfQVlrkJr63D"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff91e9ae11577-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 64,
  "title": "et fugit quas eum in in aperiam quod",
  "body": "id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaque aut aut qui"
} 
 </msg>
<msg timestamp="20210205 17:12:28.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.314" endtime="20210205 17:12:28.366"></status>
</kw>
<msg timestamp="20210205 17:12:28.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.312" endtime="20210205 17:12:28.366"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.368" endtime="20210205 17:12:28.370"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.367" endtime="20210205 17:12:28.370"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.367" endtime="20210205 17:12:28.370"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.371" endtime="20210205 17:12:28.371"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.370" endtime="20210205 17:12:28.371"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.372" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.372" endtime="20210205 17:12:28.372"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.402" level="INFO">${idvalue} = [64]</msg>
<status status="PASS" starttime="20210205 17:12:28.372" endtime="20210205 17:12:28.402"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:28.403" level="INFO">${responseid} = 64</msg>
<status status="PASS" starttime="20210205 17:12:28.402" endtime="20210205 17:12:28.403"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.403" endtime="20210205 17:12:28.403"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.403" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.403" endtime="20210205 17:12:28.403"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.371" endtime="20210205 17:12:28.403"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.312" endtime="20210205 17:12:28.403"></status>
</kw>
<kw name="${postid} = 65" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.404" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:28.404" endtime="20210205 17:12:28.404"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:28.454" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/65 
 path_url=/posts/65 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:28.455" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/65 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de318f637d43272346aa97afb2d5121411612563148; expires=Sun, 07-Mar-21 22:12:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '955', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"108-o7Djqn++3cXC+SK+HeS4ds9s4Dk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '28359', 'cf-request-id': '0815da077b0000e7448c892000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=zssGVAXnI%2Fo%2B0nwbPNDFaJnUGlnNqFQwXLx2w8VhJJhtzK2pYdXJLBHie2xybajJ0KH%2FVAZ8MZBCSYiR5%2BHEXxoeMsPg8wEIPPMX6Tt7ZQZ2fFg0xKY%2FZuAeN89h"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff91f29fee744-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 65,
  "title": "consequatur id enim sunt et et",
  "body": "voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperiores et perferendis\nnatus id esse incidunt pariatur"
} 
 </msg>
<msg timestamp="20210205 17:12:28.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.405" endtime="20210205 17:12:28.455"></status>
</kw>
<msg timestamp="20210205 17:12:28.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.404" endtime="20210205 17:12:28.455"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.457" endtime="20210205 17:12:28.460"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.456" endtime="20210205 17:12:28.460"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.456" endtime="20210205 17:12:28.460"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.461" endtime="20210205 17:12:28.462"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.460" endtime="20210205 17:12:28.462"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.463" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.463" endtime="20210205 17:12:28.463"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.493" level="INFO">${idvalue} = [65]</msg>
<status status="PASS" starttime="20210205 17:12:28.463" endtime="20210205 17:12:28.493"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:28.494" level="INFO">${responseid} = 65</msg>
<status status="PASS" starttime="20210205 17:12:28.493" endtime="20210205 17:12:28.494"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.494" endtime="20210205 17:12:28.494"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.494" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.494" endtime="20210205 17:12:28.494"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.462" endtime="20210205 17:12:28.494"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.404" endtime="20210205 17:12:28.494"></status>
</kw>
<kw name="${postid} = 66" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.495" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:28.495" endtime="20210205 17:12:28.495"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:28.552" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/66 
 path_url=/posts/66 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:28.553" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/66 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d387f2cb389cd33f2b7c4ef72c0175c9a1612563148; expires=Sun, 07-Mar-21 22:12:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '943', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-wkA8VfsJ18Eh0sMF7Ua9wR/8DVg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23079', 'cf-request-id': '0815da07dc00000c913ebe6000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=4Rvtr%2FFIEd3jZj38ikfocxeGe7O5nVrCcmZ19hdEiubTG%2B%2Fbyo917Pwspd3nTD6RAKkCLu9xyuhdiflpntJjOZL4BXUKL%2Bn49FfDAaFfMpsdeh47GAEIPp11NAZt"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff91fcda90c91-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 66,
  "title": "repudiandae ea animi iusto",
  "body": "officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusdam et nemo iusto saepe"
} 
 </msg>
<msg timestamp="20210205 17:12:28.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.496" endtime="20210205 17:12:28.553"></status>
</kw>
<msg timestamp="20210205 17:12:28.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.495" endtime="20210205 17:12:28.554"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.556" endtime="20210205 17:12:28.559"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.555" endtime="20210205 17:12:28.559"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.554" endtime="20210205 17:12:28.559"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.560" endtime="20210205 17:12:28.561"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.560" endtime="20210205 17:12:28.561"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.561" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.561" endtime="20210205 17:12:28.561"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.589" level="INFO">${idvalue} = [66]</msg>
<status status="PASS" starttime="20210205 17:12:28.562" endtime="20210205 17:12:28.589"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:28.590" level="INFO">${responseid} = 66</msg>
<status status="PASS" starttime="20210205 17:12:28.590" endtime="20210205 17:12:28.590"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.590" endtime="20210205 17:12:28.590"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.591" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.590" endtime="20210205 17:12:28.591"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.561" endtime="20210205 17:12:28.591"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.495" endtime="20210205 17:12:28.591"></status>
</kw>
<kw name="${postid} = 67" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.592" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:28.591" endtime="20210205 17:12:28.592"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:28.744" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/67 
 path_url=/posts/67 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:28.744" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/67 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0f9cdc2fb433949810f2483175ed15f91612563148; expires=Sun, 07-Mar-21 22:12:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '959', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10a-zdbQphdSEl28vma+RxuMlor5ACo"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23079', 'cf-request-id': '0815da089c0000e85d5a8b9000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=F2%2Ft1Ll0dUSs77yNfln9xj8Ew2kmpyhBC3bW4ek65RGLynaLqs5aXP%2BbWx3zg3pnpBzaGBDRUg5rwguoCSFiNTEfuZ0gWtvw9pNp5Vmhe1kH2ERFCkyF8VdBxr69"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff920fe14e85d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 67,
  "title": "aliquid eos sed fuga est maxime repellendus",
  "body": "reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet\nnon sapiente et consequatur necessitatibus molestiae"
} 
 </msg>
<msg timestamp="20210205 17:12:28.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.592" endtime="20210205 17:12:28.745"></status>
</kw>
<msg timestamp="20210205 17:12:28.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.591" endtime="20210205 17:12:28.745"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.748" endtime="20210205 17:12:28.751"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.747" endtime="20210205 17:12:28.751"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.746" endtime="20210205 17:12:28.751"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.753" endtime="20210205 17:12:28.753"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.752" endtime="20210205 17:12:28.754"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.754" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.754" endtime="20210205 17:12:28.754"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.782" level="INFO">${idvalue} = [67]</msg>
<status status="PASS" starttime="20210205 17:12:28.755" endtime="20210205 17:12:28.782"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:28.783" level="INFO">${responseid} = 67</msg>
<status status="PASS" starttime="20210205 17:12:28.782" endtime="20210205 17:12:28.783"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.783" endtime="20210205 17:12:28.783"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.783" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.783" endtime="20210205 17:12:28.783"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.754" endtime="20210205 17:12:28.784"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.591" endtime="20210205 17:12:28.784"></status>
</kw>
<kw name="${postid} = 68" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.784" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:28.784" endtime="20210205 17:12:28.785"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:28.838" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/68 
 path_url=/posts/68 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:28.838" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/68 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9f84a992a1a26002662dfa4c9838ef141612563149; expires=Sun, 07-Mar-21 22:12:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '941', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ec-n7dxDg5V05y/RJHBgoUuNuvDA5M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23080', 'cf-request-id': '0815da08fc0000156ba0bfd000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=93z31j8l8JZAc6Zv0cJjmnpAiz3haExRWSge0VnVFOd8NOGwFPJp0Gg2WcDPPaztl5CZ3g8aKqlMFBqYqps5xdCc30MKKf9etjH0EHdUbcrZlMu9w8Jr%2BJ%2BfVuy2"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff9218be6156b-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 68,
  "title": "odio quis facere architecto reiciendis optio",
  "body": "magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti quidem saepe porro velit"
} 
 </msg>
<msg timestamp="20210205 17:12:28.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.785" endtime="20210205 17:12:28.838"></status>
</kw>
<msg timestamp="20210205 17:12:28.839" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.784" endtime="20210205 17:12:28.839"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.841" endtime="20210205 17:12:28.844"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.840" endtime="20210205 17:12:28.844"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.839" endtime="20210205 17:12:28.844"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.845" endtime="20210205 17:12:28.845"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.844" endtime="20210205 17:12:28.845"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.846" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.846" endtime="20210205 17:12:28.846"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.874" level="INFO">${idvalue} = [68]</msg>
<status status="PASS" starttime="20210205 17:12:28.846" endtime="20210205 17:12:28.874"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:28.874" level="INFO">${responseid} = 68</msg>
<status status="PASS" starttime="20210205 17:12:28.874" endtime="20210205 17:12:28.874"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:28.875" endtime="20210205 17:12:28.875"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:28.875" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:28.875" endtime="20210205 17:12:28.875"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.846" endtime="20210205 17:12:28.875"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.784" endtime="20210205 17:12:28.875"></status>
</kw>
<kw name="${postid} = 69" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:28.876" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:28.876" endtime="20210205 17:12:28.876"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:29.024" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/69 
 path_url=/posts/69 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:29.025" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/69 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d559878dd8e6c6cfa0e5353181b452a541612563149; expires=Sun, 07-Mar-21 22:12:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '939', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"137-6SkfkEH2vZX2tDrUhH6X9K8msxE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23080', 'cf-request-id': '0815da09b40000e6c0ba025000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=gpAqJTwfWOWkSjvmYUXHXoN9EOyveWYdmdH6Y9BQH2NZbQZSQy4%2FBGjkqfhn4XkntKkoVqfxuN4i8UTW3NlxXn9K5c9IHvf18vnkRQrK5VwieTpfmDo2WGRrVFff"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff922bd27e6c0-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 69,
  "title": "fugiat quod pariatur odit minima",
  "body": "officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\nsequi commodi repudiandae asperiores et saepe a"
} 
 </msg>
<msg timestamp="20210205 17:12:29.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.876" endtime="20210205 17:12:29.025"></status>
</kw>
<msg timestamp="20210205 17:12:29.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:28.875" endtime="20210205 17:12:29.025"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.027" endtime="20210205 17:12:29.029"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.026" endtime="20210205 17:12:29.029"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.025" endtime="20210205 17:12:29.029"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.030" endtime="20210205 17:12:29.031"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.029" endtime="20210205 17:12:29.031"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.031" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.031" endtime="20210205 17:12:29.031"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.059" level="INFO">${idvalue} = [69]</msg>
<status status="PASS" starttime="20210205 17:12:29.031" endtime="20210205 17:12:29.059"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:29.060" level="INFO">${responseid} = 69</msg>
<status status="PASS" starttime="20210205 17:12:29.060" endtime="20210205 17:12:29.060"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.060" endtime="20210205 17:12:29.060"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.061" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.060" endtime="20210205 17:12:29.061"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.031" endtime="20210205 17:12:29.061"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:28.875" endtime="20210205 17:12:29.061"></status>
</kw>
<kw name="${postid} = 70" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.062" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:29.061" endtime="20210205 17:12:29.062"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:29.109" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/70 
 path_url=/posts/70 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:29.110" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/70 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4e5318d8d1069ae6d407df9c0452ca331612563149; expires=Sun, 07-Mar-21 22:12:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '954', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d4-rM/RXlmI+ICK+LslODlpNGE3yUw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23080', 'cf-request-id': '0815da0a0b00000ccd45b6f000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mFSEme%2FH0x3zcEiFzsx3L%2BDX6VBES%2FEM8KSygLYkRMk8NOWQAQk6Ak%2B90PTFh2SFHJr8wqCRd7VrjTbjsMWx8oEkWsw5PYdO4mgRGwEXhinKArJsxOeYj23T8aCi"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff9234d8b0ccd-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 70,
  "title": "voluptatem laborum magni",
  "body": "sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore"
} 
 </msg>
<msg timestamp="20210205 17:12:29.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.062" endtime="20210205 17:12:29.110"></status>
</kw>
<msg timestamp="20210205 17:12:29.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.061" endtime="20210205 17:12:29.111"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.114" endtime="20210205 17:12:29.116"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.112" endtime="20210205 17:12:29.116"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.111" endtime="20210205 17:12:29.116"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.117" endtime="20210205 17:12:29.117"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.116" endtime="20210205 17:12:29.117"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.118" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.118" endtime="20210205 17:12:29.118"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.157" level="INFO">${idvalue} = [70]</msg>
<status status="PASS" starttime="20210205 17:12:29.119" endtime="20210205 17:12:29.157"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:29.158" level="INFO">${responseid} = 70</msg>
<status status="PASS" starttime="20210205 17:12:29.157" endtime="20210205 17:12:29.158"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.158" endtime="20210205 17:12:29.158"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.159" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.158" endtime="20210205 17:12:29.159"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.117" endtime="20210205 17:12:29.159"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.061" endtime="20210205 17:12:29.159"></status>
</kw>
<kw name="${postid} = 71" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.160" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:29.160" endtime="20210205 17:12:29.160"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:29.307" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/71 
 path_url=/posts/71 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:29.307" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/71 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbad161b41be04967d5978ecd37c551541612563149; expires=Sun, 07-Mar-21 22:12:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '938', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e8-Yh7j20Q0i9NFG2BtR9OGdKEdmek"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23080', 'cf-request-id': '0815da0acb00003dd3b287b000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=iTw1F%2FBn%2BIOfM0a3N5gYD%2BxcuwGhfkh%2BhsSFqxr456CUU4WRB5Ztc3rSX8z0RFoFFWc7M0%2FAhl32dr0tM1hiftEsrxFPp56IXDIgA8ed0rwku1Ggc%2FPOwjbUPsGs"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9247ae63dd3-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 71,
  "title": "et iusto veniam et illum aut fuga",
  "body": "occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim velit est perferendis"
} 
 </msg>
<msg timestamp="20210205 17:12:29.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.160" endtime="20210205 17:12:29.307"></status>
</kw>
<msg timestamp="20210205 17:12:29.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.159" endtime="20210205 17:12:29.308"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.309" endtime="20210205 17:12:29.311"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.309" endtime="20210205 17:12:29.311"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.308" endtime="20210205 17:12:29.311"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.312" endtime="20210205 17:12:29.312"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.311" endtime="20210205 17:12:29.313"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.313" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.313" endtime="20210205 17:12:29.313"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.342" level="INFO">${idvalue} = [71]</msg>
<status status="PASS" starttime="20210205 17:12:29.313" endtime="20210205 17:12:29.342"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:29.342" level="INFO">${responseid} = 71</msg>
<status status="PASS" starttime="20210205 17:12:29.342" endtime="20210205 17:12:29.342"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.343" endtime="20210205 17:12:29.343"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.343" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.343" endtime="20210205 17:12:29.343"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.313" endtime="20210205 17:12:29.343"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.159" endtime="20210205 17:12:29.343"></status>
</kw>
<kw name="${postid} = 72" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.345" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:29.344" endtime="20210205 17:12:29.345"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:29.394" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/72 
 path_url=/posts/72 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:29.394" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/72 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d20aafcab25dda066ffb5a4589b2b9d391612563149; expires=Sun, 07-Mar-21 22:12:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '935', 'X-Ratelimit-Reset': '1612110657', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"116-H6k0vQJtj/XCaxWK+1+y9a8ry70"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23080', 'cf-request-id': '0815da0b2a00003e277a9be000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Nq95xFrJK1lhuZTLJX35n%2BRIPf26hSdRJpv1D7qhdZ06M%2BSJEPy3BfDOadFIaExOB%2BcOxdO%2BqR%2FhjyiE4cIxyJQ16DrFelx1QUjWYfvwjYlyzYYn3VtALkgbI1hy"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff92518613e27-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 72,
  "title": "sint hic doloribus consequatur eos non id",
  "body": "quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque id sunt ut aut accusamus\nsunt consectetur expedita inventore velit"
} 
 </msg>
<msg timestamp="20210205 17:12:29.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.345" endtime="20210205 17:12:29.395"></status>
</kw>
<msg timestamp="20210205 17:12:29.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.344" endtime="20210205 17:12:29.395"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.397" endtime="20210205 17:12:29.400"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.396" endtime="20210205 17:12:29.400"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.396" endtime="20210205 17:12:29.400"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.401" endtime="20210205 17:12:29.402"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.400" endtime="20210205 17:12:29.402"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.403" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.403" endtime="20210205 17:12:29.403"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.442" level="INFO">${idvalue} = [72]</msg>
<status status="PASS" starttime="20210205 17:12:29.403" endtime="20210205 17:12:29.442"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:29.443" level="INFO">${responseid} = 72</msg>
<status status="PASS" starttime="20210205 17:12:29.442" endtime="20210205 17:12:29.443"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.443" endtime="20210205 17:12:29.443"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.444" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.444" endtime="20210205 17:12:29.444"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.402" endtime="20210205 17:12:29.444"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.344" endtime="20210205 17:12:29.444"></status>
</kw>
<kw name="${postid} = 73" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.445" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:29.445" endtime="20210205 17:12:29.445"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:29.587" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/73 
 path_url=/posts/73 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:29.588" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/73 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d675de0c14a03bfd7fda472614742a40c1612563149; expires=Sun, 07-Mar-21 22:12:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '936', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11f-rOkoGp9hOJP88vceK/3kAJdMgVE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23080', 'cf-request-id': '0815da0be60000924c25afa000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=4aciVt10xWDEsNKti%2F96%2BTXEFAFhrwfhZxzCHz0Dtxu0oc278JSDDlbZoETLMZxOEyJnuumCb8U8OQQFZ2PBDREfrkJSrEmQZJukp4l8pGZciNCcfepQXdfP422Q"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9263950924c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 73,
  "title": "consequuntur deleniti eos quia temporibus ab aliquid at",
  "body": "voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatur\ntempore cumque quae est et\net in consequuntur voluptatem voluptates aut"
} 
 </msg>
<msg timestamp="20210205 17:12:29.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.445" endtime="20210205 17:12:29.588"></status>
</kw>
<msg timestamp="20210205 17:12:29.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.444" endtime="20210205 17:12:29.589"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.592" endtime="20210205 17:12:29.595"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.590" endtime="20210205 17:12:29.595"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.589" endtime="20210205 17:12:29.596"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.599" endtime="20210205 17:12:29.600"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.596" endtime="20210205 17:12:29.601"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.603" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.603" endtime="20210205 17:12:29.603"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.667" level="INFO">${idvalue} = [73]</msg>
<status status="PASS" starttime="20210205 17:12:29.604" endtime="20210205 17:12:29.667"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:29.667" level="INFO">${responseid} = 73</msg>
<status status="PASS" starttime="20210205 17:12:29.667" endtime="20210205 17:12:29.667"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.667" endtime="20210205 17:12:29.668"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.668" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.668" endtime="20210205 17:12:29.668"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.601" endtime="20210205 17:12:29.668"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.444" endtime="20210205 17:12:29.669"></status>
</kw>
<kw name="${postid} = 74" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.670" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:29.669" endtime="20210205 17:12:29.670"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:29.845" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/74 
 path_url=/posts/74 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:29.845" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/74 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0a9f605a7a7d4b47144c48f4c150e4d21612563150; expires=Sun, 07-Mar-21 22:12:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612369190', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"128-7qIwxKiVOzrfywOEfThc/blClHw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23081', 'cf-request-id': '0815da0cec0000ccd285a1b000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=2dZZGnlIGR55qR3hUFy8B9e1wG2GUpMucyLLRtnlfgLgCMpXW8Fv7Mo07%2By%2FujD6eRIGRk%2FVscqSTwJz1%2FxK0YwkoR9tu05yMTr7hGSjnURCF5ISx8kNsMR8HIPT"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff927d98bccd2-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 74,
  "title": "enim unde ratione doloribus quas enim ut sit sapiente",
  "body": "odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magnam et quam\nblanditiis est itaque\nquo et tenetur ratione occaecati molestiae tempora"
} 
 </msg>
<msg timestamp="20210205 17:12:29.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.671" endtime="20210205 17:12:29.845"></status>
</kw>
<msg timestamp="20210205 17:12:29.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.669" endtime="20210205 17:12:29.846"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.847" endtime="20210205 17:12:29.849"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.846" endtime="20210205 17:12:29.850"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.846" endtime="20210205 17:12:29.850"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.851" endtime="20210205 17:12:29.851"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.850" endtime="20210205 17:12:29.851"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.852" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.852" endtime="20210205 17:12:29.852"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.886" level="INFO">${idvalue} = [74]</msg>
<status status="PASS" starttime="20210205 17:12:29.852" endtime="20210205 17:12:29.886"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:29.887" level="INFO">${responseid} = 74</msg>
<status status="PASS" starttime="20210205 17:12:29.886" endtime="20210205 17:12:29.887"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.887" endtime="20210205 17:12:29.887"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.887" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.887" endtime="20210205 17:12:29.888"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.851" endtime="20210205 17:12:29.888"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.669" endtime="20210205 17:12:29.888"></status>
</kw>
<kw name="${postid} = 75" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.888" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:29.888" endtime="20210205 17:12:29.889"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:29.944" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/75 
 path_url=/posts/75 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:29.944" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/75 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dacced2bf2082a9f442a6f2c7461348471612563150; expires=Sun, 07-Mar-21 22:12:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '931', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"12d-f7+LvQ2H9gp0KtIQ9o5Rm53qeaE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23081', 'cf-request-id': '0815da0d4a0000155ef1a1d000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=byqZJeGMPgu2Ffoz8xtY2AAtZ3OODS%2BFB2X5Jjn4Ha6iw2FLwpzBrvQbVY7rqUiSq%2BtX3BXMD%2B7p89ec3s0wA6i4hheYW2%2B%2Fk8U0XQiz%2FTldrIgxCS%2F6jJLef18h"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9287add155e-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 75,
  "title": "dignissimos eum dolor ut enim et delectus in",
  "body": "commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui delectus facilis temporibus\nrerum amet et nemo voluptate expedita adipisci error dolorem"
} 
 </msg>
<msg timestamp="20210205 17:12:29.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.889" endtime="20210205 17:12:29.944"></status>
</kw>
<msg timestamp="20210205 17:12:29.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.888" endtime="20210205 17:12:29.945"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.946" endtime="20210205 17:12:29.948"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.945" endtime="20210205 17:12:29.948"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.945" endtime="20210205 17:12:29.948"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.949" endtime="20210205 17:12:29.951"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.948" endtime="20210205 17:12:29.951"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.953" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.953" endtime="20210205 17:12:29.953"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.984" level="INFO">${idvalue} = [75]</msg>
<status status="PASS" starttime="20210205 17:12:29.953" endtime="20210205 17:12:29.984"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:29.985" level="INFO">${responseid} = 75</msg>
<status status="PASS" starttime="20210205 17:12:29.984" endtime="20210205 17:12:29.985"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:29.985" endtime="20210205 17:12:29.985"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:29.985" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:29.985" endtime="20210205 17:12:29.985"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.951" endtime="20210205 17:12:29.985"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.888" endtime="20210205 17:12:29.985"></status>
</kw>
<kw name="${postid} = 76" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:29.986" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:29.986" endtime="20210205 17:12:29.986"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:30.099" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/76 
 path_url=/posts/76 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:30.099" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/76 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d165c6cc0a15ef8b72fa2af71c6b178e71612563150; expires=Sun, 07-Mar-21 22:12:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '947', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"cc-u0/g+lWkxIsGyIKpelypYLpuJj8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23081', 'cf-request-id': '0815da0dc400003e58f0333000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ugjDRue5oRFFXK3oTkfHDLh6ygM7YFNKzJ0QXlqZqRvwaEhCiusYe3cns3QIjbNVnxa7cWhiZat%2BfMzUF6dPlJc%2Bki9kR3Aci%2FbU0Uu%2B%2FaytoQhDY2x2bSp2rPyg"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9293c033e58-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 76,
  "title": "doloremque officiis ad et non perferendis",
  "body": "ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio"
} 
 </msg>
<msg timestamp="20210205 17:12:30.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.987" endtime="20210205 17:12:30.100"></status>
</kw>
<msg timestamp="20210205 17:12:30.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:29.986" endtime="20210205 17:12:30.100"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.102" endtime="20210205 17:12:30.104"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.101" endtime="20210205 17:12:30.104"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.101" endtime="20210205 17:12:30.104"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.105" endtime="20210205 17:12:30.106"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.104" endtime="20210205 17:12:30.106"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.107" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.106" endtime="20210205 17:12:30.107"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.143" level="INFO">${idvalue} = [76]</msg>
<status status="PASS" starttime="20210205 17:12:30.107" endtime="20210205 17:12:30.143"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:30.143" level="INFO">${responseid} = 76</msg>
<status status="PASS" starttime="20210205 17:12:30.143" endtime="20210205 17:12:30.143"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.143" endtime="20210205 17:12:30.144"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.144" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.144" endtime="20210205 17:12:30.144"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.106" endtime="20210205 17:12:30.144"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:29.986" endtime="20210205 17:12:30.144"></status>
</kw>
<kw name="${postid} = 77" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.145" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:30.145" endtime="20210205 17:12:30.145"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:30.196" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/77 
 path_url=/posts/77 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:30.197" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/77 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d81ffe5625ca59f679ccf376819e2e4501612563150; expires=Sun, 07-Mar-21 22:12:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '995', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11f-2lbe4Q56bYTg/IcJf6JOSbSCscI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23081', 'cf-request-id': '0815da0e48000091f2a5ae7000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=eouF06Bw2TSq4i%2B4Z8E1jFFEnJe4ApkfyneXrM5y8U0n7PaC2iMkjf4ltk25x9p2bYnqe%2F8qGLmvH2B4tYAmh4X59QcqA%2BQw3YY3%2FqNjEfh3rs2hdqLzVM%2FawsHV"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff92a0fd991f2-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 77,
  "title": "necessitatibus quasi exercitationem odio",
  "body": "modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident"
} 
 </msg>
<msg timestamp="20210205 17:12:30.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.145" endtime="20210205 17:12:30.197"></status>
</kw>
<msg timestamp="20210205 17:12:30.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.144" endtime="20210205 17:12:30.198"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.200" endtime="20210205 17:12:30.203"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.198" endtime="20210205 17:12:30.203"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.198" endtime="20210205 17:12:30.203"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.204" endtime="20210205 17:12:30.204"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.203" endtime="20210205 17:12:30.205"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.205" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.205" endtime="20210205 17:12:30.205"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.239" level="INFO">${idvalue} = [77]</msg>
<status status="PASS" starttime="20210205 17:12:30.206" endtime="20210205 17:12:30.239"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:30.240" level="INFO">${responseid} = 77</msg>
<status status="PASS" starttime="20210205 17:12:30.239" endtime="20210205 17:12:30.240"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.240" endtime="20210205 17:12:30.240"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.241" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.240" endtime="20210205 17:12:30.241"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.205" endtime="20210205 17:12:30.241"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.144" endtime="20210205 17:12:30.241"></status>
</kw>
<kw name="${postid} = 78" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.242" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:30.242" endtime="20210205 17:12:30.242"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:30.383" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/78 
 path_url=/posts/78 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:30.383" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/78 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d988c207f7df7c54f780779aafc2ac9bd1612563150; expires=Sun, 07-Mar-21 22:12:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d3-xKs0MgAtIORio5QR/VxM9bC/XYc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23081', 'cf-request-id': '0815da0f0000003e4b0b18d000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=CewLZmskqPmWTYegVlgfmRwyfDQtQcFqe7WVu47RJDCSeB6kdDq3%2BwVzQWf8o%2FGQ6LwK044O3TsSamncv1U4PVE%2BoRoS2Jbg6qFgT6V6aoWOrp2b8wwl%2B%2BW2tMye"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff92b3fd63e4b-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 78,
  "title": "quam voluptatibus rerum veritatis",
  "body": "nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus"
} 
 </msg>
<msg timestamp="20210205 17:12:30.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.242" endtime="20210205 17:12:30.384"></status>
</kw>
<msg timestamp="20210205 17:12:30.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.241" endtime="20210205 17:12:30.384"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.385" endtime="20210205 17:12:30.387"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.385" endtime="20210205 17:12:30.387"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.384" endtime="20210205 17:12:30.387"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.388" endtime="20210205 17:12:30.388"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.387" endtime="20210205 17:12:30.389"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.389" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.389" endtime="20210205 17:12:30.389"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.434" level="INFO">${idvalue} = [78]</msg>
<status status="PASS" starttime="20210205 17:12:30.390" endtime="20210205 17:12:30.434"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:30.434" level="INFO">${responseid} = 78</msg>
<status status="PASS" starttime="20210205 17:12:30.434" endtime="20210205 17:12:30.435"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.435" endtime="20210205 17:12:30.435"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.435" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.435" endtime="20210205 17:12:30.435"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.389" endtime="20210205 17:12:30.435"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.241" endtime="20210205 17:12:30.435"></status>
</kw>
<kw name="${postid} = 79" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.436" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:30.436" endtime="20210205 17:12:30.436"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:30.602" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/79 
 path_url=/posts/79 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:30.602" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/79 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d48ecbdf0e624087ec78a8fa823a64e081612563150; expires=Sun, 07-Mar-21 22:12:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '930', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"110-2pubCm1Sfl7Y7qFtirsYZCcorgA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23081', 'cf-request-id': '0815da0f6a0000e84de594a000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=D0%2BY%2Bo69NQGA9RScWOOjMQslptkRKUS%2FqbAvAx2NDz53BdZ2Y5yY0nXj2mWNY1VAeAu4X4RVjH1dwMLgoRMoh2pR8s%2FFg%2Bd%2BNmks5J4wkn8bSlo9cef1PYb1ZYS5"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff92bdb3ae84d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 79,
  "title": "pariatur consequatur quia magnam autem omnis non amet",
  "body": "libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam molestiae ducimus est\nofficiis esse molestiae iste et quos"
} 
 </msg>
<msg timestamp="20210205 17:12:30.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.437" endtime="20210205 17:12:30.603"></status>
</kw>
<msg timestamp="20210205 17:12:30.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.435" endtime="20210205 17:12:30.604"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.606" endtime="20210205 17:12:30.609"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.605" endtime="20210205 17:12:30.609"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.604" endtime="20210205 17:12:30.610"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.611" endtime="20210205 17:12:30.612"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.610" endtime="20210205 17:12:30.612"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.613" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.613" endtime="20210205 17:12:30.613"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.642" level="INFO">${idvalue} = [79]</msg>
<status status="PASS" starttime="20210205 17:12:30.613" endtime="20210205 17:12:30.642"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:30.642" level="INFO">${responseid} = 79</msg>
<status status="PASS" starttime="20210205 17:12:30.642" endtime="20210205 17:12:30.642"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.642" endtime="20210205 17:12:30.643"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.643" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.643" endtime="20210205 17:12:30.643"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.612" endtime="20210205 17:12:30.643"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.435" endtime="20210205 17:12:30.643"></status>
</kw>
<kw name="${postid} = 80" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.644" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:30.644" endtime="20210205 17:12:30.644"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:30.693" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/80 
 path_url=/posts/80 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:30.693" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/80 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4ae96216420dab25596c4b04b1fba14c1612563150; expires=Sun, 07-Mar-21 22:12:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '993', 'X-Ratelimit-Reset': '1611642816', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11c-0HY/hHFa5y+uiyBfjGo3n4UDzu8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23081', 'cf-request-id': '0815da10380000e75492aca000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BXqQg5hxIPdARUitx98zzzSol7p1SEdDw6ghVcxhA8LfxQu0KvA0kz%2BSQMdUcbLv%2Fo6H3rY3DcJjuINAgJ9DbAtYWY4DFkiLyvTaUBvPvmAcvB76qNWnDxCTgqYc"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff92d2a57e754-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 80,
  "title": "labore in ex et explicabo corporis aut quas",
  "body": "ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias provident\nminus incidunt vero fugit rerum sint sunt excepturi provident"
} 
 </msg>
<msg timestamp="20210205 17:12:30.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.644" endtime="20210205 17:12:30.693"></status>
</kw>
<msg timestamp="20210205 17:12:30.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.643" endtime="20210205 17:12:30.694"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.696" endtime="20210205 17:12:30.698"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.695" endtime="20210205 17:12:30.699"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.694" endtime="20210205 17:12:30.699"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.700" endtime="20210205 17:12:30.700"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.699" endtime="20210205 17:12:30.701"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.702" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.702" endtime="20210205 17:12:30.702"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.734" level="INFO">${idvalue} = [80]</msg>
<status status="PASS" starttime="20210205 17:12:30.702" endtime="20210205 17:12:30.734"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:30.735" level="INFO">${responseid} = 80</msg>
<status status="PASS" starttime="20210205 17:12:30.734" endtime="20210205 17:12:30.735"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.735" endtime="20210205 17:12:30.735"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.736" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.735" endtime="20210205 17:12:30.736"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.701" endtime="20210205 17:12:30.736"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.643" endtime="20210205 17:12:30.736"></status>
</kw>
<kw name="${postid} = 81" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.738" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:30.737" endtime="20210205 17:12:30.738"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:30.895" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/81 
 path_url=/posts/81 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:30.895" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/81 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7ac0d3025575eeb4ef0398a513826e5c1612563151; expires=Sun, 07-Mar-21 22:12:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '928', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"132-WQvU4RaGGtekXO5F/gjY3m5r2rE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23082', 'cf-request-id': '0815da110500003e0f84865000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=zwZDulycjNVC6J2gomRoZ0FJQ1HJfPwzj%2BEtJXvnFzdTMYjxBImyJSWIIEZ%2FHI7%2BFw000SxDUj%2F7OsD1WY1GHfIafOdYgI6%2B9fl1Skl8m5eTMJukDV%2FUOx6sVRtu"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff92e6b933e0f-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 81,
  "title": "tempora rem veritatis voluptas quo dolores vero",
  "body": "facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum non ratione velit laboriosam quis consequuntur\nex officiis minima doloremque voluptas ut aut"
} 
 </msg>
<msg timestamp="20210205 17:12:30.895" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.738" endtime="20210205 17:12:30.895"></status>
</kw>
<msg timestamp="20210205 17:12:30.895" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.736" endtime="20210205 17:12:30.895"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.897" endtime="20210205 17:12:30.900"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.896" endtime="20210205 17:12:30.900"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.896" endtime="20210205 17:12:30.900"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.901" endtime="20210205 17:12:30.902"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.900" endtime="20210205 17:12:30.902"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.903" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.903" endtime="20210205 17:12:30.903"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.949" level="INFO">${idvalue} = [81]</msg>
<status status="PASS" starttime="20210205 17:12:30.903" endtime="20210205 17:12:30.949"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:30.949" level="INFO">${responseid} = 81</msg>
<status status="PASS" starttime="20210205 17:12:30.949" endtime="20210205 17:12:30.950"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:30.950" endtime="20210205 17:12:30.950"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:30.951" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:30.950" endtime="20210205 17:12:30.951"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.902" endtime="20210205 17:12:30.951"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.736" endtime="20210205 17:12:30.951"></status>
</kw>
<kw name="${postid} = 82" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:30.954" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:30.953" endtime="20210205 17:12:30.954"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:31.133" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/82 
 path_url=/posts/82 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:31.133" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/82 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d73eac5c98d820689876337f64f8c92191612563151; expires=Sun, 07-Mar-21 22:12:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '927', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11c-eeFdAk1e1gEi8uyXsudyKBm1kV0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23082', 'cf-request-id': '0815da11810000158b10bb5000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=o8ClOb9Te0e6tYPuUZ%2BMMAbtKTPsNViH%2F94jZ31ZYe0hX7lJcGn2lmX%2FKHpos4jQEO4cQ1E4UbpxWsrcIynMoFM5v63XogV1apTsaf8IglF0DLyeYgLMYVrk2QpS"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff92f3a69158b-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 82,
  "title": "laudantium voluptate suscipit sunt enim enim",
  "body": "ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus adipisci\ndolor enim assumenda soluta laboriosam amet iste delectus hic"
} 
 </msg>
<msg timestamp="20210205 17:12:31.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.954" endtime="20210205 17:12:31.134"></status>
</kw>
<msg timestamp="20210205 17:12:31.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:30.952" endtime="20210205 17:12:31.134"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.137" endtime="20210205 17:12:31.139"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.136" endtime="20210205 17:12:31.139"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.135" endtime="20210205 17:12:31.139"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.140" endtime="20210205 17:12:31.141"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.140" endtime="20210205 17:12:31.141"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.142" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.142" endtime="20210205 17:12:31.142"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.196" level="INFO">${idvalue} = [82]</msg>
<status status="PASS" starttime="20210205 17:12:31.142" endtime="20210205 17:12:31.196"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:31.196" level="INFO">${responseid} = 82</msg>
<status status="PASS" starttime="20210205 17:12:31.196" endtime="20210205 17:12:31.196"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.197" endtime="20210205 17:12:31.197"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.198" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.198" endtime="20210205 17:12:31.198"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.141" endtime="20210205 17:12:31.198"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:30.951" endtime="20210205 17:12:31.198"></status>
</kw>
<kw name="${postid} = 83" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.200" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:31.200" endtime="20210205 17:12:31.201"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:31.255" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/83 
 path_url=/posts/83 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:31.256" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/83 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=daa1871597927ab822096092cb5b819041612563151; expires=Sun, 07-Mar-21 22:12:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '926', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11d-e5gcZg196MbfLRv+N5/t/INg4U4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23082', 'cf-request-id': '0815da126e0000159762a04000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=q%2B%2Fk20Vz%2BJGc65UuHhX3uawL2mPeTWm%2BvsSKR%2BccWX%2FwogcYgcKpmXO1C9yu%2B5nqj9HQd0d3cRU%2B86ewftvRHbk%2F5vdMwhfu9Z1CzQPYYnnL4dLqW5jqfinb%2F2c6"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff930ab421597-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 83,
  "title": "odit et voluptates doloribus alias odio et",
  "body": "est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\nreprehenderit eius rem quibusdam"
} 
 </msg>
<msg timestamp="20210205 17:12:31.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.201" endtime="20210205 17:12:31.256"></status>
</kw>
<msg timestamp="20210205 17:12:31.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.199" endtime="20210205 17:12:31.256"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.258" endtime="20210205 17:12:31.260"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.257" endtime="20210205 17:12:31.260"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.257" endtime="20210205 17:12:31.260"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.261" endtime="20210205 17:12:31.261"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.260" endtime="20210205 17:12:31.261"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.262" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.262" endtime="20210205 17:12:31.262"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.298" level="INFO">${idvalue} = [83]</msg>
<status status="PASS" starttime="20210205 17:12:31.262" endtime="20210205 17:12:31.298"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:31.299" level="INFO">${responseid} = 83</msg>
<status status="PASS" starttime="20210205 17:12:31.298" endtime="20210205 17:12:31.299"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.299" endtime="20210205 17:12:31.300"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.300" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.300" endtime="20210205 17:12:31.300"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.261" endtime="20210205 17:12:31.300"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.198" endtime="20210205 17:12:31.300"></status>
</kw>
<kw name="${postid} = 84" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.302" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:31.301" endtime="20210205 17:12:31.302"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:31.444" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/84 
 path_url=/posts/84 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:31.445" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/84 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0f6dd4a58cd2d1a06c30769488df9f521612563151; expires=Sun, 07-Mar-21 22:12:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '925', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10f-9j78zFP2xPokwlOnDdjXgjDNtRw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23082', 'cf-request-id': '0815da132700003e09b8b9d000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=0OYLyUSkWvVuuQlF%2FizbsbCsK5Qcj2JV7M2FGW5KaMICnwhYYpEo6474ayIFOQ0lF%2Fesww99opbHlkm08h3%2BtuZA0eq67iJBHFCqF%2BjEKFRtm0Jtv8XW%2Fm0TR2ll"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff931da2a3e09-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 84,
  "title": "optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut",
  "body": "sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique veniam\nrecusandae dignissimos dolor incidunt consequatur odio"
} 
 </msg>
<msg timestamp="20210205 17:12:31.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.302" endtime="20210205 17:12:31.445"></status>
</kw>
<msg timestamp="20210205 17:12:31.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.301" endtime="20210205 17:12:31.446"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.449" endtime="20210205 17:12:31.453"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.448" endtime="20210205 17:12:31.453"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.446" endtime="20210205 17:12:31.453"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.454" endtime="20210205 17:12:31.454"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.453" endtime="20210205 17:12:31.455"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.455" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.455" endtime="20210205 17:12:31.455"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.483" level="INFO">${idvalue} = [84]</msg>
<status status="PASS" starttime="20210205 17:12:31.455" endtime="20210205 17:12:31.483"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:31.483" level="INFO">${responseid} = 84</msg>
<status status="PASS" starttime="20210205 17:12:31.483" endtime="20210205 17:12:31.484"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.484" endtime="20210205 17:12:31.484"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.484" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.484" endtime="20210205 17:12:31.484"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.455" endtime="20210205 17:12:31.484"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.301" endtime="20210205 17:12:31.484"></status>
</kw>
<kw name="${postid} = 85" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.485" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:31.485" endtime="20210205 17:12:31.485"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:31.536" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/85 
 path_url=/posts/85 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:31.537" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/85 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbc82074685a2bd1f5dee7de579c9ce0e1612563151; expires=Sun, 07-Mar-21 22:12:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '924', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-EiZY//e3eHc6o7YCr0c2BxbG4NU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23082', 'cf-request-id': '0815da138400000cd5938b7000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=TaTLYcG7TOxJ5QqbemI8JDkov0bDeDMAMTT0uo2OOwy6tRYeT3PX2liY1fMkCR%2By9zildlHxGwTwiXRp1y04UO72dB8SjDd0dmjNdeu1yuYnrwgJpjroD1A4KaRr"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff9326df80cd5-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 85,
  "title": "dolore veritatis porro provident adipisci blanditiis et sunt",
  "body": "similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam sint sed tempora\nenim provident pariatur praesentium atque animi amet ratione"
} 
 </msg>
<msg timestamp="20210205 17:12:31.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.485" endtime="20210205 17:12:31.537"></status>
</kw>
<msg timestamp="20210205 17:12:31.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.484" endtime="20210205 17:12:31.537"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.539" endtime="20210205 17:12:31.540"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.538" endtime="20210205 17:12:31.540"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.537" endtime="20210205 17:12:31.541"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.541" endtime="20210205 17:12:31.542"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.541" endtime="20210205 17:12:31.542"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.542" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.542" endtime="20210205 17:12:31.543"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.610" level="INFO">${idvalue} = [85]</msg>
<status status="PASS" starttime="20210205 17:12:31.543" endtime="20210205 17:12:31.610"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:31.610" level="INFO">${responseid} = 85</msg>
<status status="PASS" starttime="20210205 17:12:31.610" endtime="20210205 17:12:31.610"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.611" endtime="20210205 17:12:31.611"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.612" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.611" endtime="20210205 17:12:31.612"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.542" endtime="20210205 17:12:31.612"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.484" endtime="20210205 17:12:31.612"></status>
</kw>
<kw name="${postid} = 86" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.613" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:31.613" endtime="20210205 17:12:31.614"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:31.716" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/86 
 path_url=/posts/86 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:31.716" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/86 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d384926a6f30fe74767139a3630c1b1291612563151; expires=Sun, 07-Mar-21 22:12:31 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '923', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"102-z1kgT9P52YzKL5Lr1auwY9AtvAY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23082', 'cf-request-id': '0815da14390000e8559b9ef000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=b28Egigi084wx6q%2BHRcVoqIfztgkAmg%2BekBZXrtYj7BiKuO2eUnwRz0XsOVQah%2B1CeYX1QavTdNjiXdSc2oejQcFAEnLHdCMYJs4VhNxKdqy4KEmPHIh5zybj5hU"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9338c44e855-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 86,
  "title": "placeat quia et porro iste",
  "body": "quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel explicabo autem\nasperiores pariatur deserunt optio"
} 
 </msg>
<msg timestamp="20210205 17:12:31.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.614" endtime="20210205 17:12:31.717"></status>
</kw>
<msg timestamp="20210205 17:12:31.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.612" endtime="20210205 17:12:31.717"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.719" endtime="20210205 17:12:31.722"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.718" endtime="20210205 17:12:31.723"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.717" endtime="20210205 17:12:31.723"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.724" endtime="20210205 17:12:31.724"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.723" endtime="20210205 17:12:31.724"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.725" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.725" endtime="20210205 17:12:31.725"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.757" level="INFO">${idvalue} = [86]</msg>
<status status="PASS" starttime="20210205 17:12:31.725" endtime="20210205 17:12:31.757"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:31.758" level="INFO">${responseid} = 86</msg>
<status status="PASS" starttime="20210205 17:12:31.757" endtime="20210205 17:12:31.758"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.758" endtime="20210205 17:12:31.758"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.758" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.758" endtime="20210205 17:12:31.758"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.725" endtime="20210205 17:12:31.758"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.612" endtime="20210205 17:12:31.758"></status>
</kw>
<kw name="${postid} = 87" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.759" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:31.759" endtime="20210205 17:12:31.759"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:31.929" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/87 
 path_url=/posts/87 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:31.929" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/87 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d536f66e9bcee10a6080ae6bea96800531612563152; expires=Sun, 07-Mar-21 22:12:32 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '922', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"c1-StXbFLxw6d815/mITyDVkJUK2xI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23083', 'cf-request-id': '0815da14990000ccfe0b254000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=gqO2KGi9rX4fA%2B53eq0MKboQvuDo%2B7vr4sq8CoRCiDfzkRo4ncs9u4%2F8GUAny0tCWf30viLQc9AsLqCMFsACZKdpQkbyfP41T6GB8D0TwpRnFOrEztAO9Ja4mZVV"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff93429daccfe-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 87,
  "title": "nostrum quis quasi placeat",
  "body": "eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est"
} 
 </msg>
<msg timestamp="20210205 17:12:31.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.759" endtime="20210205 17:12:31.930"></status>
</kw>
<msg timestamp="20210205 17:12:31.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.759" endtime="20210205 17:12:31.930"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.933" endtime="20210205 17:12:31.935"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.932" endtime="20210205 17:12:31.935"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.931" endtime="20210205 17:12:31.935"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.936" endtime="20210205 17:12:31.936"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.936" endtime="20210205 17:12:31.937"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.937" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.937" endtime="20210205 17:12:31.937"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.967" level="INFO">${idvalue} = [87]</msg>
<status status="PASS" starttime="20210205 17:12:31.937" endtime="20210205 17:12:31.967"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:31.967" level="INFO">${responseid} = 87</msg>
<status status="PASS" starttime="20210205 17:12:31.967" endtime="20210205 17:12:31.967"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:31.968" endtime="20210205 17:12:31.968"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:31.968" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:31.968" endtime="20210205 17:12:31.968"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.937" endtime="20210205 17:12:31.968"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.758" endtime="20210205 17:12:31.968"></status>
</kw>
<kw name="${postid} = 88" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:31.970" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:31.969" endtime="20210205 17:12:31.970"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:32.017" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/88 
 path_url=/posts/88 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:32.017" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/88 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd065cd515dc6cfabdb88ab0c7f5941a61612563152; expires=Sun, 07-Mar-21 22:12:32 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '937', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"bf-99RNmrovk8IKMxPgFxxzF7hL4oc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23083', 'cf-request-id': '0815da15680000e758b6bad000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=zUQYnHnGmkSH%2BsGtQW17A%2FfMgjPHGqhjd3YaE54Q9UsKyXOJAhABXmCCNqzmU2ecIFHJvun%2FkRduwb5liy5%2B6K%2F5OkCUJEzmR2jKeEl6S3f7dAqMrAkJQRlczMCQ"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff9357a48e758-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 88,
  "title": "sapiente omnis fugit eos",
  "body": "consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed"
} 
 </msg>
<msg timestamp="20210205 17:12:32.018" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.970" endtime="20210205 17:12:32.018"></status>
</kw>
<msg timestamp="20210205 17:12:32.018" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:31.969" endtime="20210205 17:12:32.018"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.021" endtime="20210205 17:12:32.024"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.020" endtime="20210205 17:12:32.024"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.018" endtime="20210205 17:12:32.024"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.025" endtime="20210205 17:12:32.025"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.024" endtime="20210205 17:12:32.026"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.026" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.026" endtime="20210205 17:12:32.026"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.061" level="INFO">${idvalue} = [88]</msg>
<status status="PASS" starttime="20210205 17:12:32.026" endtime="20210205 17:12:32.061"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:32.061" level="INFO">${responseid} = 88</msg>
<status status="PASS" starttime="20210205 17:12:32.061" endtime="20210205 17:12:32.061"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.062" endtime="20210205 17:12:32.062"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.062" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.062" endtime="20210205 17:12:32.062"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.026" endtime="20210205 17:12:32.062"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:31.969" endtime="20210205 17:12:32.062"></status>
</kw>
<kw name="${postid} = 89" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.063" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:32.063" endtime="20210205 17:12:32.064"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:32.217" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/89 
 path_url=/posts/89 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:32.218" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/89 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d293f844a0c0b1c39d99f381061c774641612563152; expires=Sun, 07-Mar-21 22:12:32 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '935', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-AJIAh/kcPdTbwy1rCjIlUhHPTtE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23083', 'cf-request-id': '0815da163000003dba5f1ed000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=jYOyjkT%2BiWFj8AYFcMBQaXPJ%2BZl%2BFrDNVBrn0qfKDr4BpHM4DT06r9%2B7m6y1ZHx3%2FcMRiQ9dxWq2AmpBlEbUyCnELalNWQ0VbjacfbhNfRqH4A2puMm1HCXXoJDE"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff936b8a13dba-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 89,
  "title": "sint soluta et vel magnam aut ut sed qui",
  "body": "repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\ntempore quas est"
} 
 </msg>
<msg timestamp="20210205 17:12:32.218" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.064" endtime="20210205 17:12:32.218"></status>
</kw>
<msg timestamp="20210205 17:12:32.218" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.063" endtime="20210205 17:12:32.218"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.220" endtime="20210205 17:12:32.221"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.219" endtime="20210205 17:12:32.221"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.218" endtime="20210205 17:12:32.221"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.222" endtime="20210205 17:12:32.223"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.222" endtime="20210205 17:12:32.223"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.223" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.223" endtime="20210205 17:12:32.223"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.254" level="INFO">${idvalue} = [89]</msg>
<status status="PASS" starttime="20210205 17:12:32.224" endtime="20210205 17:12:32.254"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:32.255" level="INFO">${responseid} = 89</msg>
<status status="PASS" starttime="20210205 17:12:32.254" endtime="20210205 17:12:32.255"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.255" endtime="20210205 17:12:32.255"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.256" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.256" endtime="20210205 17:12:32.256"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.223" endtime="20210205 17:12:32.256"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.063" endtime="20210205 17:12:32.256"></status>
</kw>
<kw name="${postid} = 90" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.257" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:32.257" endtime="20210205 17:12:32.258"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:32.456" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/90 
 path_url=/posts/90 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:32.456" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/90 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da970278acdccba817e137123337e07e61612563152; expires=Sun, 07-Mar-21 22:12:32 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '992', 'X-Ratelimit-Reset': '1611642816', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fa-J+W5iw5qyzTS6afRH4pq7cvG7wg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23082', 'cf-request-id': '0815da169f000015a3520e4000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2F0F8N%2B7d%2BuTmWEX8zlZzmVqoloEScIEKNPY%2BLK6LevdmPYBnI8B4EEIDi8BWl21wSqACcYIQ2KMPhf%2FM%2FXARj2IxFdOtXrU5RQVpQkH5NFbyD47ELdgqMQlocD%2Bl"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9376ebc15a3-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 90,
  "title": "ad iusto omnis odit dolor voluptatibus",
  "body": "minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta similique molestias praesentium blanditiis"
} 
 </msg>
<msg timestamp="20210205 17:12:32.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.258" endtime="20210205 17:12:32.457"></status>
</kw>
<msg timestamp="20210205 17:12:32.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.256" endtime="20210205 17:12:32.457"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.458" endtime="20210205 17:12:32.460"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.458" endtime="20210205 17:12:32.460"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.457" endtime="20210205 17:12:32.461"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.461" endtime="20210205 17:12:32.462"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.461" endtime="20210205 17:12:32.462"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.463" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.462" endtime="20210205 17:12:32.463"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.498" level="INFO">${idvalue} = [90]</msg>
<status status="PASS" starttime="20210205 17:12:32.463" endtime="20210205 17:12:32.498"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:32.498" level="INFO">${responseid} = 90</msg>
<status status="PASS" starttime="20210205 17:12:32.498" endtime="20210205 17:12:32.498"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.498" endtime="20210205 17:12:32.499"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.499" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.499" endtime="20210205 17:12:32.499"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.462" endtime="20210205 17:12:32.500"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.256" endtime="20210205 17:12:32.500"></status>
</kw>
<kw name="${postid} = 91" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.502" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:32.501" endtime="20210205 17:12:32.502"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:32.554" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/91 
 path_url=/posts/91 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:32.554" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/91 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dfb0586518717042e071d7539ca3398da1612563152; expires=Sun, 07-Mar-21 22:12:32 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e5-l9aQa2/gJFY5FFG1O9x9F+UJRfA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23082', 'cf-request-id': '0815da178100003e3350b81000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=rW%2Be7vEZANdnV8tBifTJSj1t3FvRxEIfi1nDALeUFmHmGiQ1u4oBY7R9ot%2BO1eGYon9M2LZRz%2FIXuRf37AoXOvp8ChUG6rRoafccidzqlMOVVD2eWR5aoqac68WK"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff938cc8e3e33-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 91,
  "title": "aut amet sed",
  "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
} 
 </msg>
<msg timestamp="20210205 17:12:32.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.503" endtime="20210205 17:12:32.555"></status>
</kw>
<msg timestamp="20210205 17:12:32.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.500" endtime="20210205 17:12:32.555"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.557" endtime="20210205 17:12:32.558"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.556" endtime="20210205 17:12:32.559"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.555" endtime="20210205 17:12:32.559"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.559" endtime="20210205 17:12:32.560"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.559" endtime="20210205 17:12:32.560"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.561" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.560" endtime="20210205 17:12:32.561"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.593" level="INFO">${idvalue} = [91]</msg>
<status status="PASS" starttime="20210205 17:12:32.561" endtime="20210205 17:12:32.593"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:32.594" level="INFO">${responseid} = 91</msg>
<status status="PASS" starttime="20210205 17:12:32.594" endtime="20210205 17:12:32.594"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.594" endtime="20210205 17:12:32.594"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.595" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.594" endtime="20210205 17:12:32.595"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.560" endtime="20210205 17:12:32.595"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.500" endtime="20210205 17:12:32.595"></status>
</kw>
<kw name="${postid} = 92" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.595" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:32.595" endtime="20210205 17:12:32.596"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:32.753" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/92 
 path_url=/posts/92 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:32.754" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/92 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcf87d52d2167f38e5a116dd47c3bfb631612563152; expires=Sun, 07-Mar-21 22:12:32 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612408676', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e3-XfDSGc/SGdffvPSz0KEalY/lSfk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23082', 'cf-request-id': '0815da18470000e720ac995000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=oTej9U6fxOfcAh%2FcNOCob83Rsd4es3to4SvKH8eozgTyiJSzDXJUv0L%2FyprqdeUbiyjTEpwTEto4eTBbsgGCQCYzPF3gsoG%2FWYW%2Bb8sD%2BMhBW6qHHNhuNQvM2ory"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff93a0a98e720-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 92,
  "title": "ratione ex tenetur perferendis",
  "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
} 
 </msg>
<msg timestamp="20210205 17:12:32.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.596" endtime="20210205 17:12:32.754"></status>
</kw>
<msg timestamp="20210205 17:12:32.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.595" endtime="20210205 17:12:32.755"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.758" endtime="20210205 17:12:32.760"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.756" endtime="20210205 17:12:32.760"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.755" endtime="20210205 17:12:32.761"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.761" endtime="20210205 17:12:32.762"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.761" endtime="20210205 17:12:32.762"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.762" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.762" endtime="20210205 17:12:32.762"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.790" level="INFO">${idvalue} = [92]</msg>
<status status="PASS" starttime="20210205 17:12:32.763" endtime="20210205 17:12:32.790"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:32.791" level="INFO">${responseid} = 92</msg>
<status status="PASS" starttime="20210205 17:12:32.791" endtime="20210205 17:12:32.791"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.791" endtime="20210205 17:12:32.791"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.792" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.791" endtime="20210205 17:12:32.792"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.762" endtime="20210205 17:12:32.792"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.595" endtime="20210205 17:12:32.792"></status>
</kw>
<kw name="${postid} = 93" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.793" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:32.792" endtime="20210205 17:12:32.793"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:32.838" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/93 
 path_url=/posts/93 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:32.838" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/93 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:33 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de0ed2e9d51a252799cd134f7c0c8a3db1612563153; expires=Sun, 07-Mar-21 22:12:33 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '916', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"107-ePXZ2FoBjuryDSZ4+6vLe92vrBs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23083', 'cf-request-id': '0815da189e00003df18a977000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=pfe9i0HnT2tM3nltMl9rDI%2FbWcj44ZF9cFbOyOLKPMN1KO3wJBp68UEYk1t0FzCzwS6dXyUeDspbzFFn2iiuYmy8xpCOywECZRmXTRaDh%2F92N28sGv%2FLjBqgC6Pq"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff93a9e6b3df1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 93,
  "title": "beatae soluta recusandae",
  "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
} 
 </msg>
<msg timestamp="20210205 17:12:32.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.793" endtime="20210205 17:12:32.838"></status>
</kw>
<msg timestamp="20210205 17:12:32.839" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.792" endtime="20210205 17:12:32.839"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.841" endtime="20210205 17:12:32.843"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.840" endtime="20210205 17:12:32.843"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.839" endtime="20210205 17:12:32.843"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.844" endtime="20210205 17:12:32.845"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.844" endtime="20210205 17:12:32.845"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.847" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.846" endtime="20210205 17:12:32.847"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.878" level="INFO">${idvalue} = [93]</msg>
<status status="PASS" starttime="20210205 17:12:32.847" endtime="20210205 17:12:32.878"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:32.878" level="INFO">${responseid} = 93</msg>
<status status="PASS" starttime="20210205 17:12:32.878" endtime="20210205 17:12:32.878"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:32.878" endtime="20210205 17:12:32.879"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:32.879" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:32.879" endtime="20210205 17:12:32.879"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.846" endtime="20210205 17:12:32.879"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.792" endtime="20210205 17:12:32.879"></status>
</kw>
<kw name="${postid} = 94" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:32.880" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:32.880" endtime="20210205 17:12:32.880"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:33.033" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/94 
 path_url=/posts/94 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:33.033" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/94 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:33 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d885383d6c64389d175910cb333f997481612563153; expires=Sun, 07-Mar-21 22:12:33 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '913', 'X-Ratelimit-Reset': '1612110657', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"108-YgH61+NkjOflAIB5ysSTcOx0QTQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23083', 'cf-request-id': '0815da195c0000e6aced9e2000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=9VZIPt1wm83%2B6OXrvrD7JZA%2FTroo9rOw0ksBUvb%2FuStRoVcM%2FqfCjQh6gZz%2BHABeZQuDK26tzjSyJ1NbyHPOnM%2BgFHobbzW2BxgDCHg4DDsYyo66gCNoauMV8JUk"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff93bcf20e6ac-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 94,
  "title": "qui qui voluptates illo iste minima",
  "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
} 
 </msg>
<msg timestamp="20210205 17:12:33.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.880" endtime="20210205 17:12:33.033"></status>
</kw>
<msg timestamp="20210205 17:12:33.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:32.879" endtime="20210205 17:12:33.034"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.036" endtime="20210205 17:12:33.038"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.035" endtime="20210205 17:12:33.039"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.034" endtime="20210205 17:12:33.039"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.041" endtime="20210205 17:12:33.042"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.040" endtime="20210205 17:12:33.043"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.044" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.044" endtime="20210205 17:12:33.045"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.112" level="INFO">${idvalue} = [94]</msg>
<status status="PASS" starttime="20210205 17:12:33.045" endtime="20210205 17:12:33.112"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:33.113" level="INFO">${responseid} = 94</msg>
<status status="PASS" starttime="20210205 17:12:33.112" endtime="20210205 17:12:33.113"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.113" endtime="20210205 17:12:33.115"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.116" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.116" endtime="20210205 17:12:33.116"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.043" endtime="20210205 17:12:33.116"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:32.879" endtime="20210205 17:12:33.116"></status>
</kw>
<kw name="${postid} = 95" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.119" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:33.118" endtime="20210205 17:12:33.119"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:33.293" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/95 
 path_url=/posts/95 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:33.294" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/95 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:33 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d49cb943959afc1c496734854fdaa525e1612563153; expires=Sun, 07-Mar-21 22:12:33 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '911', 'X-Ratelimit-Reset': '1611067982', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"126-rrdOZSpMvdZiiYyTLDi2rkLG/Vw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23083', 'cf-request-id': '0815da1a580000922e5e821000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=2sKvgVOhAnlNA4vsHZMMZvJqgsJT583%2Bm9v84m%2FKrP3HvdQlKl93vxSRLtIQC8Do%2FwLqS0G0H0IofmlLUZOFJf1qVTV0CIkhSGHBAqVK2fIVVDMhPOBdnK9pWJRy"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff93d5f6f922e-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 95,
  "title": "id minus libero illum nam ad officiis",
  "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
} 
 </msg>
<msg timestamp="20210205 17:12:33.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.119" endtime="20210205 17:12:33.294"></status>
</kw>
<msg timestamp="20210205 17:12:33.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.117" endtime="20210205 17:12:33.295"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.297" endtime="20210205 17:12:33.300"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.296" endtime="20210205 17:12:33.300"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.295" endtime="20210205 17:12:33.300"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.301" endtime="20210205 17:12:33.301"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.300" endtime="20210205 17:12:33.301"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.302" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.302" endtime="20210205 17:12:33.302"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.335" level="INFO">${idvalue} = [95]</msg>
<status status="PASS" starttime="20210205 17:12:33.302" endtime="20210205 17:12:33.335"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:33.335" level="INFO">${responseid} = 95</msg>
<status status="PASS" starttime="20210205 17:12:33.335" endtime="20210205 17:12:33.335"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.336" endtime="20210205 17:12:33.336"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.336" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.336" endtime="20210205 17:12:33.336"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.301" endtime="20210205 17:12:33.336"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.117" endtime="20210205 17:12:33.336"></status>
</kw>
<kw name="${postid} = 96" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.337" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:33.337" endtime="20210205 17:12:33.338"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:33.385" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/96 
 path_url=/posts/96 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:33.385" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/96 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:33 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d418a31443f44748826c6e4e6691455fd1612563153; expires=Sun, 07-Mar-21 22:12:33 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-7coBGYTlaO8bCv0lNSqoAlkoszE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23083', 'cf-request-id': '0815da1abe000015af7383b000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=yDs%2Fz4TDhcQT6f4eWmqnhZFKxDVJBluxJiy4CyiCA6%2BWp17gOsYpljJXb8GPXF0lP1VmhEFgCadJNx9yqiAV67xOq35cKdsVTZm%2Fj1Nz5Hys0%2B8DBuBiuKgHYhfS"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff93dfec315af-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 96,
  "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
  "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
} 
 </msg>
<msg timestamp="20210205 17:12:33.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.338" endtime="20210205 17:12:33.386"></status>
</kw>
<msg timestamp="20210205 17:12:33.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.337" endtime="20210205 17:12:33.386"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.389" endtime="20210205 17:12:33.391"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.388" endtime="20210205 17:12:33.391"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.387" endtime="20210205 17:12:33.391"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.392" endtime="20210205 17:12:33.393"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.391" endtime="20210205 17:12:33.393"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.393" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.393" endtime="20210205 17:12:33.393"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.428" level="INFO">${idvalue} = [96]</msg>
<status status="PASS" starttime="20210205 17:12:33.394" endtime="20210205 17:12:33.428"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:33.429" level="INFO">${responseid} = 96</msg>
<status status="PASS" starttime="20210205 17:12:33.428" endtime="20210205 17:12:33.429"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.429" endtime="20210205 17:12:33.429"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.429" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.429" endtime="20210205 17:12:33.429"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.393" endtime="20210205 17:12:33.429"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.336" endtime="20210205 17:12:33.430"></status>
</kw>
<kw name="${postid} = 97" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.430" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:33.430" endtime="20210205 17:12:33.431"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:33.560" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/97 
 path_url=/posts/97 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:33.561" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/97 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:33 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d885383d6c64389d175910cb333f997481612563153; expires=Sun, 07-Mar-21 22:12:33 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612026138', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"13f-OIy2AGGq8mYJVydBUqG+k5NoCF4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23083', 'cf-request-id': '0815da1b700000e6ac9fb4c000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=JvmeeIfHUinXY0Tw6qsfTEJe8SWr644ZVF0anqkhoYqWUDCrHY%2BuRmGayo8hDKaZst%2B5j%2FEFR0PfXDdtO%2BdnGXB0AMsF8oY818vuz4kjJ1riIxi9XRWYXCSxKdhQ"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff93f1be0e6ac-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 97,
  "title": "quas fugiat ut perspiciatis vero provident",
  "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
} 
 </msg>
<msg timestamp="20210205 17:12:33.561" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.431" endtime="20210205 17:12:33.561"></status>
</kw>
<msg timestamp="20210205 17:12:33.561" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.430" endtime="20210205 17:12:33.562"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.564" endtime="20210205 17:12:33.567"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.563" endtime="20210205 17:12:33.567"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.562" endtime="20210205 17:12:33.568"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.569" endtime="20210205 17:12:33.569"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.568" endtime="20210205 17:12:33.569"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.570" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.570" endtime="20210205 17:12:33.570"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.603" level="INFO">${idvalue} = [97]</msg>
<status status="PASS" starttime="20210205 17:12:33.570" endtime="20210205 17:12:33.603"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:33.603" level="INFO">${responseid} = 97</msg>
<status status="PASS" starttime="20210205 17:12:33.603" endtime="20210205 17:12:33.603"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.603" endtime="20210205 17:12:33.604"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.604" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.604" endtime="20210205 17:12:33.604"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.569" endtime="20210205 17:12:33.604"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.430" endtime="20210205 17:12:33.604"></status>
</kw>
<kw name="${postid} = 98" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.605" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:33.605" endtime="20210205 17:12:33.605"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:33.782" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/98 
 path_url=/posts/98 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:33.782" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/98 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:33 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4f900f50847330ad0dd2504323c301e11612563153; expires=Sun, 07-Mar-21 22:12:33 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '926', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d1-AdCHAQW37rE37t8vXTeQZeKV7Cg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23083', 'cf-request-id': '0815da1bd90000155283006000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=0KtbZr4G%2FyGJWm5f%2FdSLHPC%2FhNAeQZsPijJ0sTFwiHtojalA7NudOWc2Pc%2BfSkMIUrk5PNi7L%2BcfOHkW3jl7%2F5z4srKeGJzxq7lS6F6%2B8Un%2BflxO3PkrxXG0r9Tt"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff93fc81f1552-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 98,
  "title": "laboriosam dolor voluptates",
  "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
} 
 </msg>
<msg timestamp="20210205 17:12:33.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.605" endtime="20210205 17:12:33.783"></status>
</kw>
<msg timestamp="20210205 17:12:33.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.604" endtime="20210205 17:12:33.784"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.786" endtime="20210205 17:12:33.789"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.785" endtime="20210205 17:12:33.789"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.784" endtime="20210205 17:12:33.790"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.791" endtime="20210205 17:12:33.792"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.790" endtime="20210205 17:12:33.792"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.793" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.793" endtime="20210205 17:12:33.793"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.822" level="INFO">${idvalue} = [98]</msg>
<status status="PASS" starttime="20210205 17:12:33.794" endtime="20210205 17:12:33.822"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:33.823" level="INFO">${responseid} = 98</msg>
<status status="PASS" starttime="20210205 17:12:33.823" endtime="20210205 17:12:33.823"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.823" endtime="20210205 17:12:33.823"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.824" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.823" endtime="20210205 17:12:33.824"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.792" endtime="20210205 17:12:33.824"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.604" endtime="20210205 17:12:33.824"></status>
</kw>
<kw name="${postid} = 99" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.824" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:33.824" endtime="20210205 17:12:33.825"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:33.898" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/99 
 path_url=/posts/99 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:33.898" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/99 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:34 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d31192a1ca7b486e5aaef0e8e0b742fbd1612563154; expires=Sun, 07-Mar-21 22:12:34 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '925', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e0-aXopzb0YfAN1tmSD/RVNZPaEz8g"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23084', 'cf-request-id': '0815da1cbe00003e4bbdacb000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=xUsZ3KgFGdA4Ioj5Uk8q9AESx6m1CSFMWpMbh0Ujn%2Fj%2F6pTU4tm60YvCxJev3cYx7bDlMFNBx8UvRmrmECxxf8PMSC4KKxbonXJIzOUMy0UXVyBgfv8zwCY1w8AJ"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61cff94139733e4b-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 99,
  "title": "temporibus sit alias delectus eligendi possimus magni",
  "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
} 
 </msg>
<msg timestamp="20210205 17:12:33.898" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.825" endtime="20210205 17:12:33.898"></status>
</kw>
<msg timestamp="20210205 17:12:33.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.824" endtime="20210205 17:12:33.899"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.902" endtime="20210205 17:12:33.906"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.901" endtime="20210205 17:12:33.906"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.899" endtime="20210205 17:12:33.906"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.908" endtime="20210205 17:12:33.908"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.906" endtime="20210205 17:12:33.909"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.910" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.910" endtime="20210205 17:12:33.911"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.948" level="INFO">${idvalue} = [99]</msg>
<status status="PASS" starttime="20210205 17:12:33.911" endtime="20210205 17:12:33.948"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:33.948" level="INFO">${responseid} = 99</msg>
<status status="PASS" starttime="20210205 17:12:33.948" endtime="20210205 17:12:33.948"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:33.948" endtime="20210205 17:12:33.949"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:33.949" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:33.949" endtime="20210205 17:12:33.949"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.909" endtime="20210205 17:12:33.949"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.824" endtime="20210205 17:12:33.949"></status>
</kw>
<kw name="${postid} = 100" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 17:12:33.950" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 17:12:33.950" endtime="20210205 17:12:33.950"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 17:12:34.098" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 17:12:34.098" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 22:12:34 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d6bd3674a926187fba4c429b7fa5bc4431612563154; expires=Sun, 07-Mar-21 22:12:34 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611591853', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23084', 'cf-request-id': '0815da1d8800001573191ce000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=osy9RtSrtm6xoejKcHtZp3qIqCpCNDEe6EwCYIH0%2FC5HRICh227Nj6mhaVmSROEZppBxf6Q41wm9dpAPRLCsZfCAX4ixDoBxdv3M%2FyKMo5EU6arpGGFRU0SqRwNU"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61cff9427b611573-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<msg timestamp="20210205 17:12:34.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.950" endtime="20210205 17:12:34.099"></status>
</kw>
<msg timestamp="20210205 17:12:34.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 17:12:33.949" endtime="20210205 17:12:34.099"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:34.101" endtime="20210205 17:12:34.104"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:34.100" endtime="20210205 17:12:34.104"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:34.099" endtime="20210205 17:12:34.104"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 17:12:34.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 17:12:34.105" endtime="20210205 17:12:34.106"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:34.104" endtime="20210205 17:12:34.106"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:34.107" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:34.107" endtime="20210205 17:12:34.107"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:34.145" level="INFO">${idvalue} = [100]</msg>
<status status="PASS" starttime="20210205 17:12:34.107" endtime="20210205 17:12:34.145"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 17:12:34.146" level="INFO">${responseid} = 100</msg>
<status status="PASS" starttime="20210205 17:12:34.145" endtime="20210205 17:12:34.146"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 17:12:34.146" endtime="20210205 17:12:34.148"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 17:12:34.148" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 17:12:34.148" endtime="20210205 17:12:34.148"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:34.106" endtime="20210205 17:12:34.148"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:33.949" endtime="20210205 17:12:34.149"></status>
</kw>
<status status="PASS" starttime="20210205 17:12:20.161" endtime="20210205 17:12:34.149"></status>
</kw>
<doc>Validate Response for Getting post by passing single post id</doc>
<tags>
<tag>Positive Extensive</tag>
</tags>
<status status="PASS" starttime="20210205 17:12:20.122" endtime="20210205 17:12:34.149" critical="yes"></status>
</test>
<status status="PASS" starttime="20210205 17:12:15.723" endtime="20210205 17:12:34.151"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Hybrid</stat>
<stat pass="1" fail="0">Negative Boundary</stat>
<stat pass="1" fail="0">Negative Smoke</stat>
<stat pass="1" fail="0">Positive</stat>
<stat pass="1" fail="0">Positive Boundary</stat>
<stat pass="1" fail="0">Positive Extensive</stat>
<stat pass="1" fail="0">Positive Smoke</stat>
<stat pass="1" fail="0">Smoke</stat>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="TS001 Posts">TS001 Posts</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210205 17:12:18.501" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210205 17:12:18.823" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210205 17:12:19.078" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210205 17:12:19.381" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210205 17:12:19.670" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210205 17:12:20.015" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
</errors>
</robot>
