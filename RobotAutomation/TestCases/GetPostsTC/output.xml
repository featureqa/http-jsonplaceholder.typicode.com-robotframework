<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210205 20:02:03.881" rpa="false">
<suite id="s1" name="TS001 Posts" source="C:\typicodetests\http-jsonplaceholder.typicode.com-robotframework\RobotAutomation\TestCases\GetPostsTC\TS001_Posts.robot">
<test id="s1-t1" name="TC001 VALIDATE GET ALL POSTS ENDPOINT">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:04.950" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:04.947" endtime="20210205 20:02:04.950"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:02:04.952" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:04.950" endtime="20210205 20:02:04.952"></status>
</kw>
<msg timestamp="20210205 20:02:04.953" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:04.946" endtime="20210205 20:02:04.953"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:04.957" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:04.955" endtime="20210205 20:02:04.957"></status>
</kw>
<msg timestamp="20210205 20:02:04.958" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:02:04.953" endtime="20210205 20:02:04.958"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:04.961" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:04.959" endtime="20210205 20:02:04.961"></status>
</kw>
<msg timestamp="20210205 20:02:04.962" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:04.958" endtime="20210205 20:02:04.962"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:04.966" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:04.964" endtime="20210205 20:02:04.966"></status>
</kw>
<msg timestamp="20210205 20:02:04.966" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:04.962" endtime="20210205 20:02:04.967"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:04.970" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:04.968" endtime="20210205 20:02:04.970"></status>
</kw>
<msg timestamp="20210205 20:02:04.971" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:02:04.967" endtime="20210205 20:02:04.971"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:04.974" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:04.972" endtime="20210205 20:02:04.974"></status>
</kw>
<msg timestamp="20210205 20:02:04.975" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:04.971" endtime="20210205 20:02:04.975"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:04.978" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:04.977" endtime="20210205 20:02:04.979"></status>
</kw>
<msg timestamp="20210205 20:02:04.979" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:04.976" endtime="20210205 20:02:04.979"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:04.982" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:02:04.981" endtime="20210205 20:02:04.982"></status>
</kw>
<msg timestamp="20210205 20:02:04.982" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:04.979" endtime="20210205 20:02:04.982"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:04.985" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:04.983" endtime="20210205 20:02:04.985"></status>
</kw>
<msg timestamp="20210205 20:02:04.985" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:04.983" endtime="20210205 20:02:04.985"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:04.988" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:04.986" endtime="20210205 20:02:04.988"></status>
</kw>
<msg timestamp="20210205 20:02:04.988" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:02:04.985" endtime="20210205 20:02:04.988"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:04.991" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:04.989" endtime="20210205 20:02:04.991"></status>
</kw>
<msg timestamp="20210205 20:02:04.991" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:04.989" endtime="20210205 20:02:04.991"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:04.993" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:02:04.992" endtime="20210205 20:02:04.993"></status>
</kw>
<msg timestamp="20210205 20:02:04.994" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:04.991" endtime="20210205 20:02:04.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:04.997" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:04.994" endtime="20210205 20:02:04.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:02:04.999" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:02:04.997" endtime="20210205 20:02:04.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.002" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:02:04.999" endtime="20210205 20:02:05.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.006" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.002" endtime="20210205 20:02:05.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.009" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.006" endtime="20210205 20:02:05.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.012" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.009" endtime="20210205 20:02:05.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.014" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.012" endtime="20210205 20:02:05.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.017" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.015" endtime="20210205 20:02:05.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.019" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:05.017" endtime="20210205 20:02:05.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.022" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.020" endtime="20210205 20:02:05.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.024" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.022" endtime="20210205 20:02:05.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.026" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.024" endtime="20210205 20:02:05.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.029" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:05.027" endtime="20210205 20:02:05.029"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:04.945" endtime="20210205 20:02:05.029"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_All_Posts</arg>
<arg>${base_url}</arg>
<arg>/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.036" level="INFO">Creating Session using : alias=Get_All_Posts, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:05.034" endtime="20210205 20:02:05.037"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:05.221" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:05.222" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:06 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2e1dc84f35a5eb4a525e63fe1e5d53db1612573326; expires=Mon, 08-Mar-21 01:02:06 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612568801', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4574', 'cf-request-id': '081675542b0000e6f8d33be000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=T8LFXqaQNEaOmtnHCteltY0eHC9vbd9PfmtXm1xGmB7shAQ8Ru5hHoZrLOmh1TPkbLoqfNH5so9OzFKKW0lftBqMZWg0nyBtQzdz3Zlj2JdX8lGWyzWZavRhFy63"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f199db25e6f8-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210205 20:02:05.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.037" endtime="20210205 20:02:05.222"></status>
</kw>
<msg timestamp="20210205 20:02:05.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.031" endtime="20210205 20:02:05.223"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>All</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.226" endtime="20210205 20:02:05.244"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.225" endtime="20210205 20:02:05.244"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.224" endtime="20210205 20:02:05.244"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.246" endtime="20210205 20:02:05.247"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.245" endtime="20210205 20:02:05.247"></status>
</kw>
<kw name="VALIDATE RESPONSE SIZE" library="PostsHelper">
<arguments>
<arg>${allpostcnt}</arg>
<arg>${response}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idlist}</var>
</assign>
<msg timestamp="20210205 20:02:05.249" level="INFO">@{idlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:05.249" endtime="20210205 20:02:05.249"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.250" endtime="20210205 20:02:05.251"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.250" endtime="20210205 20:02:05.251"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.251" endtime="20210205 20:02:05.252"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.251" endtime="20210205 20:02:05.252"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.252" endtime="20210205 20:02:05.253"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.252" endtime="20210205 20:02:05.253"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.254" endtime="20210205 20:02:05.255"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.253" endtime="20210205 20:02:05.255"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.256" endtime="20210205 20:02:05.258"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.256" endtime="20210205 20:02:05.258"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.259" endtime="20210205 20:02:05.260"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.259" endtime="20210205 20:02:05.260"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.261" endtime="20210205 20:02:05.262"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.260" endtime="20210205 20:02:05.262"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.264" endtime="20210205 20:02:05.265"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.263" endtime="20210205 20:02:05.265"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.266" endtime="20210205 20:02:05.267"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.266" endtime="20210205 20:02:05.267"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.267" endtime="20210205 20:02:05.268"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.267" endtime="20210205 20:02:05.268"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.268" endtime="20210205 20:02:05.268"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.268" endtime="20210205 20:02:05.268"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.269" endtime="20210205 20:02:05.269"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.269" endtime="20210205 20:02:05.269"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.269" endtime="20210205 20:02:05.270"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.269" endtime="20210205 20:02:05.270"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.270" endtime="20210205 20:02:05.271"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.270" endtime="20210205 20:02:05.271"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.271" endtime="20210205 20:02:05.272"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.271" endtime="20210205 20:02:05.272"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.273" endtime="20210205 20:02:05.273"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.272" endtime="20210205 20:02:05.273"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.273" endtime="20210205 20:02:05.274"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.273" endtime="20210205 20:02:05.274"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.274" endtime="20210205 20:02:05.274"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.274" endtime="20210205 20:02:05.274"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.275" endtime="20210205 20:02:05.275"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.275" endtime="20210205 20:02:05.275"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.275" endtime="20210205 20:02:05.276"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.275" endtime="20210205 20:02:05.276"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.276" endtime="20210205 20:02:05.276"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.276" endtime="20210205 20:02:05.276"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.276" endtime="20210205 20:02:05.277"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.276" endtime="20210205 20:02:05.277"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.277" endtime="20210205 20:02:05.278"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.277" endtime="20210205 20:02:05.278"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.278" endtime="20210205 20:02:05.279"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.278" endtime="20210205 20:02:05.279"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.279" endtime="20210205 20:02:05.281"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.279" endtime="20210205 20:02:05.281"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.281" endtime="20210205 20:02:05.282"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.281" endtime="20210205 20:02:05.282"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.282" endtime="20210205 20:02:05.283"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.282" endtime="20210205 20:02:05.283"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.283" endtime="20210205 20:02:05.283"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.283" endtime="20210205 20:02:05.284"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.284" endtime="20210205 20:02:05.284"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.284" endtime="20210205 20:02:05.284"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.285" endtime="20210205 20:02:05.285"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.284" endtime="20210205 20:02:05.286"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.286" endtime="20210205 20:02:05.287"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.286" endtime="20210205 20:02:05.287"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.287" endtime="20210205 20:02:05.288"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.287" endtime="20210205 20:02:05.288"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.289" endtime="20210205 20:02:05.289"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.288" endtime="20210205 20:02:05.289"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.290" endtime="20210205 20:02:05.290"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.289" endtime="20210205 20:02:05.290"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.291" endtime="20210205 20:02:05.292"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.291" endtime="20210205 20:02:05.292"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.292" endtime="20210205 20:02:05.293"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.292" endtime="20210205 20:02:05.293"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.293" endtime="20210205 20:02:05.294"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.293" endtime="20210205 20:02:05.294"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.295" endtime="20210205 20:02:05.296"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.294" endtime="20210205 20:02:05.296"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.297" endtime="20210205 20:02:05.297"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.296" endtime="20210205 20:02:05.297"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.298" endtime="20210205 20:02:05.298"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.297" endtime="20210205 20:02:05.298"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.298" endtime="20210205 20:02:05.299"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.298" endtime="20210205 20:02:05.299"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.299" endtime="20210205 20:02:05.299"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.299" endtime="20210205 20:02:05.299"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.299" endtime="20210205 20:02:05.300"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.299" endtime="20210205 20:02:05.300"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.300" endtime="20210205 20:02:05.301"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.300" endtime="20210205 20:02:05.301"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.301" endtime="20210205 20:02:05.301"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.301" endtime="20210205 20:02:05.301"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.302" endtime="20210205 20:02:05.302"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.302" endtime="20210205 20:02:05.302"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.302" endtime="20210205 20:02:05.303"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.302" endtime="20210205 20:02:05.303"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.303" endtime="20210205 20:02:05.303"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.303" endtime="20210205 20:02:05.303"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.304" endtime="20210205 20:02:05.304"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.303" endtime="20210205 20:02:05.304"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.304" endtime="20210205 20:02:05.305"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.304" endtime="20210205 20:02:05.305"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.305" endtime="20210205 20:02:05.305"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.305" endtime="20210205 20:02:05.305"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.305" endtime="20210205 20:02:05.306"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.305" endtime="20210205 20:02:05.306"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.306" endtime="20210205 20:02:05.307"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.306" endtime="20210205 20:02:05.307"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.307" endtime="20210205 20:02:05.307"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.307" endtime="20210205 20:02:05.307"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.307" endtime="20210205 20:02:05.308"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.307" endtime="20210205 20:02:05.308"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.308" endtime="20210205 20:02:05.308"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.308" endtime="20210205 20:02:05.308"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.309" endtime="20210205 20:02:05.309"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.309" endtime="20210205 20:02:05.309"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.309" endtime="20210205 20:02:05.310"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.309" endtime="20210205 20:02:05.310"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.310" endtime="20210205 20:02:05.310"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.310" endtime="20210205 20:02:05.310"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.310" endtime="20210205 20:02:05.311"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.310" endtime="20210205 20:02:05.311"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.311" endtime="20210205 20:02:05.312"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.311" endtime="20210205 20:02:05.312"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.312" endtime="20210205 20:02:05.313"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.312" endtime="20210205 20:02:05.313"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.313" endtime="20210205 20:02:05.313"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.313" endtime="20210205 20:02:05.313"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.314" endtime="20210205 20:02:05.314"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.314" endtime="20210205 20:02:05.314"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.314" endtime="20210205 20:02:05.315"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.314" endtime="20210205 20:02:05.315"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.315" endtime="20210205 20:02:05.315"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.315" endtime="20210205 20:02:05.315"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.315" endtime="20210205 20:02:05.317"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.315" endtime="20210205 20:02:05.317"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.317" endtime="20210205 20:02:05.318"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.317" endtime="20210205 20:02:05.318"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.318" endtime="20210205 20:02:05.318"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.318" endtime="20210205 20:02:05.318"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.319" endtime="20210205 20:02:05.319"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.318" endtime="20210205 20:02:05.319"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.319" endtime="20210205 20:02:05.320"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.319" endtime="20210205 20:02:05.320"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.320" endtime="20210205 20:02:05.320"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.320" endtime="20210205 20:02:05.320"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.320" endtime="20210205 20:02:05.321"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.320" endtime="20210205 20:02:05.321"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.321" endtime="20210205 20:02:05.321"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.321" endtime="20210205 20:02:05.321"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.322" endtime="20210205 20:02:05.322"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.322" endtime="20210205 20:02:05.322"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.322" endtime="20210205 20:02:05.323"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.322" endtime="20210205 20:02:05.323"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.323" endtime="20210205 20:02:05.323"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.323" endtime="20210205 20:02:05.323"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.324" endtime="20210205 20:02:05.324"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.324" endtime="20210205 20:02:05.324"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.324" endtime="20210205 20:02:05.325"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.324" endtime="20210205 20:02:05.325"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.325" endtime="20210205 20:02:05.325"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.325" endtime="20210205 20:02:05.325"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.326" endtime="20210205 20:02:05.326"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.325" endtime="20210205 20:02:05.326"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.326" endtime="20210205 20:02:05.326"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.326" endtime="20210205 20:02:05.327"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.327" endtime="20210205 20:02:05.327"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.327" endtime="20210205 20:02:05.327"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.327" endtime="20210205 20:02:05.328"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.327" endtime="20210205 20:02:05.328"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.328" endtime="20210205 20:02:05.328"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.328" endtime="20210205 20:02:05.329"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.329" endtime="20210205 20:02:05.329"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.329" endtime="20210205 20:02:05.329"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.329" endtime="20210205 20:02:05.330"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.329" endtime="20210205 20:02:05.330"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.330" endtime="20210205 20:02:05.330"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.330" endtime="20210205 20:02:05.330"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.331" endtime="20210205 20:02:05.331"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.331" endtime="20210205 20:02:05.331"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.331" endtime="20210205 20:02:05.332"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.331" endtime="20210205 20:02:05.332"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.332" endtime="20210205 20:02:05.332"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.332" endtime="20210205 20:02:05.332"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.333" endtime="20210205 20:02:05.333"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.332" endtime="20210205 20:02:05.333"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.333" endtime="20210205 20:02:05.334"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.333" endtime="20210205 20:02:05.334"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.334" endtime="20210205 20:02:05.334"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.334" endtime="20210205 20:02:05.334"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.334" endtime="20210205 20:02:05.335"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.334" endtime="20210205 20:02:05.335"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.335" endtime="20210205 20:02:05.335"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.335" endtime="20210205 20:02:05.335"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.336" endtime="20210205 20:02:05.336"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.336" endtime="20210205 20:02:05.336"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.336" endtime="20210205 20:02:05.337"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.336" endtime="20210205 20:02:05.337"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.337" endtime="20210205 20:02:05.337"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.337" endtime="20210205 20:02:05.337"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.337" endtime="20210205 20:02:05.338"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.337" endtime="20210205 20:02:05.338"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.249" endtime="20210205 20:02:05.338"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${idlist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:02:05.338" level="INFO">Length is 100</msg>
<msg timestamp="20210205 20:02:05.338" level="INFO">${cnt} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.338" endtime="20210205 20:02:05.339"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${cnt}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.339" endtime="20210205 20:02:05.339"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idlist}</var>
</assign>
<msg timestamp="20210205 20:02:05.339" level="INFO">@{idlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:05.339" endtime="20210205 20:02:05.339"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.248" endtime="20210205 20:02:05.340"></status>
</kw>
<doc>Validate Get All Posts REST endpoint status code, response size and user post count</doc>
<tags>
<tag>Positive</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:02:04.943" endtime="20210205 20:02:05.341" critical="yes"></status>
</test>
<test id="s1-t2" name="TC002 VALIDATE POST COUNT BY USER ID - VALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:05.345" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:05.344" endtime="20210205 20:02:05.346"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:02:05.348" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.346" endtime="20210205 20:02:05.349"></status>
</kw>
<msg timestamp="20210205 20:02:05.349" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.343" endtime="20210205 20:02:05.350"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.353" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.351" endtime="20210205 20:02:05.353"></status>
</kw>
<msg timestamp="20210205 20:02:05.353" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.350" endtime="20210205 20:02:05.353"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.357" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.356" endtime="20210205 20:02:05.358"></status>
</kw>
<msg timestamp="20210205 20:02:05.358" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.354" endtime="20210205 20:02:05.358"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.360" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.359" endtime="20210205 20:02:05.361"></status>
</kw>
<msg timestamp="20210205 20:02:05.361" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.358" endtime="20210205 20:02:05.361"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.365" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.363" endtime="20210205 20:02:05.365"></status>
</kw>
<msg timestamp="20210205 20:02:05.365" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.362" endtime="20210205 20:02:05.365"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.368" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.366" endtime="20210205 20:02:05.368"></status>
</kw>
<msg timestamp="20210205 20:02:05.368" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.365" endtime="20210205 20:02:05.368"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.371" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.369" endtime="20210205 20:02:05.371"></status>
</kw>
<msg timestamp="20210205 20:02:05.372" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.368" endtime="20210205 20:02:05.372"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.375" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:02:05.373" endtime="20210205 20:02:05.375"></status>
</kw>
<msg timestamp="20210205 20:02:05.376" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:05.372" endtime="20210205 20:02:05.376"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.380" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.377" endtime="20210205 20:02:05.380"></status>
</kw>
<msg timestamp="20210205 20:02:05.381" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.376" endtime="20210205 20:02:05.381"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.384" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.382" endtime="20210205 20:02:05.384"></status>
</kw>
<msg timestamp="20210205 20:02:05.384" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.381" endtime="20210205 20:02:05.384"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.387" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.385" endtime="20210205 20:02:05.387"></status>
</kw>
<msg timestamp="20210205 20:02:05.387" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.385" endtime="20210205 20:02:05.387"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.389" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:02:05.388" endtime="20210205 20:02:05.389"></status>
</kw>
<msg timestamp="20210205 20:02:05.390" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:05.387" endtime="20210205 20:02:05.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.391" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.390" endtime="20210205 20:02:05.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:02:05.392" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:02:05.391" endtime="20210205 20:02:05.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.393" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.392" endtime="20210205 20:02:05.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.394" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.393" endtime="20210205 20:02:05.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.395" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.394" endtime="20210205 20:02:05.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.397" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.396" endtime="20210205 20:02:05.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.398" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.397" endtime="20210205 20:02:05.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.399" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.398" endtime="20210205 20:02:05.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.400" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:05.399" endtime="20210205 20:02:05.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.401" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.400" endtime="20210205 20:02:05.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.402" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.401" endtime="20210205 20:02:05.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.403" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.402" endtime="20210205 20:02:05.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.404" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:05.403" endtime="20210205 20:02:05.404"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.343" endtime="20210205 20:02:05.404"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Valid Id Boundary Keys on TestData.json: users.validInitial, users.validInitCount, users.validFinal, users.validFinalCCount</arg>
</arguments>
<msg timestamp="20210205 20:02:05.406" level="INFO">Set test documentation to:
Valid Id Boundary Keys on TestData.json: users.validInitial, users.validInitCount, users.validFinal, users.validFinalCCount</msg>
<status status="PASS" starttime="20210205 20:02:05.405" endtime="20210205 20:02:05.406"></status>
</kw>
<kw name="VALIDATE POST COUNT BY USER ID" library="PostsHelper">
<arguments>
<arg>${userinId}</arg>
<arg>${userinCount}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:05.409" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:05.408" endtime="20210205 20:02:05.409"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:05.411" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.409" endtime="20210205 20:02:05.411"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.413" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:05.413" endtime="20210205 20:02:05.414"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:05.528" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/1/posts 
 path_url=/users/1/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:05.528" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/1/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:06 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4c095591c1a1882e2bf40ad8f1fb33721612573326; expires=Mon, 08-Mar-21 01:02:06 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612397753', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"aa6-j2NSH739l9uq40OywFMn7Y0C/iY"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23123', 'cf-request-id': '08167555c000009216f097f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=uzf0TdMJuRsW9dty%2F37i%2Bz5EwuslO%2F6T8IcNTZMklbwJ%2BmwzXINLiCsXX1rIAzByQGGJS%2Fd%2FJLSEK8y4t%2FQfxVnGvd%2BIGYD7K8k1rtfaVfFr3LNRHBf9ls1LO2Ok"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f19c6c059216-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  }
] 
 </msg>
<msg timestamp="20210205 20:02:05.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.414" endtime="20210205 20:02:05.529"></status>
</kw>
<msg timestamp="20210205 20:02:05.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.412" endtime="20210205 20:02:05.530"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="PostsHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 20:02:05.532" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:05.531" endtime="20210205 20:02:05.532"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.533" endtime="20210205 20:02:05.533"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.532" endtime="20210205 20:02:05.533"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.534" endtime="20210205 20:02:05.534"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.533" endtime="20210205 20:02:05.534"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.535" endtime="20210205 20:02:05.536"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.534" endtime="20210205 20:02:05.536"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.536" endtime="20210205 20:02:05.537"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.536" endtime="20210205 20:02:05.537"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.537" endtime="20210205 20:02:05.538"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.537" endtime="20210205 20:02:05.538"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.538" endtime="20210205 20:02:05.539"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.538" endtime="20210205 20:02:05.539"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.539" endtime="20210205 20:02:05.540"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.539" endtime="20210205 20:02:05.540"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.540" endtime="20210205 20:02:05.541"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.540" endtime="20210205 20:02:05.541"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.541" endtime="20210205 20:02:05.542"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.541" endtime="20210205 20:02:05.542"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.542" endtime="20210205 20:02:05.543"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.542" endtime="20210205 20:02:05.543"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.532" endtime="20210205 20:02:05.543"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:02:05.543" level="INFO">Length is 10</msg>
<msg timestamp="20210205 20:02:05.544" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.543" endtime="20210205 20:02:05.544"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 20:02:05.544" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:05.544" endtime="20210205 20:02:05.544"></status>
</kw>
<msg timestamp="20210205 20:02:05.545" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.530" endtime="20210205 20:02:05.545"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${exppostcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.545" endtime="20210205 20:02:05.546"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.407" endtime="20210205 20:02:05.546"></status>
</kw>
<kw name="VALIDATE POST COUNT BY USER ID" library="PostsHelper">
<arguments>
<arg>${userfId}</arg>
<arg>${userfCount}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:05.549" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:05.548" endtime="20210205 20:02:05.549"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:05.551" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.550" endtime="20210205 20:02:05.551"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.554" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:05.553" endtime="20210205 20:02:05.555"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:05.629" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/10/posts 
 path_url=/users/10/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:05.629" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/10/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:06 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d04afa88aa2247364178404c31c52e8d61612573326; expires=Mon, 08-Mar-21 01:02:06 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612542892', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"a68-bp+xhXz2hSYZZUvrpfEFLIhQbe4"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '95', 'cf-request-id': '081675561500000cd94c083000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=enQYBTF97WjFi9nEiUPTYWIMctM02s5P%2F%2FI%2FHfvnMT91gcw3qNwrQspYo%2FAGdA6mZ8LeVPDXmtf2yybDa0XemhGxPLSHLeM6kE28ccq1PUDbq6otBmmw1XP0Wnx0"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f19cec950cd9-EWR'} 
 body=[
  {
    "userId": 10,
    "id": 91,
    "title": "aut amet sed",
    "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
  },
  {
    "userId": 10,
    "id": 92,
    "title": "ratione ex tenetur perferendis",
    "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
  },
  {
    "userId": 10,
    "id": 93,
    "title": "beatae soluta recusandae",
    "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
  },
  {
    "userId": 10,
    "id": 94,
    "title": "qui qui voluptates illo iste minima",
    "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
  },
  {
    "userId": 10,
    "id": 95,
    "title": "id minus libero illum nam ad officiis",
    "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
  },
  {
    "userId": 10,
    "id": 96,
    "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
    "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
  },
  {
    "userId": 10,
    "id": 97,
    "title": "quas fugiat ut perspiciatis vero provident",
    "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
  },
  {
    "userId": 10,
    "id": 98,
    "title": "laboriosam dolor voluptates",
    "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
  },
  {
    "userId": 10,
    "id": 99,
    "title": "temporibus sit alias delectus eligendi possimus magni",
    "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
  },
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<msg timestamp="20210205 20:02:05.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.556" endtime="20210205 20:02:05.630"></status>
</kw>
<msg timestamp="20210205 20:02:05.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.552" endtime="20210205 20:02:05.630"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="PostsHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 20:02:05.632" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:05.631" endtime="20210205 20:02:05.632"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.633" endtime="20210205 20:02:05.634"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.633" endtime="20210205 20:02:05.634"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.634" endtime="20210205 20:02:05.635"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.634" endtime="20210205 20:02:05.635"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.635" endtime="20210205 20:02:05.636"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.635" endtime="20210205 20:02:05.636"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.636" endtime="20210205 20:02:05.637"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.636" endtime="20210205 20:02:05.637"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.637" endtime="20210205 20:02:05.638"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.637" endtime="20210205 20:02:05.638"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.638" endtime="20210205 20:02:05.639"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.638" endtime="20210205 20:02:05.639"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.639" endtime="20210205 20:02:05.640"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.639" endtime="20210205 20:02:05.640"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.641" endtime="20210205 20:02:05.641"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.640" endtime="20210205 20:02:05.641"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.642" endtime="20210205 20:02:05.642"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.641" endtime="20210205 20:02:05.642"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.643" endtime="20210205 20:02:05.643"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.642" endtime="20210205 20:02:05.643"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.632" endtime="20210205 20:02:05.643"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:02:05.644" level="INFO">Length is 10</msg>
<msg timestamp="20210205 20:02:05.644" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.644" endtime="20210205 20:02:05.644"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 20:02:05.645" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:05.645" endtime="20210205 20:02:05.645"></status>
</kw>
<msg timestamp="20210205 20:02:05.646" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.631" endtime="20210205 20:02:05.646"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${exppostcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.646" endtime="20210205 20:02:05.646"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.547" endtime="20210205 20:02:05.647"></status>
</kw>
<doc>Valid Id Boundary Keys on TestData.json: users.validInitial, users.validInitCount, users.validFinal, users.validFinalCCount</doc>
<tags>
<tag>Positive</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:02:05.342" endtime="20210205 20:02:05.648" critical="yes"></status>
</test>
<test id="s1-t3" name="TC003 VALIDATE EMPTY POST COUNT BY INVALID USER ID - INVALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:05.653" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:05.651" endtime="20210205 20:02:05.653"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:02:05.654" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.653" endtime="20210205 20:02:05.654"></status>
</kw>
<msg timestamp="20210205 20:02:05.655" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.651" endtime="20210205 20:02:05.655"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.657" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.655" endtime="20210205 20:02:05.657"></status>
</kw>
<msg timestamp="20210205 20:02:05.657" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.655" endtime="20210205 20:02:05.657"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.659" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.658" endtime="20210205 20:02:05.659"></status>
</kw>
<msg timestamp="20210205 20:02:05.660" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.657" endtime="20210205 20:02:05.660"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.665" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.663" endtime="20210205 20:02:05.666"></status>
</kw>
<msg timestamp="20210205 20:02:05.667" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.661" endtime="20210205 20:02:05.667"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.669" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.668" endtime="20210205 20:02:05.669"></status>
</kw>
<msg timestamp="20210205 20:02:05.670" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.667" endtime="20210205 20:02:05.670"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.671" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.671" endtime="20210205 20:02:05.672"></status>
</kw>
<msg timestamp="20210205 20:02:05.672" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.670" endtime="20210205 20:02:05.672"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.674" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.673" endtime="20210205 20:02:05.674"></status>
</kw>
<msg timestamp="20210205 20:02:05.674" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.672" endtime="20210205 20:02:05.674"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.678" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:02:05.676" endtime="20210205 20:02:05.678"></status>
</kw>
<msg timestamp="20210205 20:02:05.679" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:05.675" endtime="20210205 20:02:05.679"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.682" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.681" endtime="20210205 20:02:05.682"></status>
</kw>
<msg timestamp="20210205 20:02:05.682" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.679" endtime="20210205 20:02:05.682"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.684" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.683" endtime="20210205 20:02:05.684"></status>
</kw>
<msg timestamp="20210205 20:02:05.684" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.682" endtime="20210205 20:02:05.684"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.686" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.685" endtime="20210205 20:02:05.686"></status>
</kw>
<msg timestamp="20210205 20:02:05.686" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.684" endtime="20210205 20:02:05.686"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.688" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:02:05.687" endtime="20210205 20:02:05.688"></status>
</kw>
<msg timestamp="20210205 20:02:05.688" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:05.686" endtime="20210205 20:02:05.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.689" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.688" endtime="20210205 20:02:05.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:02:05.689" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:02:05.689" endtime="20210205 20:02:05.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.690" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.690" endtime="20210205 20:02:05.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.691" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.690" endtime="20210205 20:02:05.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.691" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.691" endtime="20210205 20:02:05.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.692" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.691" endtime="20210205 20:02:05.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.692" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.692" endtime="20210205 20:02:05.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.693" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.692" endtime="20210205 20:02:05.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.693" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:05.693" endtime="20210205 20:02:05.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.694" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.694" endtime="20210205 20:02:05.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.696" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.695" endtime="20210205 20:02:05.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.697" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.696" endtime="20210205 20:02:05.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.697" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:05.697" endtime="20210205 20:02:05.697"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.650" endtime="20210205 20:02:05.698"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Invalid Id Boundary Keys on TestData.json: users.InvalidInitial, users.InvalidFinal</arg>
</arguments>
<msg timestamp="20210205 20:02:05.700" level="INFO">Set test documentation to:
Invalid Id Boundary Keys on TestData.json: users.InvalidInitial, users.InvalidFinal</msg>
<status status="PASS" starttime="20210205 20:02:05.699" endtime="20210205 20:02:05.700"></status>
</kw>
<kw name="VALIDATE POST COUNT BY INVALID USER ID" library="PostsHelper">
<arguments>
<arg>${invalidIuserid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:05.702" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:05.701" endtime="20210205 20:02:05.702"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:05.703" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.702" endtime="20210205 20:02:05.703"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.704" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:05.704" endtime="20210205 20:02:05.705"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:05.789" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/0/posts 
 path_url=/users/0/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:05.789" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/0/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d83526ef0451bb75a62c09a45fe0523301612573327; expires=Mon, 08-Mar-21 01:02:07 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612543132', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '95', 'Accept-Ranges': 'bytes', 'cf-request-id': '08167556c90000e76c0510e000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=t1tuc4iTGhj7Iv%2BMGTH66w7vbhEHIyks66%2BMV6HliOUu9XaWUg62oUkhX6O%2BySaV6ZNGcwY8%2FeNtKVSXN2Ur87bAMfTTZnmbEDqjGsOiIWUUyWjIf%2BsvFTgpAnWT"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f19e0dd3e76c-EWR'} 
 body=[] 
 </msg>
<msg timestamp="20210205 20:02:05.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.705" endtime="20210205 20:02:05.790"></status>
</kw>
<msg timestamp="20210205 20:02:05.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.703" endtime="20210205 20:02:05.790"></status>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.790" endtime="20210205 20:02:05.792"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.700" endtime="20210205 20:02:05.792"></status>
</kw>
<kw name="VALIDATE POST COUNT BY INVALID USER ID" library="PostsHelper">
<arguments>
<arg>${invalidFuserid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:05.796" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:05.794" endtime="20210205 20:02:05.796"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:05.798" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.797" endtime="20210205 20:02:05.798"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.801" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:05.800" endtime="20210205 20:02:05.802"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:05.860" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/11/posts 
 path_url=/users/11/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:05.860" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/11/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dfe30057074ce27b2dc9c1df1e635d72f1612573327; expires=Mon, 08-Mar-21 01:02:07 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612543132', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '95', 'Accept-Ranges': 'bytes', 'cf-request-id': '081675570f0000e6fcfea76000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mhVPraGrZ8Snk9IMvsGuqEO8BdfMKo9ryWhrcsJB3uV0uigpieb6hMZN3EMojVPikN0MMeEMjfVu6m2oErnMnNgryr0eN9ejn64GJuyTYWpZlA4mHPPTzZUkgPQa"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f19e7b36e6fc-EWR'} 
 body=[] 
 </msg>
<msg timestamp="20210205 20:02:05.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.802" endtime="20210205 20:02:05.861"></status>
</kw>
<msg timestamp="20210205 20:02:05.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.799" endtime="20210205 20:02:05.861"></status>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:05.862" endtime="20210205 20:02:05.863"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.793" endtime="20210205 20:02:05.864"></status>
</kw>
<doc>Invalid Id Boundary Keys on TestData.json: users.InvalidInitial, users.InvalidFinal</doc>
<tags>
<tag>Negative</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:02:05.649" endtime="20210205 20:02:05.865" critical="yes"></status>
</test>
<test id="s1-t4" name="TC004 VALIDATE GET POST BY POST ID - VALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:05.870" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:05.869" endtime="20210205 20:02:05.870"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:02:05.872" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.870" endtime="20210205 20:02:05.872"></status>
</kw>
<msg timestamp="20210205 20:02:05.872" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.868" endtime="20210205 20:02:05.872"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.875" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.873" endtime="20210205 20:02:05.875"></status>
</kw>
<msg timestamp="20210205 20:02:05.875" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.873" endtime="20210205 20:02:05.875"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.877" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.876" endtime="20210205 20:02:05.877"></status>
</kw>
<msg timestamp="20210205 20:02:05.878" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.875" endtime="20210205 20:02:05.878"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.919" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.918" endtime="20210205 20:02:05.919"></status>
</kw>
<msg timestamp="20210205 20:02:05.920" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.879" endtime="20210205 20:02:05.920"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.921" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.920" endtime="20210205 20:02:05.921"></status>
</kw>
<msg timestamp="20210205 20:02:05.922" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.920" endtime="20210205 20:02:05.922"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.924" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.922" endtime="20210205 20:02:05.924"></status>
</kw>
<msg timestamp="20210205 20:02:05.924" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.922" endtime="20210205 20:02:05.924"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.927" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.926" endtime="20210205 20:02:05.927"></status>
</kw>
<msg timestamp="20210205 20:02:05.928" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.925" endtime="20210205 20:02:05.928"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.931" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:02:05.929" endtime="20210205 20:02:05.931"></status>
</kw>
<msg timestamp="20210205 20:02:05.932" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:05.928" endtime="20210205 20:02:05.932"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.934" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.933" endtime="20210205 20:02:05.934"></status>
</kw>
<msg timestamp="20210205 20:02:05.934" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.932" endtime="20210205 20:02:05.934"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.936" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.935" endtime="20210205 20:02:05.936"></status>
</kw>
<msg timestamp="20210205 20:02:05.937" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.935" endtime="20210205 20:02:05.937"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.939" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.937" endtime="20210205 20:02:05.939"></status>
</kw>
<msg timestamp="20210205 20:02:05.939" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.937" endtime="20210205 20:02:05.939"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:05.951" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:02:05.942" endtime="20210205 20:02:05.952"></status>
</kw>
<msg timestamp="20210205 20:02:05.952" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:05.939" endtime="20210205 20:02:05.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.954" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.953" endtime="20210205 20:02:05.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:02:05.955" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:02:05.954" endtime="20210205 20:02:05.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.957" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.956" endtime="20210205 20:02:05.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.959" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.958" endtime="20210205 20:02:05.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.960" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.959" endtime="20210205 20:02:05.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.961" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.961" endtime="20210205 20:02:05.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.962" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:05.962" endtime="20210205 20:02:05.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.963" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.963" endtime="20210205 20:02:05.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.964" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:05.964" endtime="20210205 20:02:05.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.965" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:05.965" endtime="20210205 20:02:05.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.966" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:02:05.965" endtime="20210205 20:02:05.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.966" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:05.966" endtime="20210205 20:02:05.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.967" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:05.967" endtime="20210205 20:02:05.967"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.867" endtime="20210205 20:02:05.967"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Valid Post Id Boundary Values on TestData.json: posts.validInitial, posts.validFinal</arg>
</arguments>
<msg timestamp="20210205 20:02:05.969" level="INFO">Set test documentation to:
Valid Post Id Boundary Values on TestData.json: posts.validInitial, posts.validFinal</msg>
<status status="PASS" starttime="20210205 20:02:05.968" endtime="20210205 20:02:05.969"></status>
</kw>
<kw name="VALIDATE POST BY VALID POST ID" library="PostsHelper">
<arguments>
<arg>${postinId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:05.972" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:05.971" endtime="20210205 20:02:05.973"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:05.975" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:05.973" endtime="20210205 20:02:05.975"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:05.977" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:05.977" endtime="20210205 20:02:05.978"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:06.060" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:06.060" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d88e51f9906b8fe7c0bcf8b0f025d48831612573327; expires=Mon, 08-Mar-21 01:02:07 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4669', 'cf-request-id': '08167557d7000015936a812000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=HeaxH0GImCJBKD0eP82w3PoW8%2BQqAiFpnvi1q23K8iRzu%2BuKb6kMJQMakV%2BuFcvvZOWKxZb0qSr3gdRWuyn1VRA5yGdWOra1jDwMT7WKtpCbzjZsjGl25916UuQL"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f19fbe091593-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<msg timestamp="20210205 20:02:06.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.979" endtime="20210205 20:02:06.060"></status>
</kw>
<msg timestamp="20210205 20:02:06.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:05.975" endtime="20210205 20:02:06.061"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:06.063" endtime="20210205 20:02:06.065"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.062" endtime="20210205 20:02:06.066"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.061" endtime="20210205 20:02:06.066"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:06.068" endtime="20210205 20:02:06.069"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.066" endtime="20210205 20:02:06.069"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.070" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:06.070" endtime="20210205 20:02:06.070"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.161" level="INFO">${idvalue} = [1]</msg>
<status status="PASS" starttime="20210205 20:02:06.071" endtime="20210205 20:02:06.161"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:06.162" level="INFO">${responseid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:06.161" endtime="20210205 20:02:06.162"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:06.163" endtime="20210205 20:02:06.164"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.164" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:06.164" endtime="20210205 20:02:06.164"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.069" endtime="20210205 20:02:06.165"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:05.970" endtime="20210205 20:02:06.165"></status>
</kw>
<kw name="VALIDATE POST BY VALID POST ID" library="PostsHelper">
<arguments>
<arg>${postfId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:06.168" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:06.167" endtime="20210205 20:02:06.168"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:06.170" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:06.169" endtime="20210205 20:02:06.171"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.173" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:06.173" endtime="20210205 20:02:06.175"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:06.334" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:06.335" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d168b1f1e1969db37b820db4c7dddce001612573327; expires=Mon, 08-Mar-21 01:02:07 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611591853', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4331', 'cf-request-id': '08167558df0000f005a38af000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=pEcP5i6wTPdFF3f7avGpb5JLRN2Yukvv0d4yMTyntsF63KrFf%2BYfoPX4LPzJMVg43T6fVDtgtjHxTMgq%2Fyv%2FoZVQg8ZicwjdzSRdZLZw2ya8jjXcCHay7l5lL2Lw"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1a16f76f005-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<msg timestamp="20210205 20:02:06.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:06.175" endtime="20210205 20:02:06.336"></status>
</kw>
<msg timestamp="20210205 20:02:06.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:06.171" endtime="20210205 20:02:06.336"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:06.339" endtime="20210205 20:02:06.343"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.338" endtime="20210205 20:02:06.343"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.337" endtime="20210205 20:02:06.343"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:06.345" endtime="20210205 20:02:06.346"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.344" endtime="20210205 20:02:06.346"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.348" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:06.348" endtime="20210205 20:02:06.348"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.423" level="INFO">${idvalue} = [100]</msg>
<status status="PASS" starttime="20210205 20:02:06.348" endtime="20210205 20:02:06.423"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:06.424" level="INFO">${responseid} = 100</msg>
<status status="PASS" starttime="20210205 20:02:06.423" endtime="20210205 20:02:06.424"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:06.425" endtime="20210205 20:02:06.426"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.427" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:06.427" endtime="20210205 20:02:06.427"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.346" endtime="20210205 20:02:06.427"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.166" endtime="20210205 20:02:06.428"></status>
</kw>
<doc>Valid Post Id Boundary Values on TestData.json: posts.validInitial, posts.validFinal</doc>
<tags>
<tag>Positive</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:02:05.866" endtime="20210205 20:02:06.429" critical="yes"></status>
</test>
<test id="s1-t5" name="TC005 VALIDATE GET POST BY POST ID - INVALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:06.436" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:06.435" endtime="20210205 20:02:06.436"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:02:06.437" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:06.436" endtime="20210205 20:02:06.438"></status>
</kw>
<msg timestamp="20210205 20:02:06.438" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:06.434" endtime="20210205 20:02:06.438"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.444" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:06.443" endtime="20210205 20:02:06.444"></status>
</kw>
<msg timestamp="20210205 20:02:06.445" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:02:06.439" endtime="20210205 20:02:06.445"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.447" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:06.446" endtime="20210205 20:02:06.448"></status>
</kw>
<msg timestamp="20210205 20:02:06.448" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:06.446" endtime="20210205 20:02:06.448"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.450" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:06.449" endtime="20210205 20:02:06.450"></status>
</kw>
<msg timestamp="20210205 20:02:06.450" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:06.448" endtime="20210205 20:02:06.450"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.454" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:06.452" endtime="20210205 20:02:06.454"></status>
</kw>
<msg timestamp="20210205 20:02:06.455" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:02:06.451" endtime="20210205 20:02:06.455"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.458" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:06.456" endtime="20210205 20:02:06.458"></status>
</kw>
<msg timestamp="20210205 20:02:06.458" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:06.455" endtime="20210205 20:02:06.459"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.463" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:06.460" endtime="20210205 20:02:06.463"></status>
</kw>
<msg timestamp="20210205 20:02:06.464" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:06.459" endtime="20210205 20:02:06.464"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.468" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:02:06.465" endtime="20210205 20:02:06.468"></status>
</kw>
<msg timestamp="20210205 20:02:06.469" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:06.464" endtime="20210205 20:02:06.469"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.473" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:06.470" endtime="20210205 20:02:06.473"></status>
</kw>
<msg timestamp="20210205 20:02:06.473" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:06.469" endtime="20210205 20:02:06.473"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.475" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:06.474" endtime="20210205 20:02:06.476"></status>
</kw>
<msg timestamp="20210205 20:02:06.476" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:02:06.473" endtime="20210205 20:02:06.476"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.479" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:06.477" endtime="20210205 20:02:06.479"></status>
</kw>
<msg timestamp="20210205 20:02:06.480" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:06.476" endtime="20210205 20:02:06.480"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:06.486" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:02:06.484" endtime="20210205 20:02:06.486"></status>
</kw>
<msg timestamp="20210205 20:02:06.486" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:06.480" endtime="20210205 20:02:06.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.488" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:06.488" endtime="20210205 20:02:06.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:02:06.490" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:02:06.489" endtime="20210205 20:02:06.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.497" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:02:06.490" endtime="20210205 20:02:06.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.500" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:06.498" endtime="20210205 20:02:06.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.501" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:06.500" endtime="20210205 20:02:06.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.504" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:02:06.502" endtime="20210205 20:02:06.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.505" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:06.505" endtime="20210205 20:02:06.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.506" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:06.506" endtime="20210205 20:02:06.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.508" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:06.507" endtime="20210205 20:02:06.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.510" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:06.509" endtime="20210205 20:02:06.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.514" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:02:06.511" endtime="20210205 20:02:06.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.515" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:06.514" endtime="20210205 20:02:06.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.517" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:06.516" endtime="20210205 20:02:06.517"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.434" endtime="20210205 20:02:06.518"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Invalid Post Id Boundary Values: posts.InvalidInitial, posts.InvalidFinal</arg>
</arguments>
<msg timestamp="20210205 20:02:06.525" level="INFO">Set test documentation to:
Invalid Post Id Boundary Values: posts.InvalidInitial, posts.InvalidFinal</msg>
<status status="PASS" starttime="20210205 20:02:06.524" endtime="20210205 20:02:06.525"></status>
</kw>
<kw name="VALIDATE POST BY INVALID POST ID" library="PostsHelper">
<arguments>
<arg>${invalidIpostid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:06.528" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:06.527" endtime="20210205 20:02:06.528"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:06.530" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:06.528" endtime="20210205 20:02:06.530"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.533" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:06.533" endtime="20210205 20:02:06.534"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:06.590" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/0 
 path_url=/posts/0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:06.591" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/0 
 status=404, reason=Not Found 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d92f1b1a6b8bd446b2df91331c153b7661612573327; expires=Mon, 08-Mar-21 01:02:07 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612546792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '26540', 'cf-request-id': '08167559e60000e6bc5b098000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Ly9IrkHuXsF3NVpBDALzaOw9Hgygytb15%2FDNOZgFzX4PW%2FKKfGKLA6gQAkKtjENFMOkkSNNT75WvCHuubx5ReqeezcTNPsA4Ep6VjzT1GROEIeoULtl%2BXyRQqz5i"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1a30d52e6bc-EWR'} 
 body={} 
 </msg>
<msg timestamp="20210205 20:02:06.598" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/0</msg>
<status status="FAIL" starttime="20210205 20:02:06.534" endtime="20210205 20:02:06.599"></status>
</kw>
<status status="FAIL" starttime="20210205 20:02:06.532" endtime="20210205 20:02:06.599"></status>
</kw>
<msg timestamp="20210205 20:02:06.600" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/0</msg>
<status status="PASS" starttime="20210205 20:02:06.531" endtime="20210205 20:02:06.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:06.600" endtime="20210205 20:02:06.601"></status>
</kw>
<kw name="GET RANDOM STRING" library="PostsHelper">
<assign>
<var>${randomstr}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${randompostid}</var>
</assign>
<msg timestamp="20210205 20:02:06.602" level="INFO">${randompostid} = bpFWB</msg>
<status status="PASS" starttime="20210205 20:02:06.602" endtime="20210205 20:02:06.602"></status>
</kw>
<msg timestamp="20210205 20:02:06.603" level="INFO">${randomstr} = bpFWB</msg>
<status status="PASS" starttime="20210205 20:02:06.601" endtime="20210205 20:02:06.603"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.605" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:06.604" endtime="20210205 20:02:06.605"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:06.811" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/bpFWB 
 path_url=/posts/bpFWB 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:06.812" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/bpFWB 
 status=404, reason=Not Found 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3f8537be1f9d6d2ac1388996e3f04aec1612573327; expires=Mon, 08-Mar-21 01:02:07 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612573361', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'MISS', 'cf-request-id': '0816755a2d00003da911308000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=hZUa7ls69PNV0lQSf6W%2Bos8bjlVojDM9ganlLkDts7WlqMT1yReGAoafMLkYo57xVEQfSORBKVi4ymj6EQVbHB5Lao5VylS7N%2BQ5I%2B8JAc%2FwNH%2F6dLyVBpMEd8wY"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1a37cd13da9-EWR'} 
 body={} 
 </msg>
<msg timestamp="20210205 20:02:06.815" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/bpFWB</msg>
<status status="FAIL" starttime="20210205 20:02:06.606" endtime="20210205 20:02:06.816"></status>
</kw>
<status status="FAIL" starttime="20210205 20:02:06.603" endtime="20210205 20:02:06.816"></status>
</kw>
<msg timestamp="20210205 20:02:06.816" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/bpFWB</msg>
<status status="PASS" starttime="20210205 20:02:06.603" endtime="20210205 20:02:06.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:06.817" endtime="20210205 20:02:06.818"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.526" endtime="20210205 20:02:06.818"></status>
</kw>
<kw name="VALIDATE POST BY INVALID POST ID" library="PostsHelper">
<arguments>
<arg>${invalidFpostid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:06.822" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:06.821" endtime="20210205 20:02:06.822"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:06.824" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:06.823" endtime="20210205 20:02:06.824"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.829" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:06.828" endtime="20210205 20:02:06.830"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:06.888" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/101 
 path_url=/posts/101 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:06.888" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/101 
 status=404, reason=Not Found 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d6d4f4e18a48cb511fdfc5c1101f477d91612573328; expires=Mon, 08-Mar-21 01:02:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '998', 'x-ratelimit-reset': '1612546792', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '26541', 'cf-request-id': '0816755b0e0000e72caf84b000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=JhgvNe2YetF4F2r8ztdSc04uMMiHEDaH5goTN8%2BvC5cMCYkSoq3v7hqaNRcAlHtHjvYCMrmMbMI0HvcxIIYaGDw%2BfYhVSI0Yo7JS%2FJK0b4cxhl1GN4773Zd6yepZ"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1a4ec51e72c-EWR'} 
 body={} 
 </msg>
<msg timestamp="20210205 20:02:06.892" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/101</msg>
<status status="FAIL" starttime="20210205 20:02:06.830" endtime="20210205 20:02:06.892"></status>
</kw>
<status status="FAIL" starttime="20210205 20:02:06.826" endtime="20210205 20:02:06.893"></status>
</kw>
<msg timestamp="20210205 20:02:06.893" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/101</msg>
<status status="PASS" starttime="20210205 20:02:06.825" endtime="20210205 20:02:06.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:06.893" endtime="20210205 20:02:06.894"></status>
</kw>
<kw name="GET RANDOM STRING" library="PostsHelper">
<assign>
<var>${randomstr}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${randompostid}</var>
</assign>
<msg timestamp="20210205 20:02:06.896" level="INFO">${randompostid} = EBNad</msg>
<status status="PASS" starttime="20210205 20:02:06.896" endtime="20210205 20:02:06.896"></status>
</kw>
<msg timestamp="20210205 20:02:06.897" level="INFO">${randomstr} = EBNad</msg>
<status status="PASS" starttime="20210205 20:02:06.894" endtime="20210205 20:02:06.897"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:06.899" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:06.899" endtime="20210205 20:02:06.900"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:07.073" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/EBNad 
 path_url=/posts/EBNad 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:07.073" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/EBNad 
 status=404, reason=Not Found 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbe5fa9eb8cdab5236f45db91df11fe131612573328; expires=Mon, 08-Mar-21 01:02:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612573361', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'MISS', 'cf-request-id': '0816755b5b00003e04372c1000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=x7j%2FUn1KPuBXZPmJ9uuQcH5gVeItknQuQeb9iSy8srisIopZByyG5HMHRHKNJKg8u3853xPegE7HC1v%2FYG%2FbqnGQY9%2FKLPves8TO%2FU9gtdbIjzwSPh6flz%2Bg%2FCrq"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1a55d0c3e04-EWR'} 
 body={} 
 </msg>
<msg timestamp="20210205 20:02:07.077" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/EBNad</msg>
<status status="FAIL" starttime="20210205 20:02:06.900" endtime="20210205 20:02:07.077"></status>
</kw>
<status status="FAIL" starttime="20210205 20:02:06.898" endtime="20210205 20:02:07.078"></status>
</kw>
<msg timestamp="20210205 20:02:07.078" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/EBNad</msg>
<status status="PASS" starttime="20210205 20:02:06.897" endtime="20210205 20:02:07.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.079" endtime="20210205 20:02:07.079"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:06.820" endtime="20210205 20:02:07.079"></status>
</kw>
<doc>Invalid Post Id Boundary Values: posts.InvalidInitial, posts.InvalidFinal</doc>
<tags>
<tag>Negative</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:02:06.432" endtime="20210205 20:02:07.081" critical="yes"></status>
</test>
<test id="s1-t6" name="TC006 COMPARE USER ID FILTERED ALL POSTS RESPONSE TO GET POST BY USER ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:07.096" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:07.095" endtime="20210205 20:02:07.096"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:02:07.098" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:07.096" endtime="20210205 20:02:07.098"></status>
</kw>
<msg timestamp="20210205 20:02:07.099" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:07.093" endtime="20210205 20:02:07.099"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:07.102" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:07.100" endtime="20210205 20:02:07.102"></status>
</kw>
<msg timestamp="20210205 20:02:07.102" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:02:07.099" endtime="20210205 20:02:07.102"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:07.105" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:07.104" endtime="20210205 20:02:07.105"></status>
</kw>
<msg timestamp="20210205 20:02:07.105" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:07.103" endtime="20210205 20:02:07.106"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:07.108" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:07.107" endtime="20210205 20:02:07.108"></status>
</kw>
<msg timestamp="20210205 20:02:07.108" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:07.106" endtime="20210205 20:02:07.109"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:07.111" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:07.110" endtime="20210205 20:02:07.112"></status>
</kw>
<msg timestamp="20210205 20:02:07.112" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:02:07.109" endtime="20210205 20:02:07.112"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:07.116" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:07.114" endtime="20210205 20:02:07.116"></status>
</kw>
<msg timestamp="20210205 20:02:07.116" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:07.113" endtime="20210205 20:02:07.116"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:07.119" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:07.117" endtime="20210205 20:02:07.119"></status>
</kw>
<msg timestamp="20210205 20:02:07.119" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:07.117" endtime="20210205 20:02:07.120"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:07.122" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:02:07.121" endtime="20210205 20:02:07.123"></status>
</kw>
<msg timestamp="20210205 20:02:07.124" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:07.120" endtime="20210205 20:02:07.124"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:07.128" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:07.126" endtime="20210205 20:02:07.128"></status>
</kw>
<msg timestamp="20210205 20:02:07.129" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:07.125" endtime="20210205 20:02:07.129"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:07.133" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:07.131" endtime="20210205 20:02:07.133"></status>
</kw>
<msg timestamp="20210205 20:02:07.134" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:02:07.129" endtime="20210205 20:02:07.134"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:07.137" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:07.136" endtime="20210205 20:02:07.137"></status>
</kw>
<msg timestamp="20210205 20:02:07.138" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:07.134" endtime="20210205 20:02:07.138"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:07.140" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:02:07.139" endtime="20210205 20:02:07.140"></status>
</kw>
<msg timestamp="20210205 20:02:07.141" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:07.138" endtime="20210205 20:02:07.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.142" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:07.141" endtime="20210205 20:02:07.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:02:07.143" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:02:07.142" endtime="20210205 20:02:07.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.144" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:02:07.143" endtime="20210205 20:02:07.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.147" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:07.145" endtime="20210205 20:02:07.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.148" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:07.147" endtime="20210205 20:02:07.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.149" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:02:07.148" endtime="20210205 20:02:07.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.150" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:07.149" endtime="20210205 20:02:07.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.150" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:07.150" endtime="20210205 20:02:07.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.151" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:07.150" endtime="20210205 20:02:07.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.152" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:07.151" endtime="20210205 20:02:07.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.154" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:02:07.153" endtime="20210205 20:02:07.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.155" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:07.155" endtime="20210205 20:02:07.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.156" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:07.156" endtime="20210205 20:02:07.156"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.092" endtime="20210205 20:02:07.156"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Compare Full Response User Id filtering to /users/{userid}/posts</arg>
</arguments>
<msg timestamp="20210205 20:02:07.158" level="INFO">Set test documentation to:
Compare Full Response User Id filtering to /users/{userid}/posts</msg>
<status status="PASS" starttime="20210205 20:02:07.157" endtime="20210205 20:02:07.158"></status>
</kw>
<kw name="VALIDATE FILTERED POST RESPONSE MATCHES USER ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${userinId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:07.159" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:07.159" endtime="20210205 20:02:07.159"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:07.160" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:07.160" endtime="20210205 20:02:07.161"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.164" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:07.163" endtime="20210205 20:02:07.164"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:07.218" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/1/posts 
 path_url=/users/1/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:07.218" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/1/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcf25c12eddfe8f18e0dc41c28c8972281612573328; expires=Mon, 08-Mar-21 01:02:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612397753', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"aa6-j2NSH739l9uq40OywFMn7Y0C/iY"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '23125', 'cf-request-id': '0816755c5f0000cce2b7133000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=CEO3PQrlB0wviiaDoGHXlTqV%2BGMLnnp47OFcgghvlUf%2BLByBkE2FltRtfTtYqE21CHgmP2PyKtnfTcTvSDajMIWgLkLFSls%2FIc%2BgoP2TqVfJn5V57qfhgG8psxEX"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1a6f845cce2-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  }
] 
 </msg>
<msg timestamp="20210205 20:02:07.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:07.165" endtime="20210205 20:02:07.219"></status>
</kw>
<msg timestamp="20210205 20:02:07.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:07.161" endtime="20210205 20:02:07.219"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:07.220" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.219" endtime="20210205 20:02:07.220"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:07.220" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.220" endtime="20210205 20:02:07.220"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:07.221" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.220" endtime="20210205 20:02:07.221"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:07.221" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.221" endtime="20210205 20:02:07.221"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:07.222" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.221" endtime="20210205 20:02:07.222"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:07.222" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.222" endtime="20210205 20:02:07.222"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.223" endtime="20210205 20:02:07.223"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.224" endtime="20210205 20:02:07.224"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.224" endtime="20210205 20:02:07.224"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.223" endtime="20210205 20:02:07.224"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.225" endtime="20210205 20:02:07.225"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.226" endtime="20210205 20:02:07.226"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.226" endtime="20210205 20:02:07.227"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.224" endtime="20210205 20:02:07.227"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.227" endtime="20210205 20:02:07.227"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.227" endtime="20210205 20:02:07.228"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.229" endtime="20210205 20:02:07.230"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.227" endtime="20210205 20:02:07.230"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.230" endtime="20210205 20:02:07.231"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.231" endtime="20210205 20:02:07.232"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.232" endtime="20210205 20:02:07.233"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.230" endtime="20210205 20:02:07.233"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.233" endtime="20210205 20:02:07.234"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.234" endtime="20210205 20:02:07.234"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.235" endtime="20210205 20:02:07.235"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.233" endtime="20210205 20:02:07.235"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.236" endtime="20210205 20:02:07.236"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.236" endtime="20210205 20:02:07.237"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.237" endtime="20210205 20:02:07.238"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.235" endtime="20210205 20:02:07.238"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.238" endtime="20210205 20:02:07.239"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.239" endtime="20210205 20:02:07.240"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.240" endtime="20210205 20:02:07.241"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.238" endtime="20210205 20:02:07.241"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.241" endtime="20210205 20:02:07.242"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.242" endtime="20210205 20:02:07.243"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.243" endtime="20210205 20:02:07.244"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.241" endtime="20210205 20:02:07.244"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.244" endtime="20210205 20:02:07.245"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.245" endtime="20210205 20:02:07.246"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.246" endtime="20210205 20:02:07.246"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.244" endtime="20210205 20:02:07.246"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.247" endtime="20210205 20:02:07.248"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.248" endtime="20210205 20:02:07.249"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.249" endtime="20210205 20:02:07.249"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.247" endtime="20210205 20:02:07.249"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.222" endtime="20210205 20:02:07.249"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_All_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.251" level="INFO">Creating Session using : alias=Get_All_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:07.251" endtime="20210205 20:02:07.252"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:07.406" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:07.407" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5ce6bc532fcf167bae151b1344cb2cbf1612573328; expires=Mon, 08-Mar-21 01:02:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612568801', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4576', 'cf-request-id': '0816755d1900000cc9298ff000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=3f7lQwliRQoV%2BSwCWB8WchffwcFdTVLqK4kN02mUHWTYRenUcemuwIAYV%2BXrKU6oftpIRsu8QFi2rOJLlLgPsHphgDWGoLLgc6hEdt5irv3ezJjl%2FPZtGJsR%2F86K"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1a829af0cc9-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210205 20:02:07.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:07.252" endtime="20210205 20:02:07.408"></status>
</kw>
<msg timestamp="20210205 20:02:07.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:07.250" endtime="20210205 20:02:07.408"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.411" endtime="20210205 20:02:07.411"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.410" endtime="20210205 20:02:07.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.412" endtime="20210205 20:02:07.413"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.412" endtime="20210205 20:02:07.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.414" endtime="20210205 20:02:07.415"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.413" endtime="20210205 20:02:07.415"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.409" endtime="20210205 20:02:07.416"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.417" endtime="20210205 20:02:07.418"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.416" endtime="20210205 20:02:07.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.419" endtime="20210205 20:02:07.420"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.418" endtime="20210205 20:02:07.420"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.421" endtime="20210205 20:02:07.421"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.420" endtime="20210205 20:02:07.421"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.416" endtime="20210205 20:02:07.422"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.423" endtime="20210205 20:02:07.423"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.422" endtime="20210205 20:02:07.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.424" endtime="20210205 20:02:07.425"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.424" endtime="20210205 20:02:07.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.426" endtime="20210205 20:02:07.427"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.425" endtime="20210205 20:02:07.427"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.422" endtime="20210205 20:02:07.427"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.429" endtime="20210205 20:02:07.430"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.428" endtime="20210205 20:02:07.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.431" endtime="20210205 20:02:07.432"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.430" endtime="20210205 20:02:07.432"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.433" endtime="20210205 20:02:07.434"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.432" endtime="20210205 20:02:07.434"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.427" endtime="20210205 20:02:07.434"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.435" endtime="20210205 20:02:07.435"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.434" endtime="20210205 20:02:07.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.437" endtime="20210205 20:02:07.437"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.436" endtime="20210205 20:02:07.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.438" endtime="20210205 20:02:07.439"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.438" endtime="20210205 20:02:07.439"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.434" endtime="20210205 20:02:07.439"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.440" endtime="20210205 20:02:07.441"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.439" endtime="20210205 20:02:07.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.442" endtime="20210205 20:02:07.443"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.441" endtime="20210205 20:02:07.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.444" endtime="20210205 20:02:07.444"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.443" endtime="20210205 20:02:07.444"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.439" endtime="20210205 20:02:07.444"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.446" endtime="20210205 20:02:07.446"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.445" endtime="20210205 20:02:07.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.448" endtime="20210205 20:02:07.449"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.447" endtime="20210205 20:02:07.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.450" endtime="20210205 20:02:07.450"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.449" endtime="20210205 20:02:07.451"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.445" endtime="20210205 20:02:07.451"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.452" endtime="20210205 20:02:07.453"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.451" endtime="20210205 20:02:07.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.454" endtime="20210205 20:02:07.454"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.453" endtime="20210205 20:02:07.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.455" endtime="20210205 20:02:07.456"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.455" endtime="20210205 20:02:07.456"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.451" endtime="20210205 20:02:07.456"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.457" endtime="20210205 20:02:07.458"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.457" endtime="20210205 20:02:07.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.459" endtime="20210205 20:02:07.460"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.458" endtime="20210205 20:02:07.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.461" endtime="20210205 20:02:07.462"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.460" endtime="20210205 20:02:07.462"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.456" endtime="20210205 20:02:07.462"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.463" endtime="20210205 20:02:07.464"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.462" endtime="20210205 20:02:07.464"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.465" endtime="20210205 20:02:07.466"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.464" endtime="20210205 20:02:07.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.467" endtime="20210205 20:02:07.468"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.466" endtime="20210205 20:02:07.468"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.462" endtime="20210205 20:02:07.468"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.468" endtime="20210205 20:02:07.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.469" endtime="20210205 20:02:07.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.470" endtime="20210205 20:02:07.471"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.468" endtime="20210205 20:02:07.471"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.471" endtime="20210205 20:02:07.472"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.472" endtime="20210205 20:02:07.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.473" endtime="20210205 20:02:07.474"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.471" endtime="20210205 20:02:07.474"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.474" endtime="20210205 20:02:07.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.475" endtime="20210205 20:02:07.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.476" endtime="20210205 20:02:07.477"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.474" endtime="20210205 20:02:07.477"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.477" endtime="20210205 20:02:07.478"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.478" endtime="20210205 20:02:07.478"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.479" endtime="20210205 20:02:07.479"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.477" endtime="20210205 20:02:07.479"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.480" endtime="20210205 20:02:07.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.481" endtime="20210205 20:02:07.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.482" endtime="20210205 20:02:07.483"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.480" endtime="20210205 20:02:07.483"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.484" endtime="20210205 20:02:07.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.485" endtime="20210205 20:02:07.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.486" endtime="20210205 20:02:07.487"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.483" endtime="20210205 20:02:07.487"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.487" endtime="20210205 20:02:07.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.489" endtime="20210205 20:02:07.489"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.490" endtime="20210205 20:02:07.490"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.487" endtime="20210205 20:02:07.491"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.491" endtime="20210205 20:02:07.492"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.492" endtime="20210205 20:02:07.493"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.493" endtime="20210205 20:02:07.494"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.491" endtime="20210205 20:02:07.494"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.495" endtime="20210205 20:02:07.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.496" endtime="20210205 20:02:07.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.497" endtime="20210205 20:02:07.498"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.495" endtime="20210205 20:02:07.498"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.498" endtime="20210205 20:02:07.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.500" endtime="20210205 20:02:07.500"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.501" endtime="20210205 20:02:07.501"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.498" endtime="20210205 20:02:07.502"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.502" endtime="20210205 20:02:07.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.503" endtime="20210205 20:02:07.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.504" endtime="20210205 20:02:07.505"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.502" endtime="20210205 20:02:07.505"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.506" endtime="20210205 20:02:07.507"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.507" endtime="20210205 20:02:07.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.508" endtime="20210205 20:02:07.509"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.505" endtime="20210205 20:02:07.509"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.509" endtime="20210205 20:02:07.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.510" endtime="20210205 20:02:07.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.512" endtime="20210205 20:02:07.512"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.509" endtime="20210205 20:02:07.512"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.513" endtime="20210205 20:02:07.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.514" endtime="20210205 20:02:07.514"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.515" endtime="20210205 20:02:07.515"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.513" endtime="20210205 20:02:07.515"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.516" endtime="20210205 20:02:07.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.517" endtime="20210205 20:02:07.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.517" endtime="20210205 20:02:07.518"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.515" endtime="20210205 20:02:07.518"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.519" endtime="20210205 20:02:07.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.520" endtime="20210205 20:02:07.520"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.520" endtime="20210205 20:02:07.521"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.518" endtime="20210205 20:02:07.521"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.522" endtime="20210205 20:02:07.524"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.524" endtime="20210205 20:02:07.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.525" endtime="20210205 20:02:07.526"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.521" endtime="20210205 20:02:07.526"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.526" endtime="20210205 20:02:07.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.527" endtime="20210205 20:02:07.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.527" endtime="20210205 20:02:07.527"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.526" endtime="20210205 20:02:07.527"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.528" endtime="20210205 20:02:07.528"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.528" endtime="20210205 20:02:07.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.529" endtime="20210205 20:02:07.529"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.528" endtime="20210205 20:02:07.529"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.529" endtime="20210205 20:02:07.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.530" endtime="20210205 20:02:07.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.530" endtime="20210205 20:02:07.531"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.529" endtime="20210205 20:02:07.531"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.531" endtime="20210205 20:02:07.531"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.532" endtime="20210205 20:02:07.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.532" endtime="20210205 20:02:07.532"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.531" endtime="20210205 20:02:07.532"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.533" endtime="20210205 20:02:07.533"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.533" endtime="20210205 20:02:07.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.534" endtime="20210205 20:02:07.534"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.533" endtime="20210205 20:02:07.534"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.535" endtime="20210205 20:02:07.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.535" endtime="20210205 20:02:07.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.536" endtime="20210205 20:02:07.536"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.534" endtime="20210205 20:02:07.536"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.536" endtime="20210205 20:02:07.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.537" endtime="20210205 20:02:07.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.537" endtime="20210205 20:02:07.538"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.536" endtime="20210205 20:02:07.538"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.538" endtime="20210205 20:02:07.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.538" endtime="20210205 20:02:07.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.539" endtime="20210205 20:02:07.539"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.538" endtime="20210205 20:02:07.539"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.540" endtime="20210205 20:02:07.541"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.541" endtime="20210205 20:02:07.542"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.542" endtime="20210205 20:02:07.543"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.539" endtime="20210205 20:02:07.543"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.543" endtime="20210205 20:02:07.544"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.544" endtime="20210205 20:02:07.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.545" endtime="20210205 20:02:07.546"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.543" endtime="20210205 20:02:07.546"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.547" endtime="20210205 20:02:07.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.547" endtime="20210205 20:02:07.548"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.548" endtime="20210205 20:02:07.549"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.546" endtime="20210205 20:02:07.549"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.549" endtime="20210205 20:02:07.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.550" endtime="20210205 20:02:07.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.551" endtime="20210205 20:02:07.552"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.549" endtime="20210205 20:02:07.552"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.552" endtime="20210205 20:02:07.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.553" endtime="20210205 20:02:07.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.554" endtime="20210205 20:02:07.555"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.552" endtime="20210205 20:02:07.555"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.555" endtime="20210205 20:02:07.556"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.556" endtime="20210205 20:02:07.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.557" endtime="20210205 20:02:07.558"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.555" endtime="20210205 20:02:07.558"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.558" endtime="20210205 20:02:07.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.559" endtime="20210205 20:02:07.560"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.560" endtime="20210205 20:02:07.561"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.558" endtime="20210205 20:02:07.561"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.561" endtime="20210205 20:02:07.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.562" endtime="20210205 20:02:07.563"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.563" endtime="20210205 20:02:07.564"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.561" endtime="20210205 20:02:07.564"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.564" endtime="20210205 20:02:07.565"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.565" endtime="20210205 20:02:07.566"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.566" endtime="20210205 20:02:07.567"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.564" endtime="20210205 20:02:07.567"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.567" endtime="20210205 20:02:07.568"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.568" endtime="20210205 20:02:07.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.569" endtime="20210205 20:02:07.569"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.567" endtime="20210205 20:02:07.570"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.570" endtime="20210205 20:02:07.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.570" endtime="20210205 20:02:07.571"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.571" endtime="20210205 20:02:07.572"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.570" endtime="20210205 20:02:07.572"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.573" endtime="20210205 20:02:07.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.574" endtime="20210205 20:02:07.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.575" endtime="20210205 20:02:07.576"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.573" endtime="20210205 20:02:07.576"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.576" endtime="20210205 20:02:07.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.577" endtime="20210205 20:02:07.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.578" endtime="20210205 20:02:07.579"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.576" endtime="20210205 20:02:07.579"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.580" endtime="20210205 20:02:07.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.581" endtime="20210205 20:02:07.582"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.582" endtime="20210205 20:02:07.583"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.579" endtime="20210205 20:02:07.583"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.583" endtime="20210205 20:02:07.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.584" endtime="20210205 20:02:07.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.585" endtime="20210205 20:02:07.586"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.583" endtime="20210205 20:02:07.586"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.587" endtime="20210205 20:02:07.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.588" endtime="20210205 20:02:07.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.589" endtime="20210205 20:02:07.590"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.586" endtime="20210205 20:02:07.590"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.590" endtime="20210205 20:02:07.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.591" endtime="20210205 20:02:07.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.592" endtime="20210205 20:02:07.593"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.590" endtime="20210205 20:02:07.593"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.594" endtime="20210205 20:02:07.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.595" endtime="20210205 20:02:07.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.596" endtime="20210205 20:02:07.597"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.593" endtime="20210205 20:02:07.597"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.597" endtime="20210205 20:02:07.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.598" endtime="20210205 20:02:07.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.599" endtime="20210205 20:02:07.600"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.597" endtime="20210205 20:02:07.600"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.600" endtime="20210205 20:02:07.600"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.600" endtime="20210205 20:02:07.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.601" endtime="20210205 20:02:07.601"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.600" endtime="20210205 20:02:07.601"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.602" endtime="20210205 20:02:07.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.602" endtime="20210205 20:02:07.603"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.603" endtime="20210205 20:02:07.603"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.601" endtime="20210205 20:02:07.603"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.604" endtime="20210205 20:02:07.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.604" endtime="20210205 20:02:07.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.605" endtime="20210205 20:02:07.605"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.603" endtime="20210205 20:02:07.605"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.605" endtime="20210205 20:02:07.606"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.606" endtime="20210205 20:02:07.606"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.606" endtime="20210205 20:02:07.607"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.605" endtime="20210205 20:02:07.607"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.607" endtime="20210205 20:02:07.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.608" endtime="20210205 20:02:07.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.608" endtime="20210205 20:02:07.609"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.607" endtime="20210205 20:02:07.609"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.609" endtime="20210205 20:02:07.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.609" endtime="20210205 20:02:07.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.610" endtime="20210205 20:02:07.610"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.609" endtime="20210205 20:02:07.610"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.610" endtime="20210205 20:02:07.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.611" endtime="20210205 20:02:07.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.611" endtime="20210205 20:02:07.612"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.610" endtime="20210205 20:02:07.612"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.612" endtime="20210205 20:02:07.612"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.613" endtime="20210205 20:02:07.613"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.613" endtime="20210205 20:02:07.613"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.612" endtime="20210205 20:02:07.614"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.614" endtime="20210205 20:02:07.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.614" endtime="20210205 20:02:07.615"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.615" endtime="20210205 20:02:07.615"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.614" endtime="20210205 20:02:07.615"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.615" endtime="20210205 20:02:07.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.616" endtime="20210205 20:02:07.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.617" endtime="20210205 20:02:07.617"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.615" endtime="20210205 20:02:07.617"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.617" endtime="20210205 20:02:07.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.618" endtime="20210205 20:02:07.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.618" endtime="20210205 20:02:07.619"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.617" endtime="20210205 20:02:07.619"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.619" endtime="20210205 20:02:07.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.619" endtime="20210205 20:02:07.620"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.620" endtime="20210205 20:02:07.620"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.619" endtime="20210205 20:02:07.620"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.621" endtime="20210205 20:02:07.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.621" endtime="20210205 20:02:07.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.622" endtime="20210205 20:02:07.622"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.620" endtime="20210205 20:02:07.622"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.622" endtime="20210205 20:02:07.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.623" endtime="20210205 20:02:07.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.623" endtime="20210205 20:02:07.624"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.622" endtime="20210205 20:02:07.624"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.624" endtime="20210205 20:02:07.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.624" endtime="20210205 20:02:07.625"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.625" endtime="20210205 20:02:07.625"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.624" endtime="20210205 20:02:07.625"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.626" endtime="20210205 20:02:07.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.626" endtime="20210205 20:02:07.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.627" endtime="20210205 20:02:07.627"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.626" endtime="20210205 20:02:07.627"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.628" endtime="20210205 20:02:07.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.628" endtime="20210205 20:02:07.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.629" endtime="20210205 20:02:07.629"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.628" endtime="20210205 20:02:07.629"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.629" endtime="20210205 20:02:07.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.630" endtime="20210205 20:02:07.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.630" endtime="20210205 20:02:07.631"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.629" endtime="20210205 20:02:07.631"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.631" endtime="20210205 20:02:07.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.632" endtime="20210205 20:02:07.632"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.632" endtime="20210205 20:02:07.632"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.631" endtime="20210205 20:02:07.632"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.633" endtime="20210205 20:02:07.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.633" endtime="20210205 20:02:07.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.634" endtime="20210205 20:02:07.634"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.633" endtime="20210205 20:02:07.634"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.634" endtime="20210205 20:02:07.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.635" endtime="20210205 20:02:07.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.636" endtime="20210205 20:02:07.636"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.634" endtime="20210205 20:02:07.636"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.636" endtime="20210205 20:02:07.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.637" endtime="20210205 20:02:07.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.637" endtime="20210205 20:02:07.638"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.636" endtime="20210205 20:02:07.638"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.638" endtime="20210205 20:02:07.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.639" endtime="20210205 20:02:07.639"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.639" endtime="20210205 20:02:07.639"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.638" endtime="20210205 20:02:07.639"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.640" endtime="20210205 20:02:07.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.640" endtime="20210205 20:02:07.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.641" endtime="20210205 20:02:07.641"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.640" endtime="20210205 20:02:07.641"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.641" endtime="20210205 20:02:07.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.642" endtime="20210205 20:02:07.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.642" endtime="20210205 20:02:07.643"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.641" endtime="20210205 20:02:07.643"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.643" endtime="20210205 20:02:07.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.644" endtime="20210205 20:02:07.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.644" endtime="20210205 20:02:07.644"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.643" endtime="20210205 20:02:07.645"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.645" endtime="20210205 20:02:07.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.645" endtime="20210205 20:02:07.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.646" endtime="20210205 20:02:07.646"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.645" endtime="20210205 20:02:07.646"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.646" endtime="20210205 20:02:07.647"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.647" endtime="20210205 20:02:07.647"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.647" endtime="20210205 20:02:07.648"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.646" endtime="20210205 20:02:07.648"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.648" endtime="20210205 20:02:07.648"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.649" endtime="20210205 20:02:07.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.649" endtime="20210205 20:02:07.649"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.648" endtime="20210205 20:02:07.650"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.650" endtime="20210205 20:02:07.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.650" endtime="20210205 20:02:07.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.651" endtime="20210205 20:02:07.652"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.650" endtime="20210205 20:02:07.652"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.653" endtime="20210205 20:02:07.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.654" endtime="20210205 20:02:07.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.655" endtime="20210205 20:02:07.656"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.652" endtime="20210205 20:02:07.656"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.656" endtime="20210205 20:02:07.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.657" endtime="20210205 20:02:07.658"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.658" endtime="20210205 20:02:07.659"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.656" endtime="20210205 20:02:07.659"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.660" endtime="20210205 20:02:07.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.661" endtime="20210205 20:02:07.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.662" endtime="20210205 20:02:07.662"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.659" endtime="20210205 20:02:07.662"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.663" endtime="20210205 20:02:07.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.664" endtime="20210205 20:02:07.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.665" endtime="20210205 20:02:07.666"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.663" endtime="20210205 20:02:07.666"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.666" endtime="20210205 20:02:07.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.667" endtime="20210205 20:02:07.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.668" endtime="20210205 20:02:07.669"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.666" endtime="20210205 20:02:07.669"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.670" endtime="20210205 20:02:07.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.671" endtime="20210205 20:02:07.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.672" endtime="20210205 20:02:07.672"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.669" endtime="20210205 20:02:07.672"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.673" endtime="20210205 20:02:07.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.674" endtime="20210205 20:02:07.675"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.675" endtime="20210205 20:02:07.676"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.673" endtime="20210205 20:02:07.676"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.677" endtime="20210205 20:02:07.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.678" endtime="20210205 20:02:07.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.679" endtime="20210205 20:02:07.680"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.677" endtime="20210205 20:02:07.680"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.680" endtime="20210205 20:02:07.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.681" endtime="20210205 20:02:07.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.682" endtime="20210205 20:02:07.683"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.680" endtime="20210205 20:02:07.683"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.683" endtime="20210205 20:02:07.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.684" endtime="20210205 20:02:07.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.684" endtime="20210205 20:02:07.685"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.683" endtime="20210205 20:02:07.685"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.685" endtime="20210205 20:02:07.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.685" endtime="20210205 20:02:07.686"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.686" endtime="20210205 20:02:07.686"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.685" endtime="20210205 20:02:07.686"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.686" endtime="20210205 20:02:07.687"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.687" endtime="20210205 20:02:07.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.688" endtime="20210205 20:02:07.688"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.686" endtime="20210205 20:02:07.688"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.688" endtime="20210205 20:02:07.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.689" endtime="20210205 20:02:07.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.689" endtime="20210205 20:02:07.690"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.688" endtime="20210205 20:02:07.690"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.691" endtime="20210205 20:02:07.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.692" endtime="20210205 20:02:07.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.692" endtime="20210205 20:02:07.693"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.690" endtime="20210205 20:02:07.693"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.694" endtime="20210205 20:02:07.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.694" endtime="20210205 20:02:07.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.695" endtime="20210205 20:02:07.696"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.693" endtime="20210205 20:02:07.696"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.696" endtime="20210205 20:02:07.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.697" endtime="20210205 20:02:07.698"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.698" endtime="20210205 20:02:07.699"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.696" endtime="20210205 20:02:07.699"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.408" endtime="20210205 20:02:07.699"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${filteridlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.699" endtime="20210205 20:02:07.700"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${filtertitlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.700" endtime="20210205 20:02:07.701"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${filterbodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.701" endtime="20210205 20:02:07.701"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:07.702" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.702" endtime="20210205 20:02:07.702"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:07.703" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.702" endtime="20210205 20:02:07.703"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:07.703" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.703" endtime="20210205 20:02:07.704"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:07.704" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.704" endtime="20210205 20:02:07.704"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:07.705" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.704" endtime="20210205 20:02:07.705"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:07.705" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.705" endtime="20210205 20:02:07.706"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.158" endtime="20210205 20:02:07.706"></status>
</kw>
<kw name="VALIDATE FILTERED POST RESPONSE MATCHES USER ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${userfId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:07.709" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:07.708" endtime="20210205 20:02:07.709"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:07.711" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:07.710" endtime="20210205 20:02:07.711"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.714" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:07.713" endtime="20210205 20:02:07.714"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:07.872" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/10/posts 
 path_url=/users/10/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:07.873" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/10/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d51944a51ccd2c9e360f41c66a75f2bae1612573329; expires=Mon, 08-Mar-21 01:02:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612542892', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"a68-bp+xhXz2hSYZZUvrpfEFLIhQbe4"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '98', 'cf-request-id': '0816755e880000c5c427268000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=1cTTdGHTyi4i%2Fx8siDkP%2B%2F7%2FvyJqwu%2Bf3nttnOLL2uISXf8Wnon48epEy1hDo88cC9mWIgBNcgtGEZ%2B7RjtYSl%2Bx531h2hFojd1DExSA8MCP87FT9YiBPgLl4jQm"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1aa7ec5c5c4-EWR'} 
 body=[
  {
    "userId": 10,
    "id": 91,
    "title": "aut amet sed",
    "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
  },
  {
    "userId": 10,
    "id": 92,
    "title": "ratione ex tenetur perferendis",
    "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
  },
  {
    "userId": 10,
    "id": 93,
    "title": "beatae soluta recusandae",
    "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
  },
  {
    "userId": 10,
    "id": 94,
    "title": "qui qui voluptates illo iste minima",
    "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
  },
  {
    "userId": 10,
    "id": 95,
    "title": "id minus libero illum nam ad officiis",
    "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
  },
  {
    "userId": 10,
    "id": 96,
    "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
    "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
  },
  {
    "userId": 10,
    "id": 97,
    "title": "quas fugiat ut perspiciatis vero provident",
    "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
  },
  {
    "userId": 10,
    "id": 98,
    "title": "laboriosam dolor voluptates",
    "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
  },
  {
    "userId": 10,
    "id": 99,
    "title": "temporibus sit alias delectus eligendi possimus magni",
    "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
  },
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<msg timestamp="20210205 20:02:07.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:07.715" endtime="20210205 20:02:07.873"></status>
</kw>
<msg timestamp="20210205 20:02:07.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:07.712" endtime="20210205 20:02:07.874"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:07.875" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.874" endtime="20210205 20:02:07.875"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:07.875" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.875" endtime="20210205 20:02:07.875"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:07.876" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.876" endtime="20210205 20:02:07.876"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:07.877" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.876" endtime="20210205 20:02:07.877"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:07.877" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.877" endtime="20210205 20:02:07.877"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:07.878" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:07.878" endtime="20210205 20:02:07.878"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.879" endtime="20210205 20:02:07.880"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.880" endtime="20210205 20:02:07.880"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.881" endtime="20210205 20:02:07.881"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.879" endtime="20210205 20:02:07.881"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.882" endtime="20210205 20:02:07.882"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.882" endtime="20210205 20:02:07.883"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.883" endtime="20210205 20:02:07.884"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.881" endtime="20210205 20:02:07.884"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.884" endtime="20210205 20:02:07.885"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.885" endtime="20210205 20:02:07.886"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.886" endtime="20210205 20:02:07.887"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.884" endtime="20210205 20:02:07.887"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.887" endtime="20210205 20:02:07.888"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.888" endtime="20210205 20:02:07.889"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.889" endtime="20210205 20:02:07.889"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.887" endtime="20210205 20:02:07.889"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.890" endtime="20210205 20:02:07.890"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.891" endtime="20210205 20:02:07.891"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.891" endtime="20210205 20:02:07.892"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.890" endtime="20210205 20:02:07.892"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.893" endtime="20210205 20:02:07.893"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.894" endtime="20210205 20:02:07.894"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.894" endtime="20210205 20:02:07.895"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.893" endtime="20210205 20:02:07.895"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.895" endtime="20210205 20:02:07.896"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.896" endtime="20210205 20:02:07.897"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.897" endtime="20210205 20:02:07.898"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.895" endtime="20210205 20:02:07.898"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.898" endtime="20210205 20:02:07.899"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.899" endtime="20210205 20:02:07.900"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.900" endtime="20210205 20:02:07.901"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.898" endtime="20210205 20:02:07.901"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.901" endtime="20210205 20:02:07.902"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.902" endtime="20210205 20:02:07.903"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.903" endtime="20210205 20:02:07.904"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.901" endtime="20210205 20:02:07.904"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.904" endtime="20210205 20:02:07.905"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.905" endtime="20210205 20:02:07.906"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.906" endtime="20210205 20:02:07.906"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.904" endtime="20210205 20:02:07.906"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.878" endtime="20210205 20:02:07.907"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_All_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:07.908" level="INFO">Creating Session using : alias=Get_All_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:07.908" endtime="20210205 20:02:07.909"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:07.969" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:07.970" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d549ea78c37239fedbb0ca087b3977d001612573329; expires=Mon, 08-Mar-21 01:02:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612568801', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4577', 'cf-request-id': '0816755f450000efdcc789e000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mgpd0pgxAGdypJpuhDTDjqfP6iYTUeBPFpZiWhQnwkGG%2FGtP6gBt4dPKbjTJU8IhiE7qROu681oWP6Gh1hfiAjVynZGB%2FAj8%2FeW4OM2NQDWOxJUywAexYJ6Aczya"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1abac3fefdc-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210205 20:02:07.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:07.909" endtime="20210205 20:02:07.970"></status>
</kw>
<msg timestamp="20210205 20:02:07.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:07.907" endtime="20210205 20:02:07.971"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.972" endtime="20210205 20:02:07.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.973" endtime="20210205 20:02:07.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.974" endtime="20210205 20:02:07.975"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.972" endtime="20210205 20:02:07.975"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.976" endtime="20210205 20:02:07.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.977" endtime="20210205 20:02:07.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.977" endtime="20210205 20:02:07.978"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.975" endtime="20210205 20:02:07.978"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.979" endtime="20210205 20:02:07.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.980" endtime="20210205 20:02:07.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.981" endtime="20210205 20:02:07.982"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.978" endtime="20210205 20:02:07.982"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.982" endtime="20210205 20:02:07.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.983" endtime="20210205 20:02:07.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.984" endtime="20210205 20:02:07.985"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.982" endtime="20210205 20:02:07.985"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.985" endtime="20210205 20:02:07.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.986" endtime="20210205 20:02:07.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.987" endtime="20210205 20:02:07.987"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.985" endtime="20210205 20:02:07.987"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.988" endtime="20210205 20:02:07.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.989" endtime="20210205 20:02:07.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.990" endtime="20210205 20:02:07.990"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.988" endtime="20210205 20:02:07.991"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.991" endtime="20210205 20:02:07.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.992" endtime="20210205 20:02:07.993"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.993" endtime="20210205 20:02:07.994"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.991" endtime="20210205 20:02:07.994"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.994" endtime="20210205 20:02:07.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.995" endtime="20210205 20:02:07.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.996" endtime="20210205 20:02:07.997"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.994" endtime="20210205 20:02:07.997"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.997" endtime="20210205 20:02:07.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.998" endtime="20210205 20:02:07.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:07.999" endtime="20210205 20:02:08.000"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.997" endtime="20210205 20:02:08.000"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.000" endtime="20210205 20:02:08.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.001" endtime="20210205 20:02:08.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.002" endtime="20210205 20:02:08.002"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.000" endtime="20210205 20:02:08.002"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.003" endtime="20210205 20:02:08.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.004" endtime="20210205 20:02:08.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.005" endtime="20210205 20:02:08.005"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.003" endtime="20210205 20:02:08.005"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.006" endtime="20210205 20:02:08.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.007" endtime="20210205 20:02:08.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.008" endtime="20210205 20:02:08.008"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.006" endtime="20210205 20:02:08.008"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.009" endtime="20210205 20:02:08.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.010" endtime="20210205 20:02:08.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.010" endtime="20210205 20:02:08.011"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.008" endtime="20210205 20:02:08.011"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.012" endtime="20210205 20:02:08.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.013" endtime="20210205 20:02:08.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.014" endtime="20210205 20:02:08.014"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.011" endtime="20210205 20:02:08.014"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.015" endtime="20210205 20:02:08.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.016" endtime="20210205 20:02:08.016"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.017" endtime="20210205 20:02:08.017"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.014" endtime="20210205 20:02:08.018"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.018" endtime="20210205 20:02:08.020"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.020" endtime="20210205 20:02:08.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.022" endtime="20210205 20:02:08.024"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.018" endtime="20210205 20:02:08.024"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.025" endtime="20210205 20:02:08.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.027" endtime="20210205 20:02:08.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.028" endtime="20210205 20:02:08.030"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.024" endtime="20210205 20:02:08.030"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.032" endtime="20210205 20:02:08.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.035" endtime="20210205 20:02:08.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.038" endtime="20210205 20:02:08.039"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.030" endtime="20210205 20:02:08.039"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.039" endtime="20210205 20:02:08.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.040" endtime="20210205 20:02:08.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.041" endtime="20210205 20:02:08.042"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.039" endtime="20210205 20:02:08.042"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.043" endtime="20210205 20:02:08.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.044" endtime="20210205 20:02:08.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.045" endtime="20210205 20:02:08.046"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.042" endtime="20210205 20:02:08.046"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.047" endtime="20210205 20:02:08.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.049" endtime="20210205 20:02:08.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.050" endtime="20210205 20:02:08.051"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.047" endtime="20210205 20:02:08.051"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.051" endtime="20210205 20:02:08.052"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.052" endtime="20210205 20:02:08.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.053" endtime="20210205 20:02:08.054"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.051" endtime="20210205 20:02:08.054"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.055" endtime="20210205 20:02:08.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.055" endtime="20210205 20:02:08.056"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.056" endtime="20210205 20:02:08.057"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.054" endtime="20210205 20:02:08.057"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.058" endtime="20210205 20:02:08.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.059" endtime="20210205 20:02:08.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.060" endtime="20210205 20:02:08.060"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.057" endtime="20210205 20:02:08.060"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.061" endtime="20210205 20:02:08.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.062" endtime="20210205 20:02:08.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.063" endtime="20210205 20:02:08.064"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.061" endtime="20210205 20:02:08.064"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.064" endtime="20210205 20:02:08.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.066" endtime="20210205 20:02:08.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.067" endtime="20210205 20:02:08.068"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.064" endtime="20210205 20:02:08.068"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.068" endtime="20210205 20:02:08.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.070" endtime="20210205 20:02:08.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.071" endtime="20210205 20:02:08.072"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.068" endtime="20210205 20:02:08.072"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.073" endtime="20210205 20:02:08.074"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.074" endtime="20210205 20:02:08.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.076" endtime="20210205 20:02:08.077"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.072" endtime="20210205 20:02:08.078"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.078" endtime="20210205 20:02:08.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.080" endtime="20210205 20:02:08.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.081" endtime="20210205 20:02:08.081"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.078" endtime="20210205 20:02:08.081"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.082" endtime="20210205 20:02:08.082"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.082" endtime="20210205 20:02:08.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.083" endtime="20210205 20:02:08.083"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.082" endtime="20210205 20:02:08.083"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.084" endtime="20210205 20:02:08.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.084" endtime="20210205 20:02:08.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.085" endtime="20210205 20:02:08.085"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.084" endtime="20210205 20:02:08.085"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.086" endtime="20210205 20:02:08.086"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.086" endtime="20210205 20:02:08.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.087" endtime="20210205 20:02:08.088"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.086" endtime="20210205 20:02:08.088"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.088" endtime="20210205 20:02:08.088"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.088" endtime="20210205 20:02:08.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.089" endtime="20210205 20:02:08.089"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.088" endtime="20210205 20:02:08.090"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.090" endtime="20210205 20:02:08.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.090" endtime="20210205 20:02:08.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.092" endtime="20210205 20:02:08.092"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.090" endtime="20210205 20:02:08.092"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.093" endtime="20210205 20:02:08.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.093" endtime="20210205 20:02:08.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.094" endtime="20210205 20:02:08.094"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.092" endtime="20210205 20:02:08.094"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.094" endtime="20210205 20:02:08.095"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.095" endtime="20210205 20:02:08.095"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.095" endtime="20210205 20:02:08.096"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.094" endtime="20210205 20:02:08.096"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.096" endtime="20210205 20:02:08.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.097" endtime="20210205 20:02:08.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.097" endtime="20210205 20:02:08.098"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.096" endtime="20210205 20:02:08.098"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.098" endtime="20210205 20:02:08.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.099" endtime="20210205 20:02:08.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.099" endtime="20210205 20:02:08.100"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.098" endtime="20210205 20:02:08.100"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.100" endtime="20210205 20:02:08.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.101" endtime="20210205 20:02:08.101"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.101" endtime="20210205 20:02:08.102"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.100" endtime="20210205 20:02:08.102"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.102" endtime="20210205 20:02:08.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.102" endtime="20210205 20:02:08.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.103" endtime="20210205 20:02:08.103"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.102" endtime="20210205 20:02:08.103"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.104" endtime="20210205 20:02:08.104"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.104" endtime="20210205 20:02:08.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.105" endtime="20210205 20:02:08.105"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.103" endtime="20210205 20:02:08.105"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.105" endtime="20210205 20:02:08.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.106" endtime="20210205 20:02:08.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.107" endtime="20210205 20:02:08.107"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.105" endtime="20210205 20:02:08.107"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.108" endtime="20210205 20:02:08.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.108" endtime="20210205 20:02:08.109"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.109" endtime="20210205 20:02:08.109"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.107" endtime="20210205 20:02:08.109"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.110" endtime="20210205 20:02:08.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.110" endtime="20210205 20:02:08.111"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.111" endtime="20210205 20:02:08.111"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.110" endtime="20210205 20:02:08.111"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.112" endtime="20210205 20:02:08.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.112" endtime="20210205 20:02:08.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.113" endtime="20210205 20:02:08.113"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.111" endtime="20210205 20:02:08.113"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.113" endtime="20210205 20:02:08.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.114" endtime="20210205 20:02:08.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.114" endtime="20210205 20:02:08.115"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.113" endtime="20210205 20:02:08.115"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.115" endtime="20210205 20:02:08.116"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.116" endtime="20210205 20:02:08.116"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.116" endtime="20210205 20:02:08.117"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.115" endtime="20210205 20:02:08.117"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.117" endtime="20210205 20:02:08.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.118" endtime="20210205 20:02:08.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.118" endtime="20210205 20:02:08.119"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.117" endtime="20210205 20:02:08.119"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.119" endtime="20210205 20:02:08.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.119" endtime="20210205 20:02:08.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.120" endtime="20210205 20:02:08.121"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.119" endtime="20210205 20:02:08.121"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.121" endtime="20210205 20:02:08.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.122" endtime="20210205 20:02:08.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.122" endtime="20210205 20:02:08.122"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.121" endtime="20210205 20:02:08.123"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.123" endtime="20210205 20:02:08.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.124" endtime="20210205 20:02:08.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.124" endtime="20210205 20:02:08.125"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.123" endtime="20210205 20:02:08.125"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.125" endtime="20210205 20:02:08.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.126" endtime="20210205 20:02:08.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.126" endtime="20210205 20:02:08.127"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.125" endtime="20210205 20:02:08.127"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.127" endtime="20210205 20:02:08.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.127" endtime="20210205 20:02:08.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.128" endtime="20210205 20:02:08.128"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.127" endtime="20210205 20:02:08.128"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.129" endtime="20210205 20:02:08.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.129" endtime="20210205 20:02:08.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.130" endtime="20210205 20:02:08.130"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.128" endtime="20210205 20:02:08.130"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.130" endtime="20210205 20:02:08.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.131" endtime="20210205 20:02:08.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.131" endtime="20210205 20:02:08.132"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.130" endtime="20210205 20:02:08.132"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.132" endtime="20210205 20:02:08.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.132" endtime="20210205 20:02:08.133"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.133" endtime="20210205 20:02:08.133"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.132" endtime="20210205 20:02:08.133"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.134" endtime="20210205 20:02:08.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.134" endtime="20210205 20:02:08.135"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.135" endtime="20210205 20:02:08.135"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.133" endtime="20210205 20:02:08.135"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.135" endtime="20210205 20:02:08.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.136" endtime="20210205 20:02:08.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.136" endtime="20210205 20:02:08.137"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.135" endtime="20210205 20:02:08.137"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.137" endtime="20210205 20:02:08.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.137" endtime="20210205 20:02:08.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.138" endtime="20210205 20:02:08.138"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.137" endtime="20210205 20:02:08.138"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.139" endtime="20210205 20:02:08.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.140" endtime="20210205 20:02:08.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.141" endtime="20210205 20:02:08.141"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.139" endtime="20210205 20:02:08.141"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.142" endtime="20210205 20:02:08.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.142" endtime="20210205 20:02:08.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.143" endtime="20210205 20:02:08.143"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.142" endtime="20210205 20:02:08.143"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.143" endtime="20210205 20:02:08.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.144" endtime="20210205 20:02:08.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.144" endtime="20210205 20:02:08.145"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.143" endtime="20210205 20:02:08.145"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.145" endtime="20210205 20:02:08.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.145" endtime="20210205 20:02:08.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.146" endtime="20210205 20:02:08.146"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.145" endtime="20210205 20:02:08.146"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.147" endtime="20210205 20:02:08.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.147" endtime="20210205 20:02:08.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.148" endtime="20210205 20:02:08.148"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.146" endtime="20210205 20:02:08.148"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.148" endtime="20210205 20:02:08.149"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.149" endtime="20210205 20:02:08.149"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.149" endtime="20210205 20:02:08.150"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.148" endtime="20210205 20:02:08.150"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.150" endtime="20210205 20:02:08.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.151" endtime="20210205 20:02:08.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.151" endtime="20210205 20:02:08.151"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.150" endtime="20210205 20:02:08.152"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.152" endtime="20210205 20:02:08.152"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.152" endtime="20210205 20:02:08.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.153" endtime="20210205 20:02:08.153"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.152" endtime="20210205 20:02:08.153"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.153" endtime="20210205 20:02:08.154"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.154" endtime="20210205 20:02:08.154"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.154" endtime="20210205 20:02:08.155"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.153" endtime="20210205 20:02:08.155"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.155" endtime="20210205 20:02:08.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.156" endtime="20210205 20:02:08.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.156" endtime="20210205 20:02:08.157"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.155" endtime="20210205 20:02:08.157"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.157" endtime="20210205 20:02:08.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.158" endtime="20210205 20:02:08.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.158" endtime="20210205 20:02:08.159"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.157" endtime="20210205 20:02:08.159"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.159" endtime="20210205 20:02:08.159"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.160" endtime="20210205 20:02:08.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.160" endtime="20210205 20:02:08.160"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.159" endtime="20210205 20:02:08.160"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.161" endtime="20210205 20:02:08.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.161" endtime="20210205 20:02:08.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.162" endtime="20210205 20:02:08.162"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.161" endtime="20210205 20:02:08.162"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.162" endtime="20210205 20:02:08.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.163" endtime="20210205 20:02:08.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.163" endtime="20210205 20:02:08.164"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.162" endtime="20210205 20:02:08.164"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.164" endtime="20210205 20:02:08.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.165" endtime="20210205 20:02:08.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.165" endtime="20210205 20:02:08.165"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.164" endtime="20210205 20:02:08.165"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.166" endtime="20210205 20:02:08.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.166" endtime="20210205 20:02:08.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.167" endtime="20210205 20:02:08.167"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.166" endtime="20210205 20:02:08.167"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.167" endtime="20210205 20:02:08.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.168" endtime="20210205 20:02:08.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.168" endtime="20210205 20:02:08.169"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.167" endtime="20210205 20:02:08.169"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.169" endtime="20210205 20:02:08.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.170" endtime="20210205 20:02:08.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.170" endtime="20210205 20:02:08.171"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.169" endtime="20210205 20:02:08.171"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.171" endtime="20210205 20:02:08.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.173" endtime="20210205 20:02:08.173"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.173" endtime="20210205 20:02:08.173"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.171" endtime="20210205 20:02:08.173"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.174" endtime="20210205 20:02:08.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.174" endtime="20210205 20:02:08.175"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.175" endtime="20210205 20:02:08.175"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.174" endtime="20210205 20:02:08.175"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.175" endtime="20210205 20:02:08.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.176" endtime="20210205 20:02:08.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.176" endtime="20210205 20:02:08.177"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.175" endtime="20210205 20:02:08.177"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.177" endtime="20210205 20:02:08.178"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.178" endtime="20210205 20:02:08.178"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.178" endtime="20210205 20:02:08.179"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.177" endtime="20210205 20:02:08.179"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.179" endtime="20210205 20:02:08.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.179" endtime="20210205 20:02:08.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.180" endtime="20210205 20:02:08.180"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.179" endtime="20210205 20:02:08.180"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.181" endtime="20210205 20:02:08.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.181" endtime="20210205 20:02:08.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.182" endtime="20210205 20:02:08.182"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.180" endtime="20210205 20:02:08.182"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.182" endtime="20210205 20:02:08.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.183" endtime="20210205 20:02:08.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.183" endtime="20210205 20:02:08.184"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.182" endtime="20210205 20:02:08.184"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.184" endtime="20210205 20:02:08.184"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.184" endtime="20210205 20:02:08.185"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.185" endtime="20210205 20:02:08.185"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.184" endtime="20210205 20:02:08.185"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.186" endtime="20210205 20:02:08.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.186" endtime="20210205 20:02:08.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.187" endtime="20210205 20:02:08.187"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.185" endtime="20210205 20:02:08.187"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.187" endtime="20210205 20:02:08.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.189" endtime="20210205 20:02:08.189"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.189" endtime="20210205 20:02:08.189"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.187" endtime="20210205 20:02:08.190"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.190" endtime="20210205 20:02:08.190"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.190" endtime="20210205 20:02:08.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.191" endtime="20210205 20:02:08.191"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.190" endtime="20210205 20:02:08.191"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.191" endtime="20210205 20:02:08.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.191" endtime="20210205 20:02:08.192"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.192" endtime="20210205 20:02:08.192"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.191" endtime="20210205 20:02:08.192"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.193" endtime="20210205 20:02:08.193"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.193" endtime="20210205 20:02:08.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.194" endtime="20210205 20:02:08.194"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.193" endtime="20210205 20:02:08.194"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.195" endtime="20210205 20:02:08.196"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.194" endtime="20210205 20:02:08.196"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.196" endtime="20210205 20:02:08.197"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.196" endtime="20210205 20:02:08.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.197" endtime="20210205 20:02:08.198"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.197" endtime="20210205 20:02:08.198"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.194" endtime="20210205 20:02:08.198"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.199" endtime="20210205 20:02:08.199"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.198" endtime="20210205 20:02:08.199"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.200" endtime="20210205 20:02:08.200"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.199" endtime="20210205 20:02:08.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.201" endtime="20210205 20:02:08.201"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.200" endtime="20210205 20:02:08.201"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.198" endtime="20210205 20:02:08.201"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.202" endtime="20210205 20:02:08.203"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.201" endtime="20210205 20:02:08.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.203" endtime="20210205 20:02:08.204"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.203" endtime="20210205 20:02:08.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.204" endtime="20210205 20:02:08.205"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.204" endtime="20210205 20:02:08.205"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.201" endtime="20210205 20:02:08.205"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.206" endtime="20210205 20:02:08.206"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.205" endtime="20210205 20:02:08.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.207" endtime="20210205 20:02:08.207"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.206" endtime="20210205 20:02:08.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.208" endtime="20210205 20:02:08.208"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.207" endtime="20210205 20:02:08.208"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.205" endtime="20210205 20:02:08.208"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.209" endtime="20210205 20:02:08.209"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.208" endtime="20210205 20:02:08.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.210" endtime="20210205 20:02:08.210"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.209" endtime="20210205 20:02:08.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.211" endtime="20210205 20:02:08.211"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.210" endtime="20210205 20:02:08.211"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.208" endtime="20210205 20:02:08.211"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.212" endtime="20210205 20:02:08.212"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.211" endtime="20210205 20:02:08.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.213" endtime="20210205 20:02:08.213"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.212" endtime="20210205 20:02:08.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.214" endtime="20210205 20:02:08.214"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.213" endtime="20210205 20:02:08.214"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.211" endtime="20210205 20:02:08.214"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.215" endtime="20210205 20:02:08.216"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.215" endtime="20210205 20:02:08.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.216" endtime="20210205 20:02:08.217"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.216" endtime="20210205 20:02:08.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.217" endtime="20210205 20:02:08.218"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.217" endtime="20210205 20:02:08.218"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.214" endtime="20210205 20:02:08.218"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.219" endtime="20210205 20:02:08.219"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.218" endtime="20210205 20:02:08.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.220" endtime="20210205 20:02:08.220"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.220" endtime="20210205 20:02:08.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.221" endtime="20210205 20:02:08.221"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.221" endtime="20210205 20:02:08.221"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.218" endtime="20210205 20:02:08.221"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.222" endtime="20210205 20:02:08.223"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.222" endtime="20210205 20:02:08.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.223" endtime="20210205 20:02:08.223"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.223" endtime="20210205 20:02:08.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.224" endtime="20210205 20:02:08.224"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.224" endtime="20210205 20:02:08.225"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.222" endtime="20210205 20:02:08.225"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.225" endtime="20210205 20:02:08.226"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.225" endtime="20210205 20:02:08.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.226" endtime="20210205 20:02:08.227"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.226" endtime="20210205 20:02:08.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.227" endtime="20210205 20:02:08.228"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.227" endtime="20210205 20:02:08.228"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.225" endtime="20210205 20:02:08.228"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.971" endtime="20210205 20:02:08.228"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${filteridlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.228" endtime="20210205 20:02:08.228"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${filtertitlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.228" endtime="20210205 20:02:08.229"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${filterbodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.229" endtime="20210205 20:02:08.229"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:08.230" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.229" endtime="20210205 20:02:08.230"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:08.230" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.230" endtime="20210205 20:02:08.230"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:08.230" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.230" endtime="20210205 20:02:08.230"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:08.231" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.231" endtime="20210205 20:02:08.231"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:08.231" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.231" endtime="20210205 20:02:08.231"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:08.232" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.231" endtime="20210205 20:02:08.232"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:07.707" endtime="20210205 20:02:08.232"></status>
</kw>
<doc>Compare Full Response User Id filtering to /users/{userid}/posts</doc>
<tags>
<tag>Positive</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:02:07.090" endtime="20210205 20:02:08.233" critical="yes"></status>
</test>
<test id="s1-t7" name="TC007 COMPARE POST ID FILTERED POST ENDPOINT RESPONSE TO GET POST BY POST ID URI RESPONSE">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:08.251" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:08.249" endtime="20210205 20:02:08.251"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:02:08.254" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:08.252" endtime="20210205 20:02:08.254"></status>
</kw>
<msg timestamp="20210205 20:02:08.254" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:08.249" endtime="20210205 20:02:08.255"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:08.257" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:08.256" endtime="20210205 20:02:08.257"></status>
</kw>
<msg timestamp="20210205 20:02:08.257" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:02:08.255" endtime="20210205 20:02:08.257"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:08.259" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:08.258" endtime="20210205 20:02:08.259"></status>
</kw>
<msg timestamp="20210205 20:02:08.259" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:08.257" endtime="20210205 20:02:08.259"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:08.261" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:08.260" endtime="20210205 20:02:08.261"></status>
</kw>
<msg timestamp="20210205 20:02:08.261" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:08.260" endtime="20210205 20:02:08.261"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:08.265" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:08.263" endtime="20210205 20:02:08.265"></status>
</kw>
<msg timestamp="20210205 20:02:08.265" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:02:08.262" endtime="20210205 20:02:08.265"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:08.268" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:08.267" endtime="20210205 20:02:08.268"></status>
</kw>
<msg timestamp="20210205 20:02:08.268" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:08.266" endtime="20210205 20:02:08.269"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:08.270" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:08.269" endtime="20210205 20:02:08.270"></status>
</kw>
<msg timestamp="20210205 20:02:08.270" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:08.269" endtime="20210205 20:02:08.270"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:08.273" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:02:08.271" endtime="20210205 20:02:08.273"></status>
</kw>
<msg timestamp="20210205 20:02:08.273" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:08.271" endtime="20210205 20:02:08.273"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:08.275" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:08.274" endtime="20210205 20:02:08.275"></status>
</kw>
<msg timestamp="20210205 20:02:08.275" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:08.273" endtime="20210205 20:02:08.275"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:08.278" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:08.276" endtime="20210205 20:02:08.278"></status>
</kw>
<msg timestamp="20210205 20:02:08.278" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:02:08.276" endtime="20210205 20:02:08.278"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:08.282" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:08.279" endtime="20210205 20:02:08.283"></status>
</kw>
<msg timestamp="20210205 20:02:08.283" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:08.279" endtime="20210205 20:02:08.283"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:08.285" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:02:08.284" endtime="20210205 20:02:08.285"></status>
</kw>
<msg timestamp="20210205 20:02:08.286" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:08.283" endtime="20210205 20:02:08.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.286" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:08.286" endtime="20210205 20:02:08.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:02:08.287" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:02:08.287" endtime="20210205 20:02:08.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.287" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:02:08.287" endtime="20210205 20:02:08.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.288" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:08.288" endtime="20210205 20:02:08.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.289" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:08.288" endtime="20210205 20:02:08.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.289" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:02:08.289" endtime="20210205 20:02:08.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.290" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:08.289" endtime="20210205 20:02:08.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.290" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:08.290" endtime="20210205 20:02:08.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.291" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:08.291" endtime="20210205 20:02:08.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.291" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:08.291" endtime="20210205 20:02:08.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.292" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:02:08.292" endtime="20210205 20:02:08.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.293" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:08.292" endtime="20210205 20:02:08.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.293" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:08.293" endtime="20210205 20:02:08.293"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.248" endtime="20210205 20:02:08.294"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Compare /posts parameter filter response to posts/{num}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.296" level="INFO">Set test documentation to:
Compare /posts parameter filter response to posts/{num}</msg>
<status status="PASS" starttime="20210205 20:02:08.295" endtime="20210205 20:02:08.296"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postinId}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:08.298" level="INFO">@{post_list} = [ 1 ]</msg>
<status status="PASS" starttime="20210205 20:02:08.298" endtime="20210205 20:02:08.298"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:02:08.299" level="INFO">Length is 1</msg>
<msg timestamp="20210205 20:02:08.299" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20210205 20:02:08.299" endtime="20210205 20:02:08.299"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.299" endtime="20210205 20:02:08.300"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:08.301" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:08.300" endtime="20210205 20:02:08.301"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:08.302" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:08.301" endtime="20210205 20:02:08.302"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.302" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:08.302" endtime="20210205 20:02:08.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:02:08.354" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=1 
 path_url=/posts?id=1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:08.354" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d441a5fd3024b16f6dd6859fbb1f083091612573329; expires=Mon, 08-Mar-21 01:02:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612535091', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-QtF0EaiifRh1Z3cEspXIXV0RoQY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7113', 'cf-request-id': '08167560cd000015bb003da000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=gXeG2rg6wSSA762fjUPaUc2lM6xorHsujr19CBlfb5w%2BU3kly1sWJYL1Q2HAEvIvnQmoHY7UHB%2BYBJMwo5EVSUjgToKkwYJ0N%2BxjirnyXpPpN3CaMgrs4J3%2FBzGX"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1ae1b1d15bb-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:02:08.304" endtime="20210205 20:02:08.355"></status>
</kw>
<msg timestamp="20210205 20:02:08.355" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:08.303" endtime="20210205 20:02:08.355"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:08.356" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.355" endtime="20210205 20:02:08.356"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:08.357" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.356" endtime="20210205 20:02:08.357"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:08.357" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.357" endtime="20210205 20:02:08.357"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:08.358" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.357" endtime="20210205 20:02:08.358"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:08.359" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.358" endtime="20210205 20:02:08.359"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:08.360" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.359" endtime="20210205 20:02:08.360"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.361" endtime="20210205 20:02:08.362"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.362" endtime="20210205 20:02:08.364"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.364" endtime="20210205 20:02:08.365"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.361" endtime="20210205 20:02:08.365"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.360" endtime="20210205 20:02:08.365"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.366" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:08.365" endtime="20210205 20:02:08.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:02:08.448" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:08.448" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3b1cc8aae76b20cbf49db58d3f2259181612573329; expires=Mon, 08-Mar-21 01:02:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4671', 'cf-request-id': '081675610f0000e730e3bde000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=gM0lquRcUDZqz89RUHP0QwrtAFwx8sCmHZuIhbnHLl6VavdnNXJpyboq48Ws1kolE0tP8RVxEy6aUNv%2BiEUdIH88B%2FVQwCM%2FHtTwn07hxfqFuksutBKms4mjPINi"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1ae7fe8e730-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<status status="PASS" starttime="20210205 20:02:08.367" endtime="20210205 20:02:08.448"></status>
</kw>
<msg timestamp="20210205 20:02:08.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:08.366" endtime="20210205 20:02:08.449"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:08.519" level="INFO">${filteridlist} = [1]</msg>
<status status="PASS" starttime="20210205 20:02:08.449" endtime="20210205 20:02:08.519"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:08.590" level="INFO">${filtertitlelist} = ['sunt aut facere repellat provident occaecati excepturi optio reprehenderit']</msg>
<status status="PASS" starttime="20210205 20:02:08.519" endtime="20210205 20:02:08.590"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:08.662" level="INFO">${filterbodylist} = ['quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto']</msg>
<status status="PASS" starttime="20210205 20:02:08.590" endtime="20210205 20:02:08.662"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.662" endtime="20210205 20:02:08.663"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.663" endtime="20210205 20:02:08.664"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.664" endtime="20210205 20:02:08.664"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:08.665" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.664" endtime="20210205 20:02:08.665"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:08.666" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.665" endtime="20210205 20:02:08.666"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:08.666" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.666" endtime="20210205 20:02:08.667"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:08.667" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.667" endtime="20210205 20:02:08.667"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:08.668" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.667" endtime="20210205 20:02:08.668"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:08.668" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.668" endtime="20210205 20:02:08.669"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:08.669" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.669" endtime="20210205 20:02:08.669"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.297" endtime="20210205 20:02:08.669"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postfId}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:08.673" level="INFO">@{post_list} = [ 100 ]</msg>
<status status="PASS" starttime="20210205 20:02:08.672" endtime="20210205 20:02:08.673"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:02:08.674" level="INFO">Length is 1</msg>
<msg timestamp="20210205 20:02:08.674" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20210205 20:02:08.673" endtime="20210205 20:02:08.674"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.674" endtime="20210205 20:02:08.680"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:08.682" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:08.680" endtime="20210205 20:02:08.682"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:08.684" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:08.682" endtime="20210205 20:02:08.684"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.685" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:08.684" endtime="20210205 20:02:08.686"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:02:08.752" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=100 
 path_url=/posts?id=100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:08.752" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d86b6f4ca96e37e61ebc649965584e6151612573330; expires=Mon, 08-Mar-21 01:02:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612561421', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-AbapSgcu4MKsanVu8/m5reKm/rI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '11968', 'cf-request-id': '081675624d00000cc9438d6000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=t%2BBYuiPcIG2GVauaXs8f73ZHLb5uXJy7MguTh3igz%2FBXLKthEp96pIor%2B5h%2FRRFgEhhw4dVqCXk5HXoM6EjxG%2F%2BYM1QjKYwoylTjxOg30%2BQkIC7HWC7uk5NHQDTh"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1b07f260cc9-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:02:08.687" endtime="20210205 20:02:08.753"></status>
</kw>
<msg timestamp="20210205 20:02:08.753" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:08.686" endtime="20210205 20:02:08.753"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:08.754" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.753" endtime="20210205 20:02:08.754"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:08.755" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.754" endtime="20210205 20:02:08.755"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:08.755" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.755" endtime="20210205 20:02:08.756"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:08.756" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.756" endtime="20210205 20:02:08.756"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:08.757" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.757" endtime="20210205 20:02:08.757"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:08.758" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:08.757" endtime="20210205 20:02:08.758"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.759" endtime="20210205 20:02:08.760"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.760" endtime="20210205 20:02:08.760"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:08.761" endtime="20210205 20:02:08.761"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.759" endtime="20210205 20:02:08.761"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.758" endtime="20210205 20:02:08.761"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:08.762" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:08.762" endtime="20210205 20:02:08.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:02:08.817" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:08.817" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0fbe091b22d46894bd79638bdf5327831612573330; expires=Mon, 08-Mar-21 01:02:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611591853', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4334', 'cf-request-id': '081675629b0000cd02d5291000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=OCVa6eHuMQyeyiZQJfED7%2B9bDPEr5DRbAc9vn19Q1zyOndxK7vXAeP8ly7gni4G7o%2FoANzksPJY7mXw%2F7E1L5NPZGLIGUGPvXA1G1xUQyNXpZuFJtLSnz08cgxvm"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1b0fe42cd02-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<status status="PASS" starttime="20210205 20:02:08.764" endtime="20210205 20:02:08.818"></status>
</kw>
<msg timestamp="20210205 20:02:08.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:08.763" endtime="20210205 20:02:08.818"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:08.880" level="INFO">${filteridlist} = [100]</msg>
<status status="PASS" starttime="20210205 20:02:08.818" endtime="20210205 20:02:08.880"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:08.939" level="INFO">${filtertitlelist} = ['at nam consequatur ea labore ea harum']</msg>
<status status="PASS" starttime="20210205 20:02:08.881" endtime="20210205 20:02:08.939"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.008" level="INFO">${filterbodylist} = ['cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut']</msg>
<status status="PASS" starttime="20210205 20:02:08.940" endtime="20210205 20:02:09.008"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.008" endtime="20210205 20:02:09.009"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.009" endtime="20210205 20:02:09.010"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.010" endtime="20210205 20:02:09.010"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.011" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.011" endtime="20210205 20:02:09.011"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.012" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.012" endtime="20210205 20:02:09.012"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.013" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.012" endtime="20210205 20:02:09.013"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.013" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.013" endtime="20210205 20:02:09.013"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.014" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.014" endtime="20210205 20:02:09.014"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.015" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.014" endtime="20210205 20:02:09.015"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:09.016" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.016" endtime="20210205 20:02:09.016"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:08.671" endtime="20210205 20:02:09.017"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postfId} ${invalidIpostid}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:09.020" level="INFO">@{post_list} = [ 100 | 0 ]</msg>
<status status="PASS" starttime="20210205 20:02:09.019" endtime="20210205 20:02:09.020"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:02:09.020" level="INFO">Length is 2</msg>
<msg timestamp="20210205 20:02:09.021" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 20:02:09.020" endtime="20210205 20:02:09.021"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.021" endtime="20210205 20:02:09.022"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:09.023" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:09.022" endtime="20210205 20:02:09.023"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:09.025" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:09.024" endtime="20210205 20:02:09.025"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:09.026" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:09.025" endtime="20210205 20:02:09.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:02:09.224" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=100&amp;id=0 
 path_url=/posts?id=100&amp;id=0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:09.224" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=100&amp;id=0 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9dd09e365c0e65ae4181fad67b6234c71612573330; expires=Mon, 08-Mar-21 01:02:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612563041', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-AbapSgcu4MKsanVu8/m5reKm/rI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '10346', 'cf-request-id': '08167563a40000e740ac376000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=2mU2dwSGf%2FTUs4zkmAJ8XYVR4GPGw0c4vpNqHMQ98zGnzJIjy0v9rvVKd%2FiXVHoEPd9felIyEv3P4xIhkNGBlvpBHi%2B0zPbuBhxOUCSydb3lBonuPhP%2BFKT7xtoz"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1b2ab18e740-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:02:09.027" endtime="20210205 20:02:09.225"></status>
</kw>
<msg timestamp="20210205 20:02:09.225" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:09.027" endtime="20210205 20:02:09.225"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.226" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.225" endtime="20210205 20:02:09.226"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.227" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.227" endtime="20210205 20:02:09.227"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.228" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.227" endtime="20210205 20:02:09.228"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.228" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.228" endtime="20210205 20:02:09.228"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.229" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.229" endtime="20210205 20:02:09.229"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.230" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.230" endtime="20210205 20:02:09.230"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.231" endtime="20210205 20:02:09.232"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.232" endtime="20210205 20:02:09.233"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.233" endtime="20210205 20:02:09.233"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:09.231" endtime="20210205 20:02:09.233"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:09.230" endtime="20210205 20:02:09.233"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:09.234" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:09.234" endtime="20210205 20:02:09.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:02:09.291" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:09.291" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d570f66935749a916fc62e451b45a11bf1612573330; expires=Mon, 08-Mar-21 01:02:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611591853', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4334', 'cf-request-id': '08167564730000e738f320b000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=wOeMFBXpZT6Zezugo56ldJJEGmb0bQnT0H%2BifDjK%2BadjPgVtMt3euAnqanXv3R%2BozkEIXu0X5tvctncIChfMj%2FCtpchy9%2BHvS%2FQOOmSvWWp9vFJsoRyeudgWvE4X"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1b3ef30e738-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<status status="PASS" starttime="20210205 20:02:09.236" endtime="20210205 20:02:09.292"></status>
</kw>
<msg timestamp="20210205 20:02:09.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:09.235" endtime="20210205 20:02:09.292"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.372" level="INFO">${filteridlist} = [100]</msg>
<status status="PASS" starttime="20210205 20:02:09.292" endtime="20210205 20:02:09.372"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.458" level="INFO">${filtertitlelist} = ['at nam consequatur ea labore ea harum']</msg>
<status status="PASS" starttime="20210205 20:02:09.372" endtime="20210205 20:02:09.458"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.543" level="INFO">${filterbodylist} = ['cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut']</msg>
<status status="PASS" starttime="20210205 20:02:09.458" endtime="20210205 20:02:09.543"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.543" endtime="20210205 20:02:09.544"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.544" endtime="20210205 20:02:09.545"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.545" endtime="20210205 20:02:09.546"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.547" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.546" endtime="20210205 20:02:09.547"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.548" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.547" endtime="20210205 20:02:09.548"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.548" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.548" endtime="20210205 20:02:09.548"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.548" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.548" endtime="20210205 20:02:09.548"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.548" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.548" endtime="20210205 20:02:09.548"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.549" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.549" endtime="20210205 20:02:09.549"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:09.550" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.549" endtime="20210205 20:02:09.550"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:09.018" endtime="20210205 20:02:09.550"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${invalidIpostid} ${postfId}</arg>
<arg>1</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:09.553" level="INFO">@{post_list} = [ 0 | 100 ]</msg>
<status status="PASS" starttime="20210205 20:02:09.552" endtime="20210205 20:02:09.553"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:02:09.554" level="INFO">Length is 2</msg>
<msg timestamp="20210205 20:02:09.554" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 20:02:09.553" endtime="20210205 20:02:09.554"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.554" endtime="20210205 20:02:09.561"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:09.564" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:09.561" endtime="20210205 20:02:09.565"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:09.567" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:09.565" endtime="20210205 20:02:09.567"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:09.568" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:09.568" endtime="20210205 20:02:09.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:02:09.623" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=0&amp;id=100 
 path_url=/posts?id=0&amp;id=100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:09.624" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=0&amp;id=100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da71dfb4e93964c06b7384121b3ca5c411612573330; expires=Mon, 08-Mar-21 01:02:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1612563041', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-AbapSgcu4MKsanVu8/m5reKm/rI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '10346', 'cf-request-id': '08167565c10000e855a8029000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Q8BVtkHVbUCjQ0ILJIwqWJJ721sprH6PCN7B6xIXO5m5SGeRYl3mdosGSuA7RRcj2MgBrqcnIU7A6foYIi6MsYS7i%2BUES%2BkyQ3ynqKS6wLRT2iVDpPEIq8UyIhj1"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1b60b32e855-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:02:09.570" endtime="20210205 20:02:09.624"></status>
</kw>
<msg timestamp="20210205 20:02:09.624" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:09.569" endtime="20210205 20:02:09.624"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.625" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.625" endtime="20210205 20:02:09.626"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.626" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.626" endtime="20210205 20:02:09.626"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.627" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.626" endtime="20210205 20:02:09.627"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.628" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.627" endtime="20210205 20:02:09.628"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.629" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.628" endtime="20210205 20:02:09.629"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.630" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.630" endtime="20210205 20:02:09.630"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.631" endtime="20210205 20:02:09.632"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.632" endtime="20210205 20:02:09.632"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.633" endtime="20210205 20:02:09.633"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:09.631" endtime="20210205 20:02:09.633"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:09.630" endtime="20210205 20:02:09.633"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:09.634" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:09.633" endtime="20210205 20:02:09.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:02:09.690" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:09.690" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0d209f377c71d532818bd0bf444e5cf61612573330; expires=Mon, 08-Mar-21 01:02:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611591853', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4334', 'cf-request-id': '0816756605000091a433871000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=WgGkpC8PvYsn2oZJlSWalxe2MMlgAviigBq0IJARMdMGb2zPFh9LB5FJ7SY74Prmss%2FHrRpygj2EsLeeMJ7gxDk5YLnTiUWUxWQx7wA0s%2BWhx66Clepm5d1dI3%2BH"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1b66c6e91a4-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<status status="PASS" starttime="20210205 20:02:09.635" endtime="20210205 20:02:09.691"></status>
</kw>
<msg timestamp="20210205 20:02:09.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:09.635" endtime="20210205 20:02:09.691"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.762" level="INFO">${filteridlist} = [100]</msg>
<status status="PASS" starttime="20210205 20:02:09.691" endtime="20210205 20:02:09.762"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.835" level="INFO">${filtertitlelist} = ['at nam consequatur ea labore ea harum']</msg>
<status status="PASS" starttime="20210205 20:02:09.762" endtime="20210205 20:02:09.836"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.907" level="INFO">${filterbodylist} = ['cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut']</msg>
<status status="PASS" starttime="20210205 20:02:09.836" endtime="20210205 20:02:09.907"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.908" endtime="20210205 20:02:09.908"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.908" endtime="20210205 20:02:09.909"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.909" endtime="20210205 20:02:09.910"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.910" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.910" endtime="20210205 20:02:09.910"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.911" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.911" endtime="20210205 20:02:09.911"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.912" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.911" endtime="20210205 20:02:09.912"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.912" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.912" endtime="20210205 20:02:09.912"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.913" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.913" endtime="20210205 20:02:09.913"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.914" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.913" endtime="20210205 20:02:09.914"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:09.914" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.914" endtime="20210205 20:02:09.914"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:09.551" endtime="20210205 20:02:09.915"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postinId} ${invalidFpostid}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:09.918" level="INFO">@{post_list} = [ 1 | 101 ]</msg>
<status status="PASS" starttime="20210205 20:02:09.917" endtime="20210205 20:02:09.918"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:02:09.918" level="INFO">Length is 2</msg>
<msg timestamp="20210205 20:02:09.919" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 20:02:09.918" endtime="20210205 20:02:09.919"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.919" endtime="20210205 20:02:09.926"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:09.929" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:09.927" endtime="20210205 20:02:09.929"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:09.932" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:09.930" endtime="20210205 20:02:09.932"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:09.934" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:09.933" endtime="20210205 20:02:09.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:02:09.989" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=1&amp;id=101 
 path_url=/posts?id=1&amp;id=101 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:09.989" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=1&amp;id=101 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de73c6e6c6e8366cc9e16d4896faade8f1612573331; expires=Mon, 08-Mar-21 01:02:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '997', 'x-ratelimit-reset': '1612561301', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"134-QtF0EaiifRh1Z3cEspXIXV0RoQY"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12037', 'cf-request-id': '081675673200003e4c9a209000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=TsOfnaJMuOI8SbPQdJ0vx4Du5sdi91nTQcHxgYuUvvKRdyhctEGRN7aWea586p7gRqzQBd96PeW8wpTlpeeKIWiex%2BIqRc4hd5IeRuHOWjCXqRkss9NoxJJHqV64"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1b85d653e4c-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:02:09.936" endtime="20210205 20:02:09.990"></status>
</kw>
<msg timestamp="20210205 20:02:09.990" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:09.935" endtime="20210205 20:02:09.990"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.991" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.990" endtime="20210205 20:02:09.991"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:09.992" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.991" endtime="20210205 20:02:09.992"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.992" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.992" endtime="20210205 20:02:09.993"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:09.993" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.993" endtime="20210205 20:02:09.993"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.994" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.993" endtime="20210205 20:02:09.994"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:09.995" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:09.995" endtime="20210205 20:02:09.995"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.996" endtime="20210205 20:02:09.997"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.997" endtime="20210205 20:02:09.998"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:09.998" endtime="20210205 20:02:09.999"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:09.996" endtime="20210205 20:02:09.999"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:09.996" endtime="20210205 20:02:09.999"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.000" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:09.999" endtime="20210205 20:02:10.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:02:10.058" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:10.058" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dce83c447a47f9d71d37c5381e83f00031612573331; expires=Mon, 08-Mar-21 01:02:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4673', 'cf-request-id': '081675677600009a0ebca5b000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=8dLR4Jsb4K73RKA7wbQA5uZMxy4En4aS9pd764BaVRRAzpt3sQqdMiyWh3rRdsfFL346BJqs%2F9JwqqbUzWFAlDurlCfKVO%2Bcfvr0wEMA9tYSr%2FRoMnGxRG7K8jo3"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1b8b9da9a0e-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<status status="PASS" starttime="20210205 20:02:10.001" endtime="20210205 20:02:10.059"></status>
</kw>
<msg timestamp="20210205 20:02:10.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:10.000" endtime="20210205 20:02:10.059"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:10.132" level="INFO">${filteridlist} = [1]</msg>
<status status="PASS" starttime="20210205 20:02:10.059" endtime="20210205 20:02:10.132"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:10.203" level="INFO">${filtertitlelist} = ['sunt aut facere repellat provident occaecati excepturi optio reprehenderit']</msg>
<status status="PASS" starttime="20210205 20:02:10.132" endtime="20210205 20:02:10.203"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:10.275" level="INFO">${filterbodylist} = ['quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto']</msg>
<status status="PASS" starttime="20210205 20:02:10.203" endtime="20210205 20:02:10.275"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.275" endtime="20210205 20:02:10.276"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.276" endtime="20210205 20:02:10.277"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.277" endtime="20210205 20:02:10.277"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:10.278" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.277" endtime="20210205 20:02:10.278"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:10.279" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.278" endtime="20210205 20:02:10.279"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:10.279" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.279" endtime="20210205 20:02:10.279"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:10.280" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.279" endtime="20210205 20:02:10.280"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:10.280" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.280" endtime="20210205 20:02:10.281"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:10.281" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.281" endtime="20210205 20:02:10.281"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:10.282" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.281" endtime="20210205 20:02:10.282"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:09.916" endtime="20210205 20:02:10.282"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${invalidFpostid} ${postinId}</arg>
<arg>1</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:10.285" level="INFO">@{post_list} = [ 101 | 1 ]</msg>
<status status="PASS" starttime="20210205 20:02:10.284" endtime="20210205 20:02:10.285"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:02:10.286" level="INFO">Length is 2</msg>
<msg timestamp="20210205 20:02:10.286" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 20:02:10.285" endtime="20210205 20:02:10.286"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.287" endtime="20210205 20:02:10.293"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:10.296" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:10.294" endtime="20210205 20:02:10.296"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:02:10.299" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:10.297" endtime="20210205 20:02:10.299"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.300" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:10.300" endtime="20210205 20:02:10.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:02:10.359" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=101&amp;id=1 
 path_url=/posts?id=101&amp;id=1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:10.359" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=101&amp;id=1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7f0f0d831fa95c4ede40733585aa206e1612573331; expires=Mon, 08-Mar-21 01:02:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612563161', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-QtF0EaiifRh1Z3cEspXIXV0RoQY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '10191', 'cf-request-id': '08167568a100003e034026f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=C%2BnCFT%2B7gsCZo6ku8nqvVjFV2cf85AZ07C%2Fv0v00wG1Pfl6r%2FBUlLFQsoXEsH1E62FdM%2BPo3WdjJp815DN%2Fe9yGyqEMNE9iS9XtMfVawRVChbHdevwsydMbh3%2FtU"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1ba9f923e03-EWR', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:02:10.304" endtime="20210205 20:02:10.360"></status>
</kw>
<msg timestamp="20210205 20:02:10.360" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:10.303" endtime="20210205 20:02:10.360"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:10.361" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.361" endtime="20210205 20:02:10.361"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:10.362" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.362" endtime="20210205 20:02:10.362"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:10.363" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.363" endtime="20210205 20:02:10.363"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:10.364" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.363" endtime="20210205 20:02:10.364"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:10.365" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.364" endtime="20210205 20:02:10.365"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:10.366" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.365" endtime="20210205 20:02:10.366"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.367" endtime="20210205 20:02:10.367"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.368" endtime="20210205 20:02:10.368"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.368" endtime="20210205 20:02:10.369"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:10.366" endtime="20210205 20:02:10.369"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:10.366" endtime="20210205 20:02:10.369"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.370" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:10.369" endtime="20210205 20:02:10.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:02:10.483" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:10.483" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d041c11e1cbf5c4ce5785b1973afc0f2d1612573331; expires=Mon, 08-Mar-21 01:02:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4673', 'cf-request-id': '08167568ea000015c70138c000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=OTdxZKJRHbEo7tnKWH9fsZQcQS35VMuuW9RYonOJI7ZT6QXi0c9Nwr7DmX%2Bhb2ts9cZktPhc71MkfjaSwf7Q12%2BsyeYItCG8uVMSKqvO51gDaJjN3JaFfRFx1QES"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1bb0e0b15c7-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<status status="PASS" starttime="20210205 20:02:10.371" endtime="20210205 20:02:10.484"></status>
</kw>
<msg timestamp="20210205 20:02:10.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:10.371" endtime="20210205 20:02:10.484"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:10.557" level="INFO">${filteridlist} = [1]</msg>
<status status="PASS" starttime="20210205 20:02:10.484" endtime="20210205 20:02:10.557"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:10.631" level="INFO">${filtertitlelist} = ['sunt aut facere repellat provident occaecati excepturi optio reprehenderit']</msg>
<status status="PASS" starttime="20210205 20:02:10.557" endtime="20210205 20:02:10.631"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:10.703" level="INFO">${filterbodylist} = ['quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto']</msg>
<status status="PASS" starttime="20210205 20:02:10.631" endtime="20210205 20:02:10.703"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.703" endtime="20210205 20:02:10.704"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.704" endtime="20210205 20:02:10.705"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.705" endtime="20210205 20:02:10.705"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:02:10.706" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.705" endtime="20210205 20:02:10.706"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:02:10.707" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.706" endtime="20210205 20:02:10.707"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:02:10.708" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.707" endtime="20210205 20:02:10.708"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:02:10.708" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.708" endtime="20210205 20:02:10.708"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:02:10.709" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.708" endtime="20210205 20:02:10.709"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:02:10.709" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.709" endtime="20210205 20:02:10.710"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:02:10.710" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.710" endtime="20210205 20:02:10.710"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:10.283" endtime="20210205 20:02:10.710"></status>
</kw>
<doc>Compare /posts parameter filter response to posts/{num}</doc>
<tags>
<tag>Hybrid</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:02:08.247" endtime="20210205 20:02:10.711" critical="yes"></status>
</test>
<test id="s1-t8" name="TC008 VALIDATE GET POST BY POST ID FOR ALL POST ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:02:10.727" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:02:10.726" endtime="20210205 20:02:10.727"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:02:10.729" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:10.727" endtime="20210205 20:02:10.729"></status>
</kw>
<msg timestamp="20210205 20:02:10.730" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:10.725" endtime="20210205 20:02:10.730"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.733" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:10.732" endtime="20210205 20:02:10.733"></status>
</kw>
<msg timestamp="20210205 20:02:10.734" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:02:10.731" endtime="20210205 20:02:10.734"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.736" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:10.735" endtime="20210205 20:02:10.736"></status>
</kw>
<msg timestamp="20210205 20:02:10.737" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:10.734" endtime="20210205 20:02:10.737"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.741" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:10.739" endtime="20210205 20:02:10.741"></status>
</kw>
<msg timestamp="20210205 20:02:10.742" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:10.737" endtime="20210205 20:02:10.742"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.747" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:10.744" endtime="20210205 20:02:10.747"></status>
</kw>
<msg timestamp="20210205 20:02:10.747" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:02:10.742" endtime="20210205 20:02:10.747"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.752" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:02:10.749" endtime="20210205 20:02:10.752"></status>
</kw>
<msg timestamp="20210205 20:02:10.753" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:10.748" endtime="20210205 20:02:10.753"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.756" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:10.754" endtime="20210205 20:02:10.756"></status>
</kw>
<msg timestamp="20210205 20:02:10.756" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:10.753" endtime="20210205 20:02:10.756"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.758" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:02:10.757" endtime="20210205 20:02:10.758"></status>
</kw>
<msg timestamp="20210205 20:02:10.759" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:10.756" endtime="20210205 20:02:10.759"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.761" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:02:10.760" endtime="20210205 20:02:10.761"></status>
</kw>
<msg timestamp="20210205 20:02:10.762" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:10.759" endtime="20210205 20:02:10.762"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.766" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:02:10.764" endtime="20210205 20:02:10.766"></status>
</kw>
<msg timestamp="20210205 20:02:10.767" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:02:10.763" endtime="20210205 20:02:10.767"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.771" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:02:10.768" endtime="20210205 20:02:10.771"></status>
</kw>
<msg timestamp="20210205 20:02:10.771" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:10.767" endtime="20210205 20:02:10.772"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.776" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:02:10.774" endtime="20210205 20:02:10.776"></status>
</kw>
<msg timestamp="20210205 20:02:10.777" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:10.772" endtime="20210205 20:02:10.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.779" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:02:10.777" endtime="20210205 20:02:10.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:02:10.781" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:02:10.780" endtime="20210205 20:02:10.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.782" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:02:10.781" endtime="20210205 20:02:10.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.784" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:10.783" endtime="20210205 20:02:10.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.785" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:10.784" endtime="20210205 20:02:10.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.786" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:02:10.786" endtime="20210205 20:02:10.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.788" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:02:10.787" endtime="20210205 20:02:10.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.789" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:10.789" endtime="20210205 20:02:10.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.790" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:10.790" endtime="20210205 20:02:10.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.791" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:02:10.791" endtime="20210205 20:02:10.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.792" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:02:10.792" endtime="20210205 20:02:10.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.793" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:02:10.793" endtime="20210205 20:02:10.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.794" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:02:10.794" endtime="20210205 20:02:10.794"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:10.725" endtime="20210205 20:02:10.795"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${allpostcnt}</arg>
</arguments>
<assign>
<var>${allpostnum}</var>
</assign>
<msg timestamp="20210205 20:02:10.797" level="INFO">${allpostnum} = 100</msg>
<status status="PASS" starttime="20210205 20:02:10.796" endtime="20210205 20:02:10.797"></status>
</kw>
<kw name="${postid} IN RANGE [ 1 | ${allpostnum+1} ]" type="for">
<kw name="${postid} = 1" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.801" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:10.800" endtime="20210205 20:02:10.803"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:10.879" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:10.880" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d28e07f598159fad0ad7b558d7f23e7491612573332; expires=Mon, 08-Mar-21 01:02:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4674', 'cf-request-id': '0816756a9c00003e105201b000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=HNBM%2BsLynit4EiOrOFCyvi1A0gO7P99e%2FuvFMr%2B335c5C2fV62PNydpPSfLu4Vyv%2FxgwToAywc9XpamYsQcroQUolUlU3M0G34y9Y6dvJosetfYl0GI4kmBXPV2E"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1bdcafb3e10-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<msg timestamp="20210205 20:02:10.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:10.803" endtime="20210205 20:02:10.880"></status>
</kw>
<msg timestamp="20210205 20:02:10.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:10.799" endtime="20210205 20:02:10.881"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.883" endtime="20210205 20:02:10.886"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:10.882" endtime="20210205 20:02:10.886"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:10.881" endtime="20210205 20:02:10.886"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:10.888" endtime="20210205 20:02:10.888"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:10.887" endtime="20210205 20:02:10.889"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.890" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.890" endtime="20210205 20:02:10.891"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.961" level="INFO">${idvalue} = [1]</msg>
<status status="PASS" starttime="20210205 20:02:10.891" endtime="20210205 20:02:10.961"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:10.962" level="INFO">${responseid} = 1</msg>
<status status="PASS" starttime="20210205 20:02:10.961" endtime="20210205 20:02:10.962"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:10.962" endtime="20210205 20:02:10.963"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:10.964" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:10.963" endtime="20210205 20:02:10.964"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:10.889" endtime="20210205 20:02:10.964"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:10.798" endtime="20210205 20:02:10.964"></status>
</kw>
<kw name="${postid} = 2" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:10.966" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:10.966" endtime="20210205 20:02:10.967"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:11.019" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/2 
 path_url=/posts/2 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:11.020" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/2 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d65732db09f195525267d51dd2a90f6261612573332; expires=Mon, 08-Mar-21 01:02:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612518289', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"116-jnDuMpjju89+9j7e0BqkdFsVRjs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '26158', 'cf-request-id': '0816756b3900003dfef32e3000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=eAsRMXkL7Xifi9ZCCtEf4zOg8DijSJaJr%2FGeHV0cjpC1pk1PE6745VWMg03blXZVRKi4V2knY%2FIzvgnSzaQn0t%2BIAgfz27tQPXDWeuGNjLv0F40dY1rgS2dhLPnI"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1bec9dc3dfe-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 2,
  "title": "qui est esse",
  "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
} 
 </msg>
<msg timestamp="20210205 20:02:11.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:10.967" endtime="20210205 20:02:11.020"></status>
</kw>
<msg timestamp="20210205 20:02:11.021" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:10.965" endtime="20210205 20:02:11.021"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.023" endtime="20210205 20:02:11.026"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.022" endtime="20210205 20:02:11.026"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.021" endtime="20210205 20:02:11.027"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.028" endtime="20210205 20:02:11.029"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.027" endtime="20210205 20:02:11.029"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.030" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.030" endtime="20210205 20:02:11.030"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.099" level="INFO">${idvalue} = [2]</msg>
<status status="PASS" starttime="20210205 20:02:11.031" endtime="20210205 20:02:11.099"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:11.101" level="INFO">${responseid} = 2</msg>
<status status="PASS" starttime="20210205 20:02:11.100" endtime="20210205 20:02:11.101"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.101" endtime="20210205 20:02:11.102"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.102" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.102" endtime="20210205 20:02:11.102"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.029" endtime="20210205 20:02:11.103"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:10.964" endtime="20210205 20:02:11.103"></status>
</kw>
<kw name="${postid} = 3" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.105" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:11.104" endtime="20210205 20:02:11.105"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:11.197" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/3 
 path_url=/posts/3 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:11.197" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/3 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db750f088e806b3f05fca164d19469b941612573332; expires=Mon, 08-Mar-21 01:02:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1610298431', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11b-USacuIw5a/iXAGdNKBvqr/TbMTc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '18333', 'cf-request-id': '0816756bc30000155a1d12b000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=8AesQ4hdk7qbk8B43cDHnbSqN9igL639%2B92lw1%2FQYA6C%2Bq4%2B%2B0lQP21QfCXddKtLTW73lNO9TzSZWlNyMbSwmtrj%2BUnCmokanl%2FuhY%2F7aYPirVFiS%2FBgE%2FmpaoA0"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1bf9843155a-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 3,
  "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
  "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
} 
 </msg>
<msg timestamp="20210205 20:02:11.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.106" endtime="20210205 20:02:11.198"></status>
</kw>
<msg timestamp="20210205 20:02:11.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.103" endtime="20210205 20:02:11.198"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.201" endtime="20210205 20:02:11.204"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.200" endtime="20210205 20:02:11.204"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.199" endtime="20210205 20:02:11.204"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.205" endtime="20210205 20:02:11.206"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.204" endtime="20210205 20:02:11.206"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.208" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.207" endtime="20210205 20:02:11.208"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.314" level="INFO">${idvalue} = [3]</msg>
<status status="PASS" starttime="20210205 20:02:11.208" endtime="20210205 20:02:11.314"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:11.315" level="INFO">${responseid} = 3</msg>
<status status="PASS" starttime="20210205 20:02:11.314" endtime="20210205 20:02:11.315"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.315" endtime="20210205 20:02:11.316"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.317" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.316" endtime="20210205 20:02:11.317"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.207" endtime="20210205 20:02:11.317"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.103" endtime="20210205 20:02:11.317"></status>
</kw>
<kw name="${postid} = 4" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.319" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:11.318" endtime="20210205 20:02:11.320"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:11.384" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/4 
 path_url=/posts/4 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:11.385" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/4 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd5347da412139d355d7702dd57b3ebee1612573332; expires=Mon, 08-Mar-21 01:02:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1610298431', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10e-HqG77o1RAmatkSwR36f4+Io6g1E"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '3506', 'cf-request-id': '0816756c990000e740f2b52000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=y2d2cycIFXMNTC0SlcXFYi%2B%2FZvdcOw4NmycSTutj4tQoSP3Kg2bu3p36K5ybCqu6Gh%2BMGrbGtmrgEh32SzYVA6cDSt43lcYzhPUmxb%2F5hd2jffkrfU1gO2nVVG9q"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1c0fb66e740-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 4,
  "title": "eum et est occaecati",
  "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
} 
 </msg>
<msg timestamp="20210205 20:02:11.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.320" endtime="20210205 20:02:11.385"></status>
</kw>
<msg timestamp="20210205 20:02:11.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.318" endtime="20210205 20:02:11.386"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.388" endtime="20210205 20:02:11.391"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.387" endtime="20210205 20:02:11.391"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.386" endtime="20210205 20:02:11.392"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.393" endtime="20210205 20:02:11.393"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.392" endtime="20210205 20:02:11.394"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.395" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.395" endtime="20210205 20:02:11.395"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.451" level="INFO">${idvalue} = [4]</msg>
<status status="PASS" starttime="20210205 20:02:11.395" endtime="20210205 20:02:11.451"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:11.452" level="INFO">${responseid} = 4</msg>
<status status="PASS" starttime="20210205 20:02:11.452" endtime="20210205 20:02:11.452"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.452" endtime="20210205 20:02:11.453"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.453" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.453" endtime="20210205 20:02:11.453"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.394" endtime="20210205 20:02:11.453"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.317" endtime="20210205 20:02:11.453"></status>
</kw>
<kw name="${postid} = 5" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.455" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:11.454" endtime="20210205 20:02:11.455"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:11.511" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/5 
 path_url=/posts/5 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:11.512" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/5 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0ebfe8e796ed5c2fdb3980524f2df0991612573332; expires=Mon, 08-Mar-21 01:02:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612523149', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-IivojO0CtPZmcMK0iydTbsfG7Wc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '18333', 'cf-request-id': '0816756d210000e6b4ef99b000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=5GnFZPfFYbeDMrnCS7D5A5LBS5oTzN%2Fsgo0FgtG0yjOSiCy%2FWsxbuA8N2chhuXVb9i8sqXNb0MOsPpBoq0sNYS7UEQTVOJsuiNkw%2BRkFQm2Hc4wfNQcXzOuiEb6Y"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1c1cacbe6b4-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 5,
  "title": "nesciunt quas odio",
  "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
} 
 </msg>
<msg timestamp="20210205 20:02:11.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.455" endtime="20210205 20:02:11.512"></status>
</kw>
<msg timestamp="20210205 20:02:11.513" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.454" endtime="20210205 20:02:11.513"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.515" endtime="20210205 20:02:11.518"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.514" endtime="20210205 20:02:11.518"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.513" endtime="20210205 20:02:11.519"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.520" endtime="20210205 20:02:11.520"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.519" endtime="20210205 20:02:11.521"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.522" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.522" endtime="20210205 20:02:11.522"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.593" level="INFO">${idvalue} = [5]</msg>
<status status="PASS" starttime="20210205 20:02:11.522" endtime="20210205 20:02:11.593"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:11.594" level="INFO">${responseid} = 5</msg>
<status status="PASS" starttime="20210205 20:02:11.593" endtime="20210205 20:02:11.594"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.594" endtime="20210205 20:02:11.595"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.595" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.595" endtime="20210205 20:02:11.595"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.521" endtime="20210205 20:02:11.596"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.454" endtime="20210205 20:02:11.596"></status>
</kw>
<kw name="${postid} = 6" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.597" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:11.597" endtime="20210205 20:02:11.598"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:11.655" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/6 
 path_url=/posts/6 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:11.655" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/6 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0ca054ae1bf60f62c6dd151d2a25627f1612573332; expires=Mon, 08-Mar-21 01:02:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612517389', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-kxIuVC3UpKrGIRfIBmsZMsJaaiA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '26962', 'cf-request-id': '0816756db00000cce261386000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=xDQV%2FULFtXf19LH%2BIpPgxZNidCcrD8paHseNM4CujiW995Jf13NfiSBZs6Zx49X40LSdEnlNmCk3xX9OQd%2Fyaaq2hpBGqGpwOczWfEF%2BGBXFXv34Be6CWU5kih6B"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1c2b92acce2-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 6,
  "title": "dolorem eum magni eos aperiam quia",
  "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
} 
 </msg>
<msg timestamp="20210205 20:02:11.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.598" endtime="20210205 20:02:11.656"></status>
</kw>
<msg timestamp="20210205 20:02:11.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.596" endtime="20210205 20:02:11.656"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.659" endtime="20210205 20:02:11.662"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.658" endtime="20210205 20:02:11.662"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.657" endtime="20210205 20:02:11.662"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.664" endtime="20210205 20:02:11.664"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.663" endtime="20210205 20:02:11.665"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.667" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.666" endtime="20210205 20:02:11.667"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.740" level="INFO">${idvalue} = [6]</msg>
<status status="PASS" starttime="20210205 20:02:11.667" endtime="20210205 20:02:11.740"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:11.741" level="INFO">${responseid} = 6</msg>
<status status="PASS" starttime="20210205 20:02:11.740" endtime="20210205 20:02:11.741"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.741" endtime="20210205 20:02:11.742"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.742" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.742" endtime="20210205 20:02:11.742"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.665" endtime="20210205 20:02:11.743"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.596" endtime="20210205 20:02:11.743"></status>
</kw>
<kw name="${postid} = 7" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.745" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:11.744" endtime="20210205 20:02:11.745"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:11.797" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/7 
 path_url=/posts/7 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:11.797" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/7 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d64f297fe39a49b06d7dc62ce966c495e1612573333; expires=Mon, 08-Mar-21 01:02:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612523209', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-wrK4SLERwov0EbpkNAKTHsvGWBs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '18333', 'cf-request-id': '0816756e400000e6dc1588e000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=vvFkr601EYAZXxzPWCXH8IU0JaI4mUZISzW6xKVqlCoaddIKYQyK8ufXxutza24Ql1Qz6QjQ%2BouuppYXvZvysFk2adkAC9jkpuw1wSQKLx3HnmTtMv%2F0cyxjSUUC"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1c39c64e6dc-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 7,
  "title": "magnam facilis autem",
  "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
} 
 </msg>
<msg timestamp="20210205 20:02:11.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.746" endtime="20210205 20:02:11.798"></status>
</kw>
<msg timestamp="20210205 20:02:11.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.743" endtime="20210205 20:02:11.799"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.801" endtime="20210205 20:02:11.804"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.800" endtime="20210205 20:02:11.804"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.799" endtime="20210205 20:02:11.804"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.806" endtime="20210205 20:02:11.806"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.805" endtime="20210205 20:02:11.807"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.808" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.808" endtime="20210205 20:02:11.808"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.876" level="INFO">${idvalue} = [7]</msg>
<status status="PASS" starttime="20210205 20:02:11.808" endtime="20210205 20:02:11.876"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:11.877" level="INFO">${responseid} = 7</msg>
<status status="PASS" starttime="20210205 20:02:11.876" endtime="20210205 20:02:11.877"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.877" endtime="20210205 20:02:11.878"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.878" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.878" endtime="20210205 20:02:11.878"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.807" endtime="20210205 20:02:11.879"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.743" endtime="20210205 20:02:11.879"></status>
</kw>
<kw name="${postid} = 8" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.880" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:11.880" endtime="20210205 20:02:11.881"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:11.933" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/8 
 path_url=/posts/8 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:11.934" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/8 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5fb3114c1c0224fee467ea7a423aa49c1612573333; expires=Mon, 08-Mar-21 01:02:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '999', 'x-ratelimit-reset': '1612211807', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"104-Yd+P3vUk4gJ20H3qrEyZIqbProI"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '0816756ec9000015bf9facd000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=I2HjtMIKyKvFRD6PoYMPPm5VQ5PrJtOw6R2zwG7nn5cPDenWsBJAnRFgSuQMRdGE1SuYk7H1Q0YmTC%2F4qMMMvr%2FZeR21sMRpmKkMEtTkub0H%2B1CvysbhrYxJruY4"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1c47cc815bf-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 8,
  "title": "dolorem dolore est ipsam",
  "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
} 
 </msg>
<msg timestamp="20210205 20:02:11.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.881" endtime="20210205 20:02:11.934"></status>
</kw>
<msg timestamp="20210205 20:02:11.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.879" endtime="20210205 20:02:11.935"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.937" endtime="20210205 20:02:11.940"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.936" endtime="20210205 20:02:11.940"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.935" endtime="20210205 20:02:11.941"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:11.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.942" endtime="20210205 20:02:11.943"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.941" endtime="20210205 20:02:11.943"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.944" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.944" endtime="20210205 20:02:11.944"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.994" level="INFO">${idvalue} = [8]</msg>
<status status="PASS" starttime="20210205 20:02:11.945" endtime="20210205 20:02:11.994"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:11.996" level="INFO">${responseid} = 8</msg>
<status status="PASS" starttime="20210205 20:02:11.995" endtime="20210205 20:02:11.996"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:11.996" endtime="20210205 20:02:11.997"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:11.998" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:11.997" endtime="20210205 20:02:11.998"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.943" endtime="20210205 20:02:11.998"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.879" endtime="20210205 20:02:11.998"></status>
</kw>
<kw name="${postid} = 9" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:12.000" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:12.000" endtime="20210205 20:02:12.001"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:12.057" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/9 
 path_url=/posts/9 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:12.057" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/9 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d87c12460ca08b0b269667cd662f1a0861612573333; expires=Mon, 08-Mar-21 01:02:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '991', 'X-Ratelimit-Reset': '1611625595', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-mPDZopc4bkupX1TAvUQz4Bpbp5s"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '0816756f4100003e0f80208000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=4BRY0zB5%2FpVw5yX0MYY76Ioh4W%2F9rYcLjovJs2rBGDCgTXPzykZESvPrLi2SP2yzWY1p1bBTL0OOKUzPsqQFPA%2BDsC8l6JO9gnTiLrI5uLh%2B07UReEJ2PDtVk2%2Fv"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1c539e03e0f-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 9,
  "title": "nesciunt iure omnis dolorem tempora et accusantium",
  "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
} 
 </msg>
<msg timestamp="20210205 20:02:12.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.001" endtime="20210205 20:02:12.058"></status>
</kw>
<msg timestamp="20210205 20:02:12.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:11.999" endtime="20210205 20:02:12.058"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:12.061" endtime="20210205 20:02:12.064"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.060" endtime="20210205 20:02:12.064"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.059" endtime="20210205 20:02:12.065"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:12.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.066" endtime="20210205 20:02:12.067"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.065" endtime="20210205 20:02:12.067"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.068" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:12.068" endtime="20210205 20:02:12.068"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.138" level="INFO">${idvalue} = [9]</msg>
<status status="PASS" starttime="20210205 20:02:12.069" endtime="20210205 20:02:12.138"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:12.139" level="INFO">${responseid} = 9</msg>
<status status="PASS" starttime="20210205 20:02:12.138" endtime="20210205 20:02:12.139"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:12.140" endtime="20210205 20:02:12.140"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.141" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:12.141" endtime="20210205 20:02:12.141"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.067" endtime="20210205 20:02:12.141"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:11.998" endtime="20210205 20:02:12.141"></status>
</kw>
<kw name="${postid} = 10" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:12.143" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:12.143" endtime="20210205 20:02:12.144"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:12.198" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/10 
 path_url=/posts/10 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:12.199" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/10 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7a12290fd3a02b39cf5a9bfe51b1fadc1612573333; expires=Mon, 08-Mar-21 01:02:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '993', 'X-Ratelimit-Reset': '1612521769', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d9-iWGkhNuCVU3QUpWXcSkr72qX524"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '18333', 'cf-request-id': '0816756fce0000f041542c4000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=2H0xScpZL861zWT7V1a23gVgFv76ViSDIQ1TMZUB%2FhGJfjQWlmzz6heqWw8cRMYE%2F8%2Fr06SfLxP0cD7JjiNbzq9qg6BQBeMQCit0vcJ2asplnTyn7cKEoPHs6jTs"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1c61ce6f041-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 10,
  "title": "optio molestias id quia eum",
  "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
} 
 </msg>
<msg timestamp="20210205 20:02:12.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.144" endtime="20210205 20:02:12.199"></status>
</kw>
<msg timestamp="20210205 20:02:12.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.142" endtime="20210205 20:02:12.200"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:12.202" endtime="20210205 20:02:12.205"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.201" endtime="20210205 20:02:12.206"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.200" endtime="20210205 20:02:12.206"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:12.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.207" endtime="20210205 20:02:12.208"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.206" endtime="20210205 20:02:12.208"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.210" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:12.209" endtime="20210205 20:02:12.210"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.290" level="INFO">${idvalue} = [10]</msg>
<status status="PASS" starttime="20210205 20:02:12.210" endtime="20210205 20:02:12.290"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:12.291" level="INFO">${responseid} = 10</msg>
<status status="PASS" starttime="20210205 20:02:12.290" endtime="20210205 20:02:12.291"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:12.291" endtime="20210205 20:02:12.292"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.292" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:12.292" endtime="20210205 20:02:12.292"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.209" endtime="20210205 20:02:12.293"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.142" endtime="20210205 20:02:12.293"></status>
</kw>
<kw name="${postid} = 11" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:12.294" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:12.294" endtime="20210205 20:02:12.295"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:12.349" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/11 
 path_url=/posts/11 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:12.349" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/11 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2e7e05b7d77f30b4cc5b7daa1e9a2d6e1612573333; expires=Mon, 08-Mar-21 01:02:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '936', 'X-Ratelimit-Reset': '1610900006', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-uIZ0aYbaIRT3eH//+EjRpRGAwRw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '081675706800003daf8f210000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=4iR3n3AcNBJrfGqb4JQyOz1es34WBTD4IWuJvhdh2oIKwgCAvY6EfbL9%2B8j%2BmjGZfZTSWMx8lASgaxS6IQ0uPLLRpQwM0n0xrEZbgFoQJx%2B1%2Fpvb6AxeqwvLNvlv"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1c70a873daf-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 11,
  "title": "et ea vero quia laudantium autem",
  "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
} 
 </msg>
<msg timestamp="20210205 20:02:12.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.295" endtime="20210205 20:02:12.350"></status>
</kw>
<msg timestamp="20210205 20:02:12.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.293" endtime="20210205 20:02:12.350"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:12.353" endtime="20210205 20:02:12.356"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.352" endtime="20210205 20:02:12.356"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.351" endtime="20210205 20:02:12.356"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:12.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.357" endtime="20210205 20:02:12.358"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.356" endtime="20210205 20:02:12.359"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.360" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:12.360" endtime="20210205 20:02:12.360"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.431" level="INFO">${idvalue} = [11]</msg>
<status status="PASS" starttime="20210205 20:02:12.360" endtime="20210205 20:02:12.431"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:12.432" level="INFO">${responseid} = 11</msg>
<status status="PASS" starttime="20210205 20:02:12.432" endtime="20210205 20:02:12.432"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:12.433" endtime="20210205 20:02:12.433"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.434" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:12.433" endtime="20210205 20:02:12.434"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.359" endtime="20210205 20:02:12.434"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.293" endtime="20210205 20:02:12.434"></status>
</kw>
<kw name="${postid} = 12" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:12.436" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:12.436" endtime="20210205 20:02:12.437"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:12.597" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/12 
 path_url=/posts/12 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:12.597" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/12 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc16e71f53208a118b73ddeecbccee88d1612573333; expires=Mon, 08-Mar-21 01:02:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612515589', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fa-Kb6iNtCKEzLRQ8QyZ5zRPuKRNgs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '28734', 'cf-request-id': '081675715e000015d79a3ba000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=38ySM3xtGt80Yi1vwkm49YzB3rfGtvxiGLBaS8MIsmXn6KutIf5y1%2FGDVswHxmzWu2HNnoqVewZwRICF9w%2FrvOtnOws7%2FpECh33Mfu7paV%2FlXpFFt%2FsZER2mRy%2Fp"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1c89b2315d7-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 12,
  "title": "in quibusdam tempore odit est dolorem",
  "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
} 
 </msg>
<msg timestamp="20210205 20:02:12.597" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.437" endtime="20210205 20:02:12.597"></status>
</kw>
<msg timestamp="20210205 20:02:12.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.435" endtime="20210205 20:02:12.598"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:12.600" endtime="20210205 20:02:12.603"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.599" endtime="20210205 20:02:12.604"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.598" endtime="20210205 20:02:12.604"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:12.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.605" endtime="20210205 20:02:12.606"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.604" endtime="20210205 20:02:12.606"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.608" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:12.607" endtime="20210205 20:02:12.608"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.674" level="INFO">${idvalue} = [12]</msg>
<status status="PASS" starttime="20210205 20:02:12.608" endtime="20210205 20:02:12.674"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:12.675" level="INFO">${responseid} = 12</msg>
<status status="PASS" starttime="20210205 20:02:12.674" endtime="20210205 20:02:12.675"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:12.675" endtime="20210205 20:02:12.675"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.676" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:12.676" endtime="20210205 20:02:12.676"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.606" endtime="20210205 20:02:12.676"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.434" endtime="20210205 20:02:12.676"></status>
</kw>
<kw name="${postid} = 13" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:12.677" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:12.677" endtime="20210205 20:02:12.678"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:12.860" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/13 
 path_url=/posts/13 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:12.860" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/13 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dfec348e06611367e158572dc7adccc3b1612573334; expires=Mon, 08-Mar-21 01:02:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '991', 'X-Ratelimit-Reset': '1611532392', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"150-jmPMxXQIZLCEEVRunU0Zippecws"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '081675725d00000cf19c9af000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=xE8UILp9r67dtEV6kJUnwqLZk%2BqtU5Pan3mHlL1%2FeuIAxfnqKZoSjyfLM21waEeD%2B341hDIz%2Bd4ZzAuyKKx3dNjpUbNiTQEB7%2BWJJx0CK2a%2BPBh55dMnaoYL9aFE"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1ca2ab40cf1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 13,
  "title": "dolorum ut in voluptas mollitia et saepe quo animi",
  "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
} 
 </msg>
<msg timestamp="20210205 20:02:12.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.678" endtime="20210205 20:02:12.860"></status>
</kw>
<msg timestamp="20210205 20:02:12.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.677" endtime="20210205 20:02:12.861"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:12.864" endtime="20210205 20:02:12.866"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.862" endtime="20210205 20:02:12.867"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.861" endtime="20210205 20:02:12.867"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:12.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.868" endtime="20210205 20:02:12.869"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.867" endtime="20210205 20:02:12.869"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.870" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:12.870" endtime="20210205 20:02:12.871"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.940" level="INFO">${idvalue} = [13]</msg>
<status status="PASS" starttime="20210205 20:02:12.871" endtime="20210205 20:02:12.940"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:12.941" level="INFO">${responseid} = 13</msg>
<status status="PASS" starttime="20210205 20:02:12.940" endtime="20210205 20:02:12.941"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:12.941" endtime="20210205 20:02:12.942"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:12.943" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:12.942" endtime="20210205 20:02:12.943"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.869" endtime="20210205 20:02:12.943"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.676" endtime="20210205 20:02:12.943"></status>
</kw>
<kw name="${postid} = 14" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:12.945" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:12.945" endtime="20210205 20:02:12.946"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:13.122" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/14 
 path_url=/posts/14 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:13.122" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/14 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3a28bec88ce0015d26cd493e3b893a4e1612573334; expires=Mon, 08-Mar-21 01:02:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612525730', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e6-a5waiJMRxEr5D9vgRbpDZ2ofS4U"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '18333', 'cf-request-id': '081675736d00000ca5e0afe000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=snYK8sGtQ206DVZEKB%2F1TlGV3%2Bc5n96HOmXuwa6tH6C%2Fwfucnn3lGJGdqmFsfN2zPwqSrLUt%2BeDzir5HrPMoa40olfpf%2BOx3qA57c%2B2HwA%2FR30L79InIxl5uph8d"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1cbea340ca5-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 14,
  "title": "voluptatem eligendi optio",
  "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
} 
 </msg>
<msg timestamp="20210205 20:02:13.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.946" endtime="20210205 20:02:13.123"></status>
</kw>
<msg timestamp="20210205 20:02:13.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:12.943" endtime="20210205 20:02:13.124"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:13.126" endtime="20210205 20:02:13.129"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.125" endtime="20210205 20:02:13.130"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.124" endtime="20210205 20:02:13.130"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:13.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.131" endtime="20210205 20:02:13.132"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.130" endtime="20210205 20:02:13.132"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.134" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:13.133" endtime="20210205 20:02:13.134"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.209" level="INFO">${idvalue} = [14]</msg>
<status status="PASS" starttime="20210205 20:02:13.134" endtime="20210205 20:02:13.209"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:13.210" level="INFO">${responseid} = 14</msg>
<status status="PASS" starttime="20210205 20:02:13.209" endtime="20210205 20:02:13.210"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:13.210" endtime="20210205 20:02:13.211"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.212" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:13.212" endtime="20210205 20:02:13.212"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.132" endtime="20210205 20:02:13.213"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:12.943" endtime="20210205 20:02:13.213"></status>
</kw>
<kw name="${postid} = 15" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:13.215" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:13.214" endtime="20210205 20:02:13.215"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:13.381" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/15 
 path_url=/posts/15 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:13.381" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/15 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d955174d4f70b3adf6c480553a598e5711612573334; expires=Mon, 08-Mar-21 01:02:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1610900126', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"eb-g42jCAr46rCEFHt8pUWS/uASMcA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '08167573ff00003db58991d000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=rZVlfCx6SejpTWlmLtlY8p0opz5zvwPVyMiOR79Ejx4kplaHiA8d9Wc%2Fzmc2J61Ns1GLStQ71HPVjmvzZlWLoA9o3s49CND7bPKv6ro94DN7iTXLeUI0g4qXPN3C"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1ccce253db5-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 15,
  "title": "eveniet quod temporibus",
  "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
} 
 </msg>
<msg timestamp="20210205 20:02:13.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.215" endtime="20210205 20:02:13.382"></status>
</kw>
<msg timestamp="20210205 20:02:13.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.213" endtime="20210205 20:02:13.382"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:13.385" endtime="20210205 20:02:13.387"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.383" endtime="20210205 20:02:13.388"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.382" endtime="20210205 20:02:13.388"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:13.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.389" endtime="20210205 20:02:13.390"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.388" endtime="20210205 20:02:13.390"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.392" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:13.391" endtime="20210205 20:02:13.392"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.465" level="INFO">${idvalue} = [15]</msg>
<status status="PASS" starttime="20210205 20:02:13.392" endtime="20210205 20:02:13.465"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:13.466" level="INFO">${responseid} = 15</msg>
<status status="PASS" starttime="20210205 20:02:13.465" endtime="20210205 20:02:13.466"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:13.466" endtime="20210205 20:02:13.467"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.467" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:13.467" endtime="20210205 20:02:13.467"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.390" endtime="20210205 20:02:13.468"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.213" endtime="20210205 20:02:13.468"></status>
</kw>
<kw name="${postid} = 16" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:13.470" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:13.469" endtime="20210205 20:02:13.470"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:13.524" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/16 
 path_url=/posts/16 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:13.524" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/16 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d15222dd450afe72f0ad4c1cf5cb3eb4f1612573334; expires=Mon, 08-Mar-21 01:02:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612523209', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"139-Ry5LVphQL/+x/ADbFfrczHgqqDs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '18333', 'cf-request-id': '08167574ff0000e74c7c086000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=7CMwyQkA%2BKTNoU%2FwLfRmVA%2Bjypnntjr%2Bmhx4KYE7rSovuCGvki0a%2FqHdAndBBDnyBA6cfG6vwsKmm9uRfbbq%2FdJYkCiR7%2BMsupoVW%2BmPn18dO%2BRu47RBshls%2F1xH"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1ce6d72e74c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 16,
  "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
  "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
} 
 </msg>
<msg timestamp="20210205 20:02:13.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.471" endtime="20210205 20:02:13.525"></status>
</kw>
<msg timestamp="20210205 20:02:13.526" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.468" endtime="20210205 20:02:13.526"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:13.528" endtime="20210205 20:02:13.531"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.527" endtime="20210205 20:02:13.531"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.526" endtime="20210205 20:02:13.532"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:13.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.533" endtime="20210205 20:02:13.534"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.532" endtime="20210205 20:02:13.534"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.536" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:13.535" endtime="20210205 20:02:13.536"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.605" level="INFO">${idvalue} = [16]</msg>
<status status="PASS" starttime="20210205 20:02:13.536" endtime="20210205 20:02:13.605"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:13.606" level="INFO">${responseid} = 16</msg>
<status status="PASS" starttime="20210205 20:02:13.605" endtime="20210205 20:02:13.606"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:13.606" endtime="20210205 20:02:13.607"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.608" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:13.607" endtime="20210205 20:02:13.608"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.534" endtime="20210205 20:02:13.608"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.468" endtime="20210205 20:02:13.608"></status>
</kw>
<kw name="${postid} = 17" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:13.611" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:13.610" endtime="20210205 20:02:13.611"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:13.705" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/17 
 path_url=/posts/17 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:13.705" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/17 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1a8497888fa263c59aaad2153e2926d71612573334; expires=Mon, 08-Mar-21 01:02:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '989', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-Y7y9zgdEq0WndoXZmQZBsN4+z14"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '08167575b600003e03ed920000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=cVmSGqz%2FCWfd0K0npgbB3nf%2Fo3NKA%2BPsO8DixY4A8SGOjBQuV1oTRDOxAQv9MRZdu2MJxs1aZvU7hySLwbgCZebSVbyFVHSKw4kNv%2FODU2PR3jxoQalOoPMTjiqf"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1cf884d3e03-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 17,
  "title": "fugit voluptas sed molestias voluptatem provident",
  "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
} 
 </msg>
<msg timestamp="20210205 20:02:13.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.611" endtime="20210205 20:02:13.706"></status>
</kw>
<msg timestamp="20210205 20:02:13.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.609" endtime="20210205 20:02:13.706"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:13.709" endtime="20210205 20:02:13.712"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.708" endtime="20210205 20:02:13.712"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.707" endtime="20210205 20:02:13.712"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:13.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.714" endtime="20210205 20:02:13.714"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.713" endtime="20210205 20:02:13.715"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.716" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:13.716" endtime="20210205 20:02:13.716"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.785" level="INFO">${idvalue} = [17]</msg>
<status status="PASS" starttime="20210205 20:02:13.716" endtime="20210205 20:02:13.785"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:13.786" level="INFO">${responseid} = 17</msg>
<status status="PASS" starttime="20210205 20:02:13.785" endtime="20210205 20:02:13.786"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:13.786" endtime="20210205 20:02:13.787"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.788" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:13.787" endtime="20210205 20:02:13.788"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.715" endtime="20210205 20:02:13.788"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.609" endtime="20210205 20:02:13.788"></status>
</kw>
<kw name="${postid} = 18" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:13.790" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:13.789" endtime="20210205 20:02:13.790"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:13.882" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/18 
 path_url=/posts/18 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:13.882" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/18 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3b951482d73eb23bb957f905dda249311612573335; expires=Mon, 08-Mar-21 01:02:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d6-gBDS8x9CZAqgdjWUPWV0jWIQ7ps"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '081675765f0000f031dd8fc000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=oPumdjmubhk4ZvDjabPDwM%2BW4Lj4%2FKJYA0LeQBugdPPAgDz2xxjQJ0C%2B8GqJv6B2HZcgSIq1D862Sgt3uaWv3qaQhOBZd4VNgfeTLEvmWnJ2b9aWautzjQ%2BKsg3q"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1d09ef0f031-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 18,
  "title": "voluptate et itaque vero tempora molestiae",
  "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
} 
 </msg>
<msg timestamp="20210205 20:02:13.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.791" endtime="20210205 20:02:13.883"></status>
</kw>
<msg timestamp="20210205 20:02:13.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.788" endtime="20210205 20:02:13.883"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:13.886" endtime="20210205 20:02:13.889"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.885" endtime="20210205 20:02:13.889"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.884" endtime="20210205 20:02:13.890"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:13.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.892" endtime="20210205 20:02:13.892"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.890" endtime="20210205 20:02:13.892"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.894" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:13.893" endtime="20210205 20:02:13.894"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.965" level="INFO">${idvalue} = [18]</msg>
<status status="PASS" starttime="20210205 20:02:13.894" endtime="20210205 20:02:13.965"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:13.966" level="INFO">${responseid} = 18</msg>
<status status="PASS" starttime="20210205 20:02:13.965" endtime="20210205 20:02:13.966"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:13.966" endtime="20210205 20:02:13.967"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:13.968" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:13.968" endtime="20210205 20:02:13.968"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.893" endtime="20210205 20:02:13.968"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.788" endtime="20210205 20:02:13.968"></status>
</kw>
<kw name="${postid} = 19" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:13.970" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:13.970" endtime="20210205 20:02:13.971"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:14.027" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/19 
 path_url=/posts/19 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:14.028" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/19 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df049dca9c0c65ebfb074e21e181cdde21612573335; expires=Mon, 08-Mar-21 01:02:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '987', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f5-6MONAVAj01S9sHCgIVhhm8kT8bk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '08167576f700003dc0500d5000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=BUbBiRmrSE3HFWmNBg6Yb3IxxWMfXfHrzI%2Fc%2FKpct2HOlfJI21MaUqxfiP5KpYYQ%2BQYjsOLi2g3W03XTioNJn1Ov75Bk8IY0qpIfuj%2FCyE5pY25vra5uYw6i2lbr"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1d18d393dc0-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 19,
  "title": "adipisci placeat illum aut reiciendis qui",
  "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
} 
 </msg>
<msg timestamp="20210205 20:02:14.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.971" endtime="20210205 20:02:14.028"></status>
</kw>
<msg timestamp="20210205 20:02:14.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:13.969" endtime="20210205 20:02:14.029"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:14.031" endtime="20210205 20:02:14.034"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.030" endtime="20210205 20:02:14.034"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.029" endtime="20210205 20:02:14.035"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:14.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.036" endtime="20210205 20:02:14.037"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.035" endtime="20210205 20:02:14.037"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.039" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:14.038" endtime="20210205 20:02:14.039"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.110" level="INFO">${idvalue} = [19]</msg>
<status status="PASS" starttime="20210205 20:02:14.039" endtime="20210205 20:02:14.110"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:14.111" level="INFO">${responseid} = 19</msg>
<status status="PASS" starttime="20210205 20:02:14.111" endtime="20210205 20:02:14.111"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:14.112" endtime="20210205 20:02:14.112"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.113" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:14.113" endtime="20210205 20:02:14.113"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.037" endtime="20210205 20:02:14.113"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:13.969" endtime="20210205 20:02:14.114"></status>
</kw>
<kw name="${postid} = 20" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:14.116" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:14.115" endtime="20210205 20:02:14.116"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:14.222" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/20 
 path_url=/posts/20 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:14.222" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/20 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d08fcdf278c4a0b06ac461c801246dd031612573335; expires=Mon, 08-Mar-21 01:02:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611843621', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-B2D4HCXMgAW5NzE2tV3HVA4JP6M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '08167577b700000cb93719e000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=hVigEMjMFWjJxH9o%2BKg5JRxYqlgrnarHI9W6vcoqvo1%2BdVMFxf3r9qdySnPHd%2BhQp8ld720Z209NRaCRCqzeoZ5QMem0FgvsD%2Bv66vaa%2FEVVCrDFtb%2BQia6%2Fi5%2Fx"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1d2beea0cb9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 20,
  "title": "doloribus ad provident suscipit at",
  "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
} 
 </msg>
<msg timestamp="20210205 20:02:14.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.116" endtime="20210205 20:02:14.223"></status>
</kw>
<msg timestamp="20210205 20:02:14.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.114" endtime="20210205 20:02:14.223"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:14.226" endtime="20210205 20:02:14.229"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.225" endtime="20210205 20:02:14.229"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.224" endtime="20210205 20:02:14.229"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:14.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.231" endtime="20210205 20:02:14.231"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.230" endtime="20210205 20:02:14.232"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.233" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:14.233" endtime="20210205 20:02:14.233"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.298" level="INFO">${idvalue} = [20]</msg>
<status status="PASS" starttime="20210205 20:02:14.233" endtime="20210205 20:02:14.298"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:14.299" level="INFO">${responseid} = 20</msg>
<status status="PASS" starttime="20210205 20:02:14.299" endtime="20210205 20:02:14.300"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:14.300" endtime="20210205 20:02:14.300"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.301" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:14.301" endtime="20210205 20:02:14.301"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.232" endtime="20210205 20:02:14.302"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.114" endtime="20210205 20:02:14.302"></status>
</kw>
<kw name="${postid} = 21" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:14.304" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:14.303" endtime="20210205 20:02:14.304"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:14.472" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/21 
 path_url=/posts/21 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:14.473" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/21 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbfc879f53f6a2e0fd29c9a81c27584ba1612573335; expires=Mon, 08-Mar-21 01:02:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612546312', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"117-mvqE9pMkp/BxthnOAO6lQoihz2M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '27062', 'cf-request-id': '08167578ad00001546e3165000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=RjHZQpevyrHHfBC2OdAeSu3%2FUO5wbouxECenuNwVsW54KHIlbCfBUYxRC08sxYmEQMhRx%2FSD9EhCQRZQ9bQUKAP6OAlMzIAxkFGCFli3njgtlCKDq9bv5RaOCbgP"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1d44d4e1546-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 21,
  "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
  "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
} 
 </msg>
<msg timestamp="20210205 20:02:14.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.305" endtime="20210205 20:02:14.473"></status>
</kw>
<msg timestamp="20210205 20:02:14.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.302" endtime="20210205 20:02:14.474"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:14.476" endtime="20210205 20:02:14.479"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.475" endtime="20210205 20:02:14.479"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.474" endtime="20210205 20:02:14.479"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:14.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.481" endtime="20210205 20:02:14.481"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.480" endtime="20210205 20:02:14.482"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.483" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:14.483" endtime="20210205 20:02:14.483"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.554" level="INFO">${idvalue} = [21]</msg>
<status status="PASS" starttime="20210205 20:02:14.483" endtime="20210205 20:02:14.554"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:14.555" level="INFO">${responseid} = 21</msg>
<status status="PASS" starttime="20210205 20:02:14.555" endtime="20210205 20:02:14.555"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:14.556" endtime="20210205 20:02:14.556"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.557" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:14.556" endtime="20210205 20:02:14.557"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.482" endtime="20210205 20:02:14.557"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.302" endtime="20210205 20:02:14.557"></status>
</kw>
<kw name="${postid} = 22" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:14.559" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:14.559" endtime="20210205 20:02:14.560"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:14.703" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/22 
 path_url=/posts/22 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:14.703" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/22 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da296a32771cd70f6c2eff1f1d23aaa2a1612573335; expires=Mon, 08-Mar-21 01:02:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612523209', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e6-PXw6heQCz2Yay/FrkPvuks+op8Y"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '18333', 'cf-request-id': '081675793d0000e6c870862000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=dbDC9ucncJNfJ69eVNQKuyWntxlLvPZwGNiVPYHaIDA0Wx6mSMiEOxg2UTNEngm%2FnYvbtKl%2FHzgvWkYFqUAJvvLYEzRKokXuAuh13FdwJjozZ%2FgDdGKCX8xxji5i"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1d52948e6c8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 22,
  "title": "dolor sint quo a velit explicabo quia nam",
  "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
} 
 </msg>
<msg timestamp="20210205 20:02:14.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.560" endtime="20210205 20:02:14.704"></status>
</kw>
<msg timestamp="20210205 20:02:14.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.558" endtime="20210205 20:02:14.704"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:14.707" endtime="20210205 20:02:14.710"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.706" endtime="20210205 20:02:14.710"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.705" endtime="20210205 20:02:14.710"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:14.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.712" endtime="20210205 20:02:14.712"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.711" endtime="20210205 20:02:14.713"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.714" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:14.714" endtime="20210205 20:02:14.714"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.782" level="INFO">${idvalue} = [22]</msg>
<status status="PASS" starttime="20210205 20:02:14.714" endtime="20210205 20:02:14.782"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:14.783" level="INFO">${responseid} = 22</msg>
<status status="PASS" starttime="20210205 20:02:14.782" endtime="20210205 20:02:14.783"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:14.783" endtime="20210205 20:02:14.784"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.784" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:14.784" endtime="20210205 20:02:14.784"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.713" endtime="20210205 20:02:14.785"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.557" endtime="20210205 20:02:14.785"></status>
</kw>
<kw name="${postid} = 23" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:14.787" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:14.786" endtime="20210205 20:02:14.787"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:14.840" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/23 
 path_url=/posts/23 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:14.840" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/23 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dac8c6f749a286dc3dcc6fb7b2b6398fd1612573336; expires=Mon, 08-Mar-21 01:02:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-2cknVyBv5gWr1s/pxvkFBL7N/38"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '0816757a210000ccf6e48ad000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=2lxpUOu1IdGCOkccsLhzfQgAhAlLEGgQzPE3MeGamWKzFR2nzEOSvjpctKXk17cZCZo1ETgLsS7oQBxbodycLQAmrPIBdcOqn%2FAkUpBGnzjHMDjzIXc1h4SkRlZF"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1d69df2ccf6-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 23,
  "title": "maxime id vitae nihil numquam",
  "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
} 
 </msg>
<msg timestamp="20210205 20:02:14.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.788" endtime="20210205 20:02:14.841"></status>
</kw>
<msg timestamp="20210205 20:02:14.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.785" endtime="20210205 20:02:14.842"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:14.844" endtime="20210205 20:02:14.847"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.843" endtime="20210205 20:02:14.847"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.842" endtime="20210205 20:02:14.847"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:14.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.849" endtime="20210205 20:02:14.850"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.848" endtime="20210205 20:02:14.850"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.851" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:14.851" endtime="20210205 20:02:14.851"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.932" level="INFO">${idvalue} = [23]</msg>
<status status="PASS" starttime="20210205 20:02:14.852" endtime="20210205 20:02:14.933"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:14.934" level="INFO">${responseid} = 23</msg>
<status status="PASS" starttime="20210205 20:02:14.933" endtime="20210205 20:02:14.934"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:14.934" endtime="20210205 20:02:14.934"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:14.935" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:14.935" endtime="20210205 20:02:14.935"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.850" endtime="20210205 20:02:14.936"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.785" endtime="20210205 20:02:14.936"></status>
</kw>
<kw name="${postid} = 24" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:14.937" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:14.937" endtime="20210205 20:02:14.938"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:15.025" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/24 
 path_url=/posts/24 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:15.026" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/24 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dddd1361cebc61ccab73e27c89e202c951612573336; expires=Mon, 08-Mar-21 01:02:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f3-ifVym0pMyH3QE/zD+bJosWWZ/xY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '0816757ad20000f001c7b9a000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=cwqQv7eMWJrDWbjhtDEGkT3UKjZCX%2Bx1DaaA0ZylP3D7omjKq4bE6TFotRzdvM6x0WCY3iF4JQpuAnUBwEzyPgVcKi63DVuKQeeKerApQxf72uz6y5AuieyMzHHk"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1d7b823f001-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 24,
  "title": "autem hic labore sunt dolores incidunt",
  "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
} 
 </msg>
<msg timestamp="20210205 20:02:15.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.938" endtime="20210205 20:02:15.026"></status>
</kw>
<msg timestamp="20210205 20:02:15.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:14.936" endtime="20210205 20:02:15.027"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:15.029" endtime="20210205 20:02:15.032"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.028" endtime="20210205 20:02:15.032"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.027" endtime="20210205 20:02:15.033"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:15.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.034" endtime="20210205 20:02:15.035"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.033" endtime="20210205 20:02:15.035"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.036" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:15.036" endtime="20210205 20:02:15.036"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.104" level="INFO">${idvalue} = [24]</msg>
<status status="PASS" starttime="20210205 20:02:15.037" endtime="20210205 20:02:15.104"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:15.105" level="INFO">${responseid} = 24</msg>
<status status="PASS" starttime="20210205 20:02:15.104" endtime="20210205 20:02:15.105"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:15.105" endtime="20210205 20:02:15.105"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.105" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:15.105" endtime="20210205 20:02:15.105"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.035" endtime="20210205 20:02:15.106"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:14.936" endtime="20210205 20:02:15.106"></status>
</kw>
<kw name="${postid} = 25" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:15.107" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:15.107" endtime="20210205 20:02:15.107"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:15.267" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/25 
 path_url=/posts/25 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:15.267" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/25 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2762e4b4fc85d848127beac5b31492401612573336; expires=Mon, 08-Mar-21 01:02:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '982', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ed-5nZjsj4lJ1lY/Chj2v9voa/MRVw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '0816757bcd0000efe9a3945000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=GNRr%2BTcthW8spKKnP5UXyBufYTx5bWKO9Qxb6ixLFdeUqnPVADf%2FH9NesHcjvSfQaGydiqQ4%2BmhSC6q78EEXnPs8jyH8ZMNvRZ6qdqQ6O81xd%2FouYm6aytUZkdMg"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1d94a67efe9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 25,
  "title": "rem alias distinctio quo quis",
  "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
} 
 </msg>
<msg timestamp="20210205 20:02:15.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.107" endtime="20210205 20:02:15.268"></status>
</kw>
<msg timestamp="20210205 20:02:15.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.106" endtime="20210205 20:02:15.269"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:15.271" endtime="20210205 20:02:15.274"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.270" endtime="20210205 20:02:15.274"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.269" endtime="20210205 20:02:15.274"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:15.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.276" endtime="20210205 20:02:15.276"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.275" endtime="20210205 20:02:15.277"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.278" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:15.278" endtime="20210205 20:02:15.278"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.347" level="INFO">${idvalue} = [25]</msg>
<status status="PASS" starttime="20210205 20:02:15.278" endtime="20210205 20:02:15.347"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:15.348" level="INFO">${responseid} = 25</msg>
<status status="PASS" starttime="20210205 20:02:15.347" endtime="20210205 20:02:15.348"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:15.348" endtime="20210205 20:02:15.349"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.350" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:15.349" endtime="20210205 20:02:15.350"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.277" endtime="20210205 20:02:15.350"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.106" endtime="20210205 20:02:15.350"></status>
</kw>
<kw name="${postid} = 26" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:15.353" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:15.352" endtime="20210205 20:02:15.353"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:15.527" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/26 
 path_url=/posts/26 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:15.527" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/26 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0bae7efe16bd6f1d864a23d483c030711612573336; expires=Mon, 08-Mar-21 01:02:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"103-nvdlqF1XCHpBd3+QuyEzLJ0DKRU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '0816757cd30000efd41f964000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ZbhIfXW81FWbP5%2B64N%2FNQ%2FmkeGNjPQXTYpW%2Blfrpynw8diI0Nf02Ui3y1i42h4JtHpzr2hKTviqUj02Vko1XyqkFBPVK2l%2Fl499Izn1wjw0fTR3aKY5oIKOGSU%2F7"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1dae8a5efd4-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 26,
  "title": "est et quae odit qui non",
  "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
} 
 </msg>
<msg timestamp="20210205 20:02:15.528" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.354" endtime="20210205 20:02:15.528"></status>
</kw>
<msg timestamp="20210205 20:02:15.528" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.350" endtime="20210205 20:02:15.528"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:15.531" endtime="20210205 20:02:15.534"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.530" endtime="20210205 20:02:15.534"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.529" endtime="20210205 20:02:15.535"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:15.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.536" endtime="20210205 20:02:15.537"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.535" endtime="20210205 20:02:15.537"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.538" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:15.538" endtime="20210205 20:02:15.538"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.585" level="INFO">${idvalue} = [26]</msg>
<status status="PASS" starttime="20210205 20:02:15.539" endtime="20210205 20:02:15.585"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:15.586" level="INFO">${responseid} = 26</msg>
<status status="PASS" starttime="20210205 20:02:15.586" endtime="20210205 20:02:15.586"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:15.586" endtime="20210205 20:02:15.587"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.587" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:15.587" endtime="20210205 20:02:15.587"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.537" endtime="20210205 20:02:15.587"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.350" endtime="20210205 20:02:15.587"></status>
</kw>
<kw name="${postid} = 27" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:15.589" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:15.588" endtime="20210205 20:02:15.589"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:15.646" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/27 
 path_url=/posts/27 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:15.646" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/27 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9996ee0dadbeaae90d66e017df336a0c1612573336; expires=Mon, 08-Mar-21 01:02:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-qKM2azhXtnWXfnWclKp4KhCN+BA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '0816757d4400009216c70ed000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=JI9KMjVqcFI%2B4r5%2FT0cCJyNzlHID3DWmQkzuDvkB482vhzb8%2B6V2w%2B%2BPkUmqBFzMbrWQYMPSsCzyXyfMFPJvxTuGoi2E27bFRVNHnMw9Ap3kE0M7cIoB3luJyovn"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1db9a589216-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 27,
  "title": "quasi id et eos tenetur aut quo autem",
  "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
} 
 </msg>
<msg timestamp="20210205 20:02:15.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.589" endtime="20210205 20:02:15.647"></status>
</kw>
<msg timestamp="20210205 20:02:15.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.588" endtime="20210205 20:02:15.648"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:15.650" endtime="20210205 20:02:15.653"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.649" endtime="20210205 20:02:15.653"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.648" endtime="20210205 20:02:15.654"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:15.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.655" endtime="20210205 20:02:15.656"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.654" endtime="20210205 20:02:15.656"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.657" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:15.657" endtime="20210205 20:02:15.657"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.729" level="INFO">${idvalue} = [27]</msg>
<status status="PASS" starttime="20210205 20:02:15.658" endtime="20210205 20:02:15.730"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:15.730" level="INFO">${responseid} = 27</msg>
<status status="PASS" starttime="20210205 20:02:15.730" endtime="20210205 20:02:15.731"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:15.731" endtime="20210205 20:02:15.731"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.731" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:15.731" endtime="20210205 20:02:15.731"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.656" endtime="20210205 20:02:15.732"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.588" endtime="20210205 20:02:15.732"></status>
</kw>
<kw name="${postid} = 28" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:15.733" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:15.732" endtime="20210205 20:02:15.733"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:15.809" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/28 
 path_url=/posts/28 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:15.810" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/28 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db1a5e5769c339be17749b3166e7aa08b1612573337; expires=Mon, 08-Mar-21 01:02:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f9-AEZ+sXaihdyQslUCCBcxh7QHSIc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '95', 'cf-request-id': '0816757ded00003db44d38d000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=P5IfG0pVdP%2B9YFMvCh%2FGtDHRdEisymp%2BuRi4xmNuX0ZVb32vMrg4AISoq3X2pMmJThFub74zOcjWpAzc%2FHq7x9ICO%2FegwkfAlFXRtVd7g4G2D9T1RElgDr4QFrUS"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1dcabae3db4-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 28,
  "title": "delectus ullam et corporis nulla voluptas sequi",
  "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
} 
 </msg>
<msg timestamp="20210205 20:02:15.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.733" endtime="20210205 20:02:15.810"></status>
</kw>
<msg timestamp="20210205 20:02:15.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.732" endtime="20210205 20:02:15.811"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:15.813" endtime="20210205 20:02:15.816"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.812" endtime="20210205 20:02:15.816"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.811" endtime="20210205 20:02:15.816"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:15.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.818" endtime="20210205 20:02:15.818"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.817" endtime="20210205 20:02:15.819"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.820" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:15.820" endtime="20210205 20:02:15.820"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.889" level="INFO">${idvalue} = [28]</msg>
<status status="PASS" starttime="20210205 20:02:15.821" endtime="20210205 20:02:15.889"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:15.890" level="INFO">${responseid} = 28</msg>
<status status="PASS" starttime="20210205 20:02:15.889" endtime="20210205 20:02:15.890"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:15.890" endtime="20210205 20:02:15.891"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:15.891" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:15.891" endtime="20210205 20:02:15.891"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.819" endtime="20210205 20:02:15.892"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.732" endtime="20210205 20:02:15.892"></status>
</kw>
<kw name="${postid} = 29" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:15.893" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:15.893" endtime="20210205 20:02:15.894"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:16.056" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/29 
 path_url=/posts/29 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:16.056" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/29 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d75c1c2cb7c70d07f05d33b5cd609ae3c1612573337; expires=Mon, 08-Mar-21 01:02:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '978', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-s0ld/Dvp7Q01gQ2gs/shmGjHA3Q"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '94', 'cf-request-id': '0816757ee500000c9d7e251000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=EaMemHaGtKvTf3bKw86TUK4I%2Fz%2BCNuLa964h%2B9i5zRwZN3sGS7w%2FhXQLakYZCilQdP4bDwVU0I2NIM6tHPCjG3W3PDyU%2FG1XsZAbqyPo13pfQwP1KBP%2F3%2FaJ1y9W"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1de3f6c0c9d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 29,
  "title": "iusto eius quod necessitatibus culpa ea",
  "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
} 
 </msg>
<msg timestamp="20210205 20:02:16.057" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.894" endtime="20210205 20:02:16.057"></status>
</kw>
<msg timestamp="20210205 20:02:16.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:15.892" endtime="20210205 20:02:16.058"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:16.060" endtime="20210205 20:02:16.063"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.059" endtime="20210205 20:02:16.063"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.058" endtime="20210205 20:02:16.064"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:16.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.066" endtime="20210205 20:02:16.066"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.064" endtime="20210205 20:02:16.066"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.067" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:16.067" endtime="20210205 20:02:16.067"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.136" level="INFO">${idvalue} = [29]</msg>
<status status="PASS" starttime="20210205 20:02:16.068" endtime="20210205 20:02:16.136"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:16.137" level="INFO">${responseid} = 29</msg>
<status status="PASS" starttime="20210205 20:02:16.136" endtime="20210205 20:02:16.137"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:16.138" endtime="20210205 20:02:16.138"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.139" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:16.139" endtime="20210205 20:02:16.139"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.066" endtime="20210205 20:02:16.139"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:15.892" endtime="20210205 20:02:16.139"></status>
</kw>
<kw name="${postid} = 30" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:16.141" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:16.141" endtime="20210205 20:02:16.142"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:16.296" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/30 
 path_url=/posts/30 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:16.296" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/30 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcf2fcaf1cd97abda8d1b6f1174aeab131612573337; expires=Mon, 08-Mar-21 01:02:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '991', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-p/fED6+/tICtAVNeMV6EIhtgIes"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '0816757f7100003e284e283000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=8oYme4CqeWvOSFi2Hz4reiWgnZl7SbWXVgQUvCH3pyrxfg7wRSAw9ksSJTUELKtlnzzGlyRyuxKPNUx99z0hKxObNrYIOdLZPbZNLthtHWRNDJFV8WyMHUC2lBcO"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1df181e3e28-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 30,
  "title": "a quo magni similique perferendis",
  "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
} 
 </msg>
<msg timestamp="20210205 20:02:16.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.142" endtime="20210205 20:02:16.297"></status>
</kw>
<msg timestamp="20210205 20:02:16.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.140" endtime="20210205 20:02:16.297"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:16.300" endtime="20210205 20:02:16.303"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.299" endtime="20210205 20:02:16.303"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.298" endtime="20210205 20:02:16.303"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:16.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.305" endtime="20210205 20:02:16.305"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.304" endtime="20210205 20:02:16.306"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.307" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:16.307" endtime="20210205 20:02:16.307"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.379" level="INFO">${idvalue} = [30]</msg>
<status status="PASS" starttime="20210205 20:02:16.307" endtime="20210205 20:02:16.379"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:16.380" level="INFO">${responseid} = 30</msg>
<status status="PASS" starttime="20210205 20:02:16.379" endtime="20210205 20:02:16.380"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:16.380" endtime="20210205 20:02:16.381"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.382" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:16.381" endtime="20210205 20:02:16.382"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.306" endtime="20210205 20:02:16.382"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.140" endtime="20210205 20:02:16.382"></status>
</kw>
<kw name="${postid} = 31" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:16.384" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:16.383" endtime="20210205 20:02:16.384"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:16.439" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/31 
 path_url=/posts/31 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:16.439" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/31 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d14364a4774a55f91791681e2ad6d66aa1612573337; expires=Mon, 08-Mar-21 01:02:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '992', 'X-Ratelimit-Reset': '1610900126', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"114-fvaKvcE5R6RW/jKcF4ij0mXJXnI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '081675805f0000e75cf1ac5000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Zr4xZqSsn%2Fze1bKwRtXOjQNp%2BVZKdhSkFTobya9A%2FGiuUTLcAByO%2FFLb6AYJ6l5z%2BF6kOTQ2Zai1vbaGeXol8ypltOwWLnup09iVG0hJKNsJtivz85yOhnnaEJlV"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1e09d22e75c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 31,
  "title": "ullam ut quidem id aut vel consequuntur",
  "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
} 
 </msg>
<msg timestamp="20210205 20:02:16.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.385" endtime="20210205 20:02:16.440"></status>
</kw>
<msg timestamp="20210205 20:02:16.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.382" endtime="20210205 20:02:16.440"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:16.443" endtime="20210205 20:02:16.446"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.442" endtime="20210205 20:02:16.446"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.441" endtime="20210205 20:02:16.446"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:16.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.448" endtime="20210205 20:02:16.448"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.446" endtime="20210205 20:02:16.449"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.450" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:16.450" endtime="20210205 20:02:16.450"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.568" level="INFO">${idvalue} = [31]</msg>
<status status="PASS" starttime="20210205 20:02:16.450" endtime="20210205 20:02:16.568"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:16.569" level="INFO">${responseid} = 31</msg>
<status status="PASS" starttime="20210205 20:02:16.568" endtime="20210205 20:02:16.569"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:16.569" endtime="20210205 20:02:16.570"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.570" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:16.570" endtime="20210205 20:02:16.570"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.449" endtime="20210205 20:02:16.571"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.382" endtime="20210205 20:02:16.571"></status>
</kw>
<kw name="${postid} = 32" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:16.573" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:16.572" endtime="20210205 20:02:16.573"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:16.625" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/32 
 path_url=/posts/32 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:16.625" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/32 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2791869d733920dcd66bf85579bdedc71612573337; expires=Mon, 08-Mar-21 01:02:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '975', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"118-gU6x6yKuGnLxOVfx4b/csDm80xc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '081675811b00003dc7fa216000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=nMviQfqq8PETCJh%2Bt76BQXzB%2Bf4VEHi9YWvCDzt6VAPk1oUgfFCAs3VX3JLl5bIu7yo7A5sHarQjNifE%2BUNhiX0n%2F4GYlIAwDAoxyaeJXt%2BI4F2cEDJj%2BtPlj%2BVb"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1e1caa43dc7-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 32,
  "title": "doloremque illum aliquid sunt",
  "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
} 
 </msg>
<msg timestamp="20210205 20:02:16.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.573" endtime="20210205 20:02:16.626"></status>
</kw>
<msg timestamp="20210205 20:02:16.627" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.571" endtime="20210205 20:02:16.627"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:16.629" endtime="20210205 20:02:16.632"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.628" endtime="20210205 20:02:16.632"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.627" endtime="20210205 20:02:16.632"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:16.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.634" endtime="20210205 20:02:16.634"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.633" endtime="20210205 20:02:16.635"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.636" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:16.636" endtime="20210205 20:02:16.636"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.705" level="INFO">${idvalue} = [32]</msg>
<status status="PASS" starttime="20210205 20:02:16.636" endtime="20210205 20:02:16.705"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:16.706" level="INFO">${responseid} = 32</msg>
<status status="PASS" starttime="20210205 20:02:16.705" endtime="20210205 20:02:16.706"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:16.706" endtime="20210205 20:02:16.707"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.707" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:16.707" endtime="20210205 20:02:16.707"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.635" endtime="20210205 20:02:16.708"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.571" endtime="20210205 20:02:16.708"></status>
</kw>
<kw name="${postid} = 33" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:16.709" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:16.709" endtime="20210205 20:02:16.710"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:16.871" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/33 
 path_url=/posts/33 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:16.871" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/33 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d924d3af45bacc9ac79f5d20fc698ee101612573338; expires=Mon, 08-Mar-21 01:02:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '988', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e4-eJS5AAgYswVFXcpPGUc/6yS0JGs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '08167582100000c5c8c7906000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=WwO%2B%2BceEobHKEwzIvfHsbl59hTG%2Fic7Y8BsOnv7GtJVSU%2BaqCf9%2F%2FO6ywNntc%2Fob9vYpAyk24rqhmqbXpiu2lIKkQQyMT%2FzhFabSkBIibaO%2FbJkx0BLPw3%2B8cGmM"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1e34a87c5c8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 33,
  "title": "qui explicabo molestiae dolorem",
  "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
} 
 </msg>
<msg timestamp="20210205 20:02:16.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.710" endtime="20210205 20:02:16.872"></status>
</kw>
<msg timestamp="20210205 20:02:16.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.708" endtime="20210205 20:02:16.873"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:16.875" endtime="20210205 20:02:16.878"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.874" endtime="20210205 20:02:16.878"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.873" endtime="20210205 20:02:16.878"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:16.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.880" endtime="20210205 20:02:16.880"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.879" endtime="20210205 20:02:16.881"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.882" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:16.882" endtime="20210205 20:02:16.882"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.936" level="INFO">${idvalue} = [33]</msg>
<status status="PASS" starttime="20210205 20:02:16.882" endtime="20210205 20:02:16.936"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:16.937" level="INFO">${responseid} = 33</msg>
<status status="PASS" starttime="20210205 20:02:16.936" endtime="20210205 20:02:16.937"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:16.937" endtime="20210205 20:02:16.938"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:16.938" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:16.938" endtime="20210205 20:02:16.939"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.881" endtime="20210205 20:02:16.939"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.708" endtime="20210205 20:02:16.939"></status>
</kw>
<kw name="${postid} = 34" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:16.941" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:16.941" endtime="20210205 20:02:16.941"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:17.092" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/34 
 path_url=/posts/34 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:17.092" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/34 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3bb54d9da145c992b201313ebc61311a1612573338; expires=Mon, 08-Mar-21 01:02:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '973', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"125-Vy2bCExpJwbgL2QLF7SvYE5QZaQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '081675828900003dfe9b3f4000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=kVyRz8nmYVvhustWQ%2BlYWwhTboW5xbYv20vg4clXKXk9smVPTkKuo0koGoA%2BNwA0vhIuxGL%2FG4xQZzGoZ3sp8SXNoT%2FsRlCuKBKuD97MpY4zdoslt%2F12iLwm8Os4"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1e40db33dfe-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 34,
  "title": "magnam ut rerum iure",
  "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
} 
 </msg>
<msg timestamp="20210205 20:02:17.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.942" endtime="20210205 20:02:17.093"></status>
</kw>
<msg timestamp="20210205 20:02:17.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:16.940" endtime="20210205 20:02:17.094"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:17.096" endtime="20210205 20:02:17.099"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.095" endtime="20210205 20:02:17.099"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.094" endtime="20210205 20:02:17.100"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:17.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.101" endtime="20210205 20:02:17.102"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.100" endtime="20210205 20:02:17.102"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.103" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:17.103" endtime="20210205 20:02:17.103"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.172" level="INFO">${idvalue} = [34]</msg>
<status status="PASS" starttime="20210205 20:02:17.104" endtime="20210205 20:02:17.172"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:17.173" level="INFO">${responseid} = 34</msg>
<status status="PASS" starttime="20210205 20:02:17.172" endtime="20210205 20:02:17.173"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:17.173" endtime="20210205 20:02:17.174"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.174" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:17.174" endtime="20210205 20:02:17.174"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.102" endtime="20210205 20:02:17.175"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:16.939" endtime="20210205 20:02:17.175"></status>
</kw>
<kw name="${postid} = 35" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:17.177" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:17.176" endtime="20210205 20:02:17.177"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:17.226" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/35 
 path_url=/posts/35 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:17.226" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/35 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d41812027dd4afe2da84d0829416bd6291612573338; expires=Mon, 08-Mar-21 01:02:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611536052', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11b-iEiJpVAW3iKhqKkCM+WpQc2jSXM"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '08167583770000e74c4eabe000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=bOZlEpWMViS17kBODJ2HTE1wlzmpUgfm%2FLSwRTMaR3jTY%2B4Z0Osx0RLd9jaYb6vAW%2FfIDBeaqEimucwej7YzZN3YScZ78D4cXfmC3Xj5hFO105kqURoRJM%2FbbtFJ"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1e58aede74c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 35,
  "title": "id nihil consequatur molestias animi provident",
  "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
} 
 </msg>
<msg timestamp="20210205 20:02:17.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.178" endtime="20210205 20:02:17.227"></status>
</kw>
<msg timestamp="20210205 20:02:17.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.175" endtime="20210205 20:02:17.227"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:17.230" endtime="20210205 20:02:17.233"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.229" endtime="20210205 20:02:17.233"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.228" endtime="20210205 20:02:17.233"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:17.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.235" endtime="20210205 20:02:17.235"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.234" endtime="20210205 20:02:17.236"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.237" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:17.237" endtime="20210205 20:02:17.237"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.306" level="INFO">${idvalue} = [35]</msg>
<status status="PASS" starttime="20210205 20:02:17.238" endtime="20210205 20:02:17.306"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:17.307" level="INFO">${responseid} = 35</msg>
<status status="PASS" starttime="20210205 20:02:17.307" endtime="20210205 20:02:17.307"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:17.308" endtime="20210205 20:02:17.308"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.309" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:17.308" endtime="20210205 20:02:17.309"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.236" endtime="20210205 20:02:17.309"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.175" endtime="20210205 20:02:17.309"></status>
</kw>
<kw name="${postid} = 36" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:17.311" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:17.310" endtime="20210205 20:02:17.312"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:17.424" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/36 
 path_url=/posts/36 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:17.424" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/36 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db0861eff74ac136b4ea5ce77d8ce44a61612573338; expires=Mon, 08-Mar-21 01:02:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '971', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"137-0d4vuWkf3JGVhfhGGDlsOUqEBTg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '081675843a000015772e8e7000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=XZa1Xtq9UjxnUDfMQJtE4JotIuKBiWPAqu2gUFvWvF%2BZZqp145pURj5WdVxH2AYpuj1U2bfakQ2V0Z5lHMzQ%2BeA%2FlQ3Yauw7AWB8JOBwl5GjD%2BGwADLAPaRcgyW3"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1e6ca201577-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 36,
  "title": "fuga nam accusamus voluptas reiciendis itaque",
  "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
} 
 </msg>
<msg timestamp="20210205 20:02:17.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.312" endtime="20210205 20:02:17.425"></status>
</kw>
<msg timestamp="20210205 20:02:17.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.310" endtime="20210205 20:02:17.426"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:17.428" endtime="20210205 20:02:17.431"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.427" endtime="20210205 20:02:17.432"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.426" endtime="20210205 20:02:17.432"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:17.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.434" endtime="20210205 20:02:17.434"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.433" endtime="20210205 20:02:17.435"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.436" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:17.436" endtime="20210205 20:02:17.436"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.515" level="INFO">${idvalue} = [36]</msg>
<status status="PASS" starttime="20210205 20:02:17.436" endtime="20210205 20:02:17.516"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:17.516" level="INFO">${responseid} = 36</msg>
<status status="PASS" starttime="20210205 20:02:17.516" endtime="20210205 20:02:17.516"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:17.517" endtime="20210205 20:02:17.517"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.517" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:17.517" endtime="20210205 20:02:17.517"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.435" endtime="20210205 20:02:17.518"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.309" endtime="20210205 20:02:17.518"></status>
</kw>
<kw name="${postid} = 37" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:17.519" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:17.519" endtime="20210205 20:02:17.519"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:17.668" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/37 
 path_url=/posts/37 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:17.668" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/37 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d23116627eed429407a0a5b446451a3751612573338; expires=Mon, 08-Mar-21 01:02:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '969', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10d-xivyKLJTyyTwJlVChjsxbkyN93k"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '92', 'cf-request-id': '081675852d0000f0394c963000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=XkURhoGJWdNLS%2BC5nS8E3aP2w3deluMwv2hhnSYqfeUI1SvKTSrVVpx7yMIYR7sR%2FIXEJ2q9DmA4ALSa5nnXEwzodyrG%2B2YTjV%2F5d15QPq6o5wTKGTtfBQRgI0Hc"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1e84a31f039-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 37,
  "title": "provident vel ut sit ratione est",
  "body": "debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nvoluptates omnis consequatur aut enim officiis in quam qui"
} 
 </msg>
<msg timestamp="20210205 20:02:17.669" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.520" endtime="20210205 20:02:17.669"></status>
</kw>
<msg timestamp="20210205 20:02:17.669" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.518" endtime="20210205 20:02:17.669"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:17.672" endtime="20210205 20:02:17.675"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.670" endtime="20210205 20:02:17.675"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.670" endtime="20210205 20:02:17.675"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:17.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.677" endtime="20210205 20:02:17.677"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.675" endtime="20210205 20:02:17.678"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.679" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:17.679" endtime="20210205 20:02:17.679"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.749" level="INFO">${idvalue} = [37]</msg>
<status status="PASS" starttime="20210205 20:02:17.679" endtime="20210205 20:02:17.749"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:17.750" level="INFO">${responseid} = 37</msg>
<status status="PASS" starttime="20210205 20:02:17.749" endtime="20210205 20:02:17.750"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:17.750" endtime="20210205 20:02:17.751"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.751" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:17.751" endtime="20210205 20:02:17.751"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.678" endtime="20210205 20:02:17.752"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.518" endtime="20210205 20:02:17.752"></status>
</kw>
<kw name="${postid} = 38" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:17.753" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:17.753" endtime="20210205 20:02:17.754"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:17.925" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/38 
 path_url=/posts/38 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:17.925" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/38 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2272708dff6fc8e2b5dbc3fc6e7ecc5a1612573339; expires=Mon, 08-Mar-21 01:02:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '970', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"13a-HzjuaEKBfsU2W89T3U0Yxx0R1zE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '081675862700003dfd34bd0000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=d6XvSwMjexDJknfAayd6cQcnfofbc%2FDE%2FYC52jryrXUaWgJW4Hb090PKSftMcN004cAfGCteqldrbboe8UyPdOqTxpcPu1lUDcKxf0QmOUVkMiyzm9Ho1FZ%2Fylj2"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1e9dc333dfd-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 38,
  "title": "explicabo et eos deleniti nostrum ab id repellendus",
  "body": "animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus ea\nrerum repudiandae quia voluptatem delectus fugit aut id quia\nratione optio eos iusto veniam iure"
} 
 </msg>
<msg timestamp="20210205 20:02:17.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.754" endtime="20210205 20:02:17.926"></status>
</kw>
<msg timestamp="20210205 20:02:17.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.752" endtime="20210205 20:02:17.927"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:17.929" endtime="20210205 20:02:17.932"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.928" endtime="20210205 20:02:17.933"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.927" endtime="20210205 20:02:17.933"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:17.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.934" endtime="20210205 20:02:17.935"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.933" endtime="20210205 20:02:17.935"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.937" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:17.936" endtime="20210205 20:02:17.937"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.985" level="INFO">${idvalue} = [38]</msg>
<status status="PASS" starttime="20210205 20:02:17.937" endtime="20210205 20:02:17.985"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:17.986" level="INFO">${responseid} = 38</msg>
<status status="PASS" starttime="20210205 20:02:17.985" endtime="20210205 20:02:17.986"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:17.986" endtime="20210205 20:02:17.986"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:17.986" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:17.986" endtime="20210205 20:02:17.986"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.935" endtime="20210205 20:02:17.987"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.752" endtime="20210205 20:02:17.987"></status>
</kw>
<kw name="${postid} = 39" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:17.988" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:17.988" endtime="20210205 20:02:17.988"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:18.154" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/39 
 path_url=/posts/39 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:18.154" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/39 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d18ae06740208ed39f26c1c774784ea6f1612573339; expires=Mon, 08-Mar-21 01:02:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '993', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11e-UefH5pVf0iJOGuchVJ4dBA7q9aw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '08167586a500001552770a2000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=lc4Qfw95B%2F2fcNpJot6j%2F4e5nYzzH1tbAny%2FOZ1B4Puxz%2Blni42%2BbzG1cTwzYQ0ILTWg9e95dhZTwbdEYhtbdVIQGu6FtI6Sd56mfXHUp1j3w2GJJBJhsuGWmSYx"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1eaae641552-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 39,
  "title": "eos dolorem iste accusantium est eaque quam",
  "body": "corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti asperiores fuga aut\nvoluptas sapiente vel dolore minus voluptatem incidunt ex"
} 
 </msg>
<msg timestamp="20210205 20:02:18.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.988" endtime="20210205 20:02:18.155"></status>
</kw>
<msg timestamp="20210205 20:02:18.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:17.987" endtime="20210205 20:02:18.156"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.158" endtime="20210205 20:02:18.161"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.157" endtime="20210205 20:02:18.162"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.156" endtime="20210205 20:02:18.162"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.163" endtime="20210205 20:02:18.164"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.162" endtime="20210205 20:02:18.164"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.166" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.165" endtime="20210205 20:02:18.166"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.235" level="INFO">${idvalue} = [39]</msg>
<status status="PASS" starttime="20210205 20:02:18.166" endtime="20210205 20:02:18.235"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:18.236" level="INFO">${responseid} = 39</msg>
<status status="PASS" starttime="20210205 20:02:18.235" endtime="20210205 20:02:18.236"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.236" endtime="20210205 20:02:18.237"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.238" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.238" endtime="20210205 20:02:18.238"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.164" endtime="20210205 20:02:18.238"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:17.987" endtime="20210205 20:02:18.238"></status>
</kw>
<kw name="${postid} = 40" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.240" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:18.240" endtime="20210205 20:02:18.241"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:18.300" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/40 
 path_url=/posts/40 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:18.301" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/40 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4e9339006f7d37e426638fa68184e1ec1612573339; expires=Mon, 08-Mar-21 01:02:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '997', 'x-ratelimit-reset': '1611642816', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"f4-I7RG0h0Rd47Iq9Rj+KpOcUnz3RA"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '92', 'cf-request-id': '08167587a100000c998c962000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=AS1cbzpCwob%2BmbHtjk%2Fcg8K780kiJNY7e0diSoKZvMiwtdOvTDvX9DgtTvcMQKxHGrKfdOfBQVx7j56LRc2tKViIN01D8g3tDNjamsMUQHROCWuvFtAz5OXwMzzV"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1ec39da0c99-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 40,
  "title": "enim quo cumque",
  "body": "ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptatem iure quasi maxime voluptas nam"
} 
 </msg>
<msg timestamp="20210205 20:02:18.301" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.241" endtime="20210205 20:02:18.301"></status>
</kw>
<msg timestamp="20210205 20:02:18.302" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.239" endtime="20210205 20:02:18.302"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.306" endtime="20210205 20:02:18.310"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.304" endtime="20210205 20:02:18.311"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.302" endtime="20210205 20:02:18.311"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.314" endtime="20210205 20:02:18.315"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.312" endtime="20210205 20:02:18.315"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.318" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.317" endtime="20210205 20:02:18.318"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.384" level="INFO">${idvalue} = [40]</msg>
<status status="PASS" starttime="20210205 20:02:18.318" endtime="20210205 20:02:18.384"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:18.385" level="INFO">${responseid} = 40</msg>
<status status="PASS" starttime="20210205 20:02:18.384" endtime="20210205 20:02:18.385"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.386" endtime="20210205 20:02:18.386"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.387" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.387" endtime="20210205 20:02:18.387"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.315" endtime="20210205 20:02:18.387"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.238" endtime="20210205 20:02:18.387"></status>
</kw>
<kw name="${postid} = 41" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.390" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:18.390" endtime="20210205 20:02:18.391"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:18.444" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/41 
 path_url=/posts/41 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:18.444" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/41 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3250664d859a3fe8010fbbacf1cab08e1612573339; expires=Mon, 08-Mar-21 01:02:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '966', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"100-Q8c9gEwMpBLWIJsW0KobJ16pdlE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '92', 'cf-request-id': '081675883700000ce9b3882000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=WveyT0ii8BFPaQyu6L%2BqzyVG2JNBbw3kiKHW%2B3qTILdYahrLd2iiYJNV%2FCbVUSdKrjIo651Zb2NvE10C0oIKnJnfSvgRyQGWndcD4G8B1E6bI33hf4AW7367kIka"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1ed2be20ce9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 41,
  "title": "non est facere",
  "body": "molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\nnam quidem est ducimus sunt debitis saepe"
} 
 </msg>
<msg timestamp="20210205 20:02:18.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.391" endtime="20210205 20:02:18.445"></status>
</kw>
<msg timestamp="20210205 20:02:18.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.388" endtime="20210205 20:02:18.445"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.448" endtime="20210205 20:02:18.451"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.447" endtime="20210205 20:02:18.451"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.445" endtime="20210205 20:02:18.451"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.452" endtime="20210205 20:02:18.453"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.451" endtime="20210205 20:02:18.453"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.455" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.454" endtime="20210205 20:02:18.455"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.526" level="INFO">${idvalue} = [41]</msg>
<status status="PASS" starttime="20210205 20:02:18.455" endtime="20210205 20:02:18.526"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:18.527" level="INFO">${responseid} = 41</msg>
<status status="PASS" starttime="20210205 20:02:18.527" endtime="20210205 20:02:18.527"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.528" endtime="20210205 20:02:18.528"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.529" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.528" endtime="20210205 20:02:18.529"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.453" endtime="20210205 20:02:18.529"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.388" endtime="20210205 20:02:18.529"></status>
</kw>
<kw name="${postid} = 42" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.531" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:18.531" endtime="20210205 20:02:18.532"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:18.582" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/42 
 path_url=/posts/42 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:18.583" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/42 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd016806eb5d888d2bf3812d8314890a21612573339; expires=Mon, 08-Mar-21 01:02:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '928', 'X-Ratelimit-Reset': '1610899946', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"131-uHddi0mgHIPmmzZ13FEZKREc9o4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '27336', 'cf-request-id': '08167588c10000eff9939b0000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=PdpF2eEtShs1C8ZeSe0i9S7QmNCMeYRIpTM2UGcm8IKxGNUIep4VMwLHC6ErQTjgeZQezd3mB8KLOaY%2FWj16K0l3NLq2Fl%2BamrB%2FPWawk63PoI3FtBbd3nUjKq5K"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1ee0c32eff9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 42,
  "title": "commodi ullam sint et excepturi error explicabo praesentium voluptas",
  "body": "odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis aliquam sunt sequi nulla dolorem\nnon facere repellendus voluptates quia\nratione harum vitae ut"
} 
 </msg>
<msg timestamp="20210205 20:02:18.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.532" endtime="20210205 20:02:18.583"></status>
</kw>
<msg timestamp="20210205 20:02:18.584" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.530" endtime="20210205 20:02:18.584"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.586" endtime="20210205 20:02:18.590"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.585" endtime="20210205 20:02:18.590"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.584" endtime="20210205 20:02:18.591"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.592" endtime="20210205 20:02:18.593"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.591" endtime="20210205 20:02:18.593"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.595" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.594" endtime="20210205 20:02:18.595"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.657" level="INFO">${idvalue} = [42]</msg>
<status status="PASS" starttime="20210205 20:02:18.595" endtime="20210205 20:02:18.657"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:18.658" level="INFO">${responseid} = 42</msg>
<status status="PASS" starttime="20210205 20:02:18.657" endtime="20210205 20:02:18.658"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.658" endtime="20210205 20:02:18.658"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.659" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.658" endtime="20210205 20:02:18.659"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.593" endtime="20210205 20:02:18.659"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.529" endtime="20210205 20:02:18.659"></status>
</kw>
<kw name="${postid} = 43" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.660" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:18.660" endtime="20210205 20:02:18.660"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:18.714" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/43 
 path_url=/posts/43 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:18.714" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/43 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de556dc3cef145ef3689807633e22ad811612573339; expires=Mon, 08-Mar-21 01:02:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '980', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"149-CIe5MorMt/6eiC+lMhHtDjhofck"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '92', 'cf-request-id': '081675894300003dcccfa2f000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=V6wRfZzJT50l%2BSkW0Vbi%2FdRWyw2cCcmEATIyq0V7iEUtDdayljLdw2WTZ3S92keKILF5Z%2BVMq27t%2Beaq8BARC%2BLKmfbuKEJmIiQPH0ySdoOZa3IlYxiwWvG6qI42"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1eedfd53dcc-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 43,
  "title": "eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis",
  "body": "similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexercitationem quos nam commodi possimus cum odio nihil nulla\ndolorum exercitationem magnam ex et a et distinctio debitis"
} 
 </msg>
<msg timestamp="20210205 20:02:18.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.661" endtime="20210205 20:02:18.715"></status>
</kw>
<msg timestamp="20210205 20:02:18.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.659" endtime="20210205 20:02:18.715"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.718" endtime="20210205 20:02:18.721"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.717" endtime="20210205 20:02:18.721"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.716" endtime="20210205 20:02:18.721"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.722" endtime="20210205 20:02:18.723"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.721" endtime="20210205 20:02:18.723"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.725" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.724" endtime="20210205 20:02:18.725"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.784" level="INFO">${idvalue} = [43]</msg>
<status status="PASS" starttime="20210205 20:02:18.725" endtime="20210205 20:02:18.784"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:18.786" level="INFO">${responseid} = 43</msg>
<status status="PASS" starttime="20210205 20:02:18.785" endtime="20210205 20:02:18.786"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.786" endtime="20210205 20:02:18.787"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.787" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.787" endtime="20210205 20:02:18.787"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.723" endtime="20210205 20:02:18.788"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.659" endtime="20210205 20:02:18.788"></status>
</kw>
<kw name="${postid} = 44" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.790" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:18.789" endtime="20210205 20:02:18.790"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:18.844" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/44 
 path_url=/posts/44 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:18.844" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/44 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de92375172003acfaf734b2c4d0053c101612573340; expires=Mon, 08-Mar-21 01:02:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1610900306', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f9-qeEI4xhxJyQd+h1AmBEbRcZU5LE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '93', 'cf-request-id': '08167589c70000e71c70319000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=7Hpp%2Bl%2BNIztkOrsHDGe5fopmnU36GfxH2MPgASbvVxxKou6ZwUCCNIRS872WpaCVueOplwjyrk%2BySN2nUyoQjCGLLbC3eAylUUqrhZbI6AIyZDJr%2BwyEpW%2FxaQEW"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1efad8ee71c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 44,
  "title": "optio dolor molestias sit",
  "body": "temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iure quam sed maxime ut distinctio quae"
} 
 </msg>
<msg timestamp="20210205 20:02:18.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.791" endtime="20210205 20:02:18.845"></status>
</kw>
<msg timestamp="20210205 20:02:18.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.788" endtime="20210205 20:02:18.845"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.848" endtime="20210205 20:02:18.851"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.846" endtime="20210205 20:02:18.851"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.845" endtime="20210205 20:02:18.851"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.853" endtime="20210205 20:02:18.853"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.852" endtime="20210205 20:02:18.854"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.855" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.855" endtime="20210205 20:02:18.855"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.918" level="INFO">${idvalue} = [44]</msg>
<status status="PASS" starttime="20210205 20:02:18.855" endtime="20210205 20:02:18.918"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:18.919" level="INFO">${responseid} = 44</msg>
<status status="PASS" starttime="20210205 20:02:18.918" endtime="20210205 20:02:18.919"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.919" endtime="20210205 20:02:18.919"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.920" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.919" endtime="20210205 20:02:18.920"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.854" endtime="20210205 20:02:18.920"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.788" endtime="20210205 20:02:18.920"></status>
</kw>
<kw name="${postid} = 45" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.921" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:18.921" endtime="20210205 20:02:18.921"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:18.981" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/45 
 path_url=/posts/45 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:18.981" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/45 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd2f26e83a014c5d52981612b9df43b321612573340; expires=Mon, 08-Mar-21 01:02:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '989', 'X-Ratelimit-Reset': '1611536772', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ed-rWKwMfMntbkO4fMbZo0ZEINfI8c"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '92', 'cf-request-id': '0816758a47000015cb6405f000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=p77jjC9lx1wFmRo1q2VyJGQruXVWs2mBjoIaV%2BrQPiWTKkYVtAQQ0fQbIKrvEKd7se7XXG1UsZRZbrLCOfBzz9mbJav%2BP1%2FVanSdxgIPbk9PCAcTCQZYorVAiJjV"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1f07a8b15cb-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 45,
  "title": "ut numquam possimus omnis eius suscipit laudantium iure",
  "body": "est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum repellendus dolorem autem"
} 
 </msg>
<msg timestamp="20210205 20:02:18.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.921" endtime="20210205 20:02:18.982"></status>
</kw>
<msg timestamp="20210205 20:02:18.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.920" endtime="20210205 20:02:18.983"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:18.985" endtime="20210205 20:02:18.988"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.984" endtime="20210205 20:02:18.988"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.983" endtime="20210205 20:02:18.989"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:18.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:18.990" endtime="20210205 20:02:18.991"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.989" endtime="20210205 20:02:18.991"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:18.992" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:18.992" endtime="20210205 20:02:18.992"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.049" level="INFO">${idvalue} = [45]</msg>
<status status="PASS" starttime="20210205 20:02:18.993" endtime="20210205 20:02:19.049"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:19.050" level="INFO">${responseid} = 45</msg>
<status status="PASS" starttime="20210205 20:02:19.050" endtime="20210205 20:02:19.050"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.050" endtime="20210205 20:02:19.051"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.051" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.051" endtime="20210205 20:02:19.051"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.991" endtime="20210205 20:02:19.051"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:18.920" endtime="20210205 20:02:19.051"></status>
</kw>
<kw name="${postid} = 46" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.053" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:19.052" endtime="20210205 20:02:19.053"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:19.108" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/46 
 path_url=/posts/46 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:19.108" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/46 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1a4020159fd19b6507c13dbc447d0b931612573340; expires=Mon, 08-Mar-21 01:02:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '927', 'X-Ratelimit-Reset': '1610900006', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d0-OhfTd80AsvDHSFm9T0Fi068MWcY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '92', 'cf-request-id': '0816758acb00000cb54b94a000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=l581BAAVsuhBl0ljWaIvLjU4jGz6rrc76wVVxQCGgjhVjlvj8o%2FokGXMxNEoHUq0xDHMT5RnLlK85DaerE8gxKaM%2BmmMIq1ujgsIRKA%2Fk%2FMQnPJoz399OzjN4yc1"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1f14a540cb5-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 46,
  "title": "aut quo modi neque nostrum ducimus",
  "body": "voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid"
} 
 </msg>
<msg timestamp="20210205 20:02:19.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.053" endtime="20210205 20:02:19.109"></status>
</kw>
<msg timestamp="20210205 20:02:19.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.052" endtime="20210205 20:02:19.109"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.112" endtime="20210205 20:02:19.115"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.111" endtime="20210205 20:02:19.115"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.110" endtime="20210205 20:02:19.116"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.117" endtime="20210205 20:02:19.118"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.116" endtime="20210205 20:02:19.118"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.119" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.119" endtime="20210205 20:02:19.120"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.187" level="INFO">${idvalue} = [46]</msg>
<status status="PASS" starttime="20210205 20:02:19.120" endtime="20210205 20:02:19.187"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:19.188" level="INFO">${responseid} = 46</msg>
<status status="PASS" starttime="20210205 20:02:19.187" endtime="20210205 20:02:19.188"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.188" endtime="20210205 20:02:19.188"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.188" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.188" endtime="20210205 20:02:19.189"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.118" endtime="20210205 20:02:19.189"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.052" endtime="20210205 20:02:19.189"></status>
</kw>
<kw name="${postid} = 47" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.190" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:19.190" endtime="20210205 20:02:19.190"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:19.244" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/47 
 path_url=/posts/47 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:19.244" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/47 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3ce064f33a5efa5a0c9ac1a5868523b71612573340; expires=Mon, 08-Mar-21 01:02:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '961', 'x-ratelimit-reset': '1611755940', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"109-s96ANlpy6qW0Y5CU7Xc8LI9hFKE"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '92', 'cf-request-id': '0816758b5a00000cd13c9f7000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=eMY2q7WvEBrFHjll3S4AIOAh0geAceOIvdngVrBndccsRjvPcSuZ%2F3SWoXUcZNizMQ9h3Jnm0%2FCjcvxJ%2Bf4E8qMko7bLWG%2B%2FlSdyCAbmz8kHNgJbTITeKftSrB3J"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1f22f5c0cd1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 47,
  "title": "quibusdam cumque rem aut deserunt",
  "body": "voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beatae rerum ea iure soluta nostrum\neligendi et voluptate"
} 
 </msg>
<msg timestamp="20210205 20:02:19.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.190" endtime="20210205 20:02:19.245"></status>
</kw>
<msg timestamp="20210205 20:02:19.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.189" endtime="20210205 20:02:19.246"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.248" endtime="20210205 20:02:19.251"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.247" endtime="20210205 20:02:19.251"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.246" endtime="20210205 20:02:19.251"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.252" endtime="20210205 20:02:19.253"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.251" endtime="20210205 20:02:19.253"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.255" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.254" endtime="20210205 20:02:19.255"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.313" level="INFO">${idvalue} = [47]</msg>
<status status="PASS" starttime="20210205 20:02:19.255" endtime="20210205 20:02:19.314"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:19.314" level="INFO">${responseid} = 47</msg>
<status status="PASS" starttime="20210205 20:02:19.314" endtime="20210205 20:02:19.314"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.315" endtime="20210205 20:02:19.315"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.315" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.315" endtime="20210205 20:02:19.315"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.253" endtime="20210205 20:02:19.316"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.189" endtime="20210205 20:02:19.316"></status>
</kw>
<kw name="${postid} = 48" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.317" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:19.316" endtime="20210205 20:02:19.317"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:19.378" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/48 
 path_url=/posts/48 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:19.378" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/48 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1a4020159fd19b6507c13dbc447d0b931612573340; expires=Mon, 08-Mar-21 01:02:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '960', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"107-td+hSQ4ZRU5RdRcCg9ZABJ7WwQI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816758bd300000cb55d137000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=yUiZ%2F8UJFoHB8S55RkWlOBXD7VYgtdUk5s5LtP%2BtGfJRN2hJfYHovSMBl4OnvsuI%2B2p76uMMv8L%2Blb4t4ohAejBuYLJVcqgusLqgDvX024DEIPe%2BQoW07%2Ft2wZ3n"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1f2ef200cb5-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 48,
  "title": "ut voluptatem illum ea doloribus itaque eos",
  "body": "voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab deleniti\nlaudantium repellat ad ut et autem reprehenderit"
} 
 </msg>
<msg timestamp="20210205 20:02:19.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.317" endtime="20210205 20:02:19.379"></status>
</kw>
<msg timestamp="20210205 20:02:19.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.316" endtime="20210205 20:02:19.379"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.382" endtime="20210205 20:02:19.385"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.381" endtime="20210205 20:02:19.385"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.380" endtime="20210205 20:02:19.385"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.387" endtime="20210205 20:02:19.388"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.386" endtime="20210205 20:02:19.388"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.389" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.389" endtime="20210205 20:02:19.389"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.460" level="INFO">${idvalue} = [48]</msg>
<status status="PASS" starttime="20210205 20:02:19.390" endtime="20210205 20:02:19.460"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:19.461" level="INFO">${responseid} = 48</msg>
<status status="PASS" starttime="20210205 20:02:19.460" endtime="20210205 20:02:19.461"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.461" endtime="20210205 20:02:19.462"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.462" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.462" endtime="20210205 20:02:19.462"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.388" endtime="20210205 20:02:19.463"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.316" endtime="20210205 20:02:19.463"></status>
</kw>
<kw name="${postid} = 49" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.465" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:19.465" endtime="20210205 20:02:19.466"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:19.516" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/49 
 path_url=/posts/49 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:19.516" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/49 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7e6d6514d2ff84ec072cfcb296d971851612573340; expires=Mon, 08-Mar-21 01:02:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '959', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"112-lKkCmj93YmY7yVGzoTlsICQTIV8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816758c680000e6f8fcbf3000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=uNn9e0VTAjd4txT0Nkwzzr5%2FwfzNv4HALDO%2FBuLZZv0BHiiNkPx5f1JN1iq6yMY4OE4FjyjBOPgrYGNLU47dFYKxmDK6EHXG3IqsR73nAmIMCBNd8ZRGSR%2FcoGZb"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1f3de2fe6f8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 49,
  "title": "laborum non sunt aut ut assumenda perspiciatis voluptas",
  "body": "inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum veritatis non\nquibusdam officiis aspernatur cumque aut commodi aut"
} 
 </msg>
<msg timestamp="20210205 20:02:19.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.466" endtime="20210205 20:02:19.517"></status>
</kw>
<msg timestamp="20210205 20:02:19.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.463" endtime="20210205 20:02:19.517"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.520" endtime="20210205 20:02:19.523"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.519" endtime="20210205 20:02:19.523"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.518" endtime="20210205 20:02:19.523"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.524" endtime="20210205 20:02:19.525"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.523" endtime="20210205 20:02:19.525"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.527" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.526" endtime="20210205 20:02:19.527"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.596" level="INFO">${idvalue} = [49]</msg>
<status status="PASS" starttime="20210205 20:02:19.527" endtime="20210205 20:02:19.596"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:19.597" level="INFO">${responseid} = 49</msg>
<status status="PASS" starttime="20210205 20:02:19.596" endtime="20210205 20:02:19.597"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.597" endtime="20210205 20:02:19.598"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.598" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.598" endtime="20210205 20:02:19.598"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.525" endtime="20210205 20:02:19.599"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.463" endtime="20210205 20:02:19.599"></status>
</kw>
<kw name="${postid} = 50" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.601" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:19.601" endtime="20210205 20:02:19.602"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:19.657" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/50 
 path_url=/posts/50 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:19.657" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/50 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9f1aae9efc671b6a85bfa99ed8af46da1612573340; expires=Mon, 08-Mar-21 01:02:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1611642816', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"14d-XND1VIG+pZHF+RVMSi1awppS1XI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816758cf400003dd2fe0b6000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=yniUwRvJh5nlAEYDE5G%2FB3F%2FkG%2FtWGNiZYvt4nfkgUE3YOKtbdmzynHhevtavacJR2VuIhgjQq3xizP8BNh8W3TeYvagp268kTf1wVoUfJhWAYi%2Bd9THDrQ2Ab39"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1f4ba6c3dd2-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 50,
  "title": "repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem",
  "body": "error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi et est et voluptates\nquia distinctio ab amet quaerat molestiae et vitae\nadipisci impedit sequi nesciunt quis consectetur"
} 
 </msg>
<msg timestamp="20210205 20:02:19.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.602" endtime="20210205 20:02:19.658"></status>
</kw>
<msg timestamp="20210205 20:02:19.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.599" endtime="20210205 20:02:19.659"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.661" endtime="20210205 20:02:19.664"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.660" endtime="20210205 20:02:19.664"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.659" endtime="20210205 20:02:19.665"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.666" endtime="20210205 20:02:19.667"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.665" endtime="20210205 20:02:19.667"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.669" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.668" endtime="20210205 20:02:19.669"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.742" level="INFO">${idvalue} = [50]</msg>
<status status="PASS" starttime="20210205 20:02:19.669" endtime="20210205 20:02:19.742"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:19.743" level="INFO">${responseid} = 50</msg>
<status status="PASS" starttime="20210205 20:02:19.742" endtime="20210205 20:02:19.743"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.743" endtime="20210205 20:02:19.744"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.745" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.744" endtime="20210205 20:02:19.745"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.667" endtime="20210205 20:02:19.745"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.599" endtime="20210205 20:02:19.745"></status>
</kw>
<kw name="${postid} = 51" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.747" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:19.746" endtime="20210205 20:02:19.747"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:19.813" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/51 
 path_url=/posts/51 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:19.813" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/51 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3a84f4cd1f4565e289b6c1eb466acc611612573341; expires=Mon, 08-Mar-21 01:02:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '958', 'x-ratelimit-reset': '1611755940', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"ec-KSZLw8b2VyQH0CoS7Z65vSSln78"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '92', 'cf-request-id': '0816758d8700009a1a36b89000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Way1oW%2F%2BwUq6QBqmy%2FdbfNMj7yDnoYg3MsJ2Rlyie8INL9z1%2B5TstFHh54%2FfWjxfjrCf2MUPwbMCZq0xcGoORxxAnhRt1HC0JAdpaUFBFaGE1rd9aRymgdR%2BQOv1"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1f5ad7e9a1a-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 51,
  "title": "soluta aliquam aperiam consequatur illo quis voluptas",
  "body": "sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores sit consectetur dolorem"
} 
 </msg>
<msg timestamp="20210205 20:02:19.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.748" endtime="20210205 20:02:19.814"></status>
</kw>
<msg timestamp="20210205 20:02:19.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.745" endtime="20210205 20:02:19.814"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.817" endtime="20210205 20:02:19.820"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.816" endtime="20210205 20:02:19.820"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.815" endtime="20210205 20:02:19.820"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.821" endtime="20210205 20:02:19.822"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.820" endtime="20210205 20:02:19.822"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.824" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.823" endtime="20210205 20:02:19.824"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.892" level="INFO">${idvalue} = [51]</msg>
<status status="PASS" starttime="20210205 20:02:19.824" endtime="20210205 20:02:19.892"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:19.893" level="INFO">${responseid} = 51</msg>
<status status="PASS" starttime="20210205 20:02:19.892" endtime="20210205 20:02:19.893"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.893" endtime="20210205 20:02:19.894"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.894" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.894" endtime="20210205 20:02:19.894"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.823" endtime="20210205 20:02:19.895"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.745" endtime="20210205 20:02:19.895"></status>
</kw>
<kw name="${postid} = 52" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.896" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:19.896" endtime="20210205 20:02:19.897"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:19.964" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/52 
 path_url=/posts/52 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:19.964" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/52 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db21ee06fe6727c8ed9c699030a0fcc661612573341; expires=Mon, 08-Mar-21 01:02:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '957', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11d-WmrD+HyY132p7brEZQ1rec9ZC6E"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '92', 'cf-request-id': '0816758e1b0000efd090392000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=oTK1y3mBT33ifIGfD1P2KghPlFG9TUjmGutvN2wUPPlPxo5Jnw2GocQsKU9xszqPnrBVeuoNFF9kGxQijGOHt%2Fu0rs4MGq125RHp1PAFMzceykeYmOwESi6hNiBZ"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1f698ecefd0-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 52,
  "title": "qui enim et consequuntur quia animi quis voluptate quibusdam",
  "body": "iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iusto accusantium provident architecto\nsoluta esse reprehenderit qui laborum"
} 
 </msg>
<msg timestamp="20210205 20:02:19.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.897" endtime="20210205 20:02:19.965"></status>
</kw>
<msg timestamp="20210205 20:02:19.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.895" endtime="20210205 20:02:19.966"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:19.968" endtime="20210205 20:02:19.971"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.967" endtime="20210205 20:02:19.971"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.966" endtime="20210205 20:02:19.971"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:19.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:19.973" endtime="20210205 20:02:19.973"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.972" endtime="20210205 20:02:19.974"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:19.975" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:19.975" endtime="20210205 20:02:19.975"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.043" level="INFO">${idvalue} = [52]</msg>
<status status="PASS" starttime="20210205 20:02:19.975" endtime="20210205 20:02:20.043"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:20.044" level="INFO">${responseid} = 52</msg>
<status status="PASS" starttime="20210205 20:02:20.043" endtime="20210205 20:02:20.044"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.044" endtime="20210205 20:02:20.045"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.046" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.045" endtime="20210205 20:02:20.046"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.974" endtime="20210205 20:02:20.046"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:19.895" endtime="20210205 20:02:20.046"></status>
</kw>
<kw name="${postid} = 53" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.048" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:20.047" endtime="20210205 20:02:20.048"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:20.116" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/53 
 path_url=/posts/53 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:20.116" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/53 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbb4358ad4858daf75294d0319a41c6171612573341; expires=Mon, 08-Mar-21 01:02:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '956', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-X55YQF6JtuvUfAW398enLPpXN4M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816758eb100003dc670ad3000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=RIZFeW58LwEFLNh9PRQxzAOOCvitC0u75o30dcmnpe33rS%2BanH7v3CxPj7dgq1t2g8ATJ%2FTuf46qfHPVF3X9Pgeymfj5Fh6qeOthnrXQfbR8aJRXqG5Bqz6e5QNE"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1f7797a3dc6-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 53,
  "title": "ut quo aut ducimus alias",
  "body": "minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quidem veritatis sunt non explicabo similique"
} 
 </msg>
<msg timestamp="20210205 20:02:20.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.049" endtime="20210205 20:02:20.117"></status>
</kw>
<msg timestamp="20210205 20:02:20.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.046" endtime="20210205 20:02:20.117"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.120" endtime="20210205 20:02:20.123"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.119" endtime="20210205 20:02:20.123"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.118" endtime="20210205 20:02:20.124"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.125" endtime="20210205 20:02:20.126"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.124" endtime="20210205 20:02:20.126"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.128" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.127" endtime="20210205 20:02:20.128"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.199" level="INFO">${idvalue} = [53]</msg>
<status status="PASS" starttime="20210205 20:02:20.128" endtime="20210205 20:02:20.199"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:20.200" level="INFO">${responseid} = 53</msg>
<status status="PASS" starttime="20210205 20:02:20.199" endtime="20210205 20:02:20.200"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.200" endtime="20210205 20:02:20.201"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.201" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.201" endtime="20210205 20:02:20.202"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.126" endtime="20210205 20:02:20.202"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.046" endtime="20210205 20:02:20.202"></status>
</kw>
<kw name="${postid} = 54" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.204" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:20.203" endtime="20210205 20:02:20.204"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:20.254" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/54 
 path_url=/posts/54 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:20.254" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/54 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc56dd7722b0722832bcd2d37edd945971612573341; expires=Mon, 08-Mar-21 01:02:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611693280', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-/rMACUfvajsqfpLr5SV6d7Kh/pA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816758f4b00003dc07c0eb000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=am4%2BQGJr8gXYCnY%2BCIxto%2FtX9nBlDH4UwVzArHbZIDf6f8b4we%2FuKH6lSn34lYdItKcidrPSOG2Dvw%2FAHJ8%2Bi5%2BXSw36f4nBqmxluwPla63jrspX%2FAfjJUebUovQ"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1f8797f3dc0-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 54,
  "title": "sit asperiores ipsam eveniet odio non quia",
  "body": "totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero incidunt corrupti mollitia"
} 
 </msg>
<msg timestamp="20210205 20:02:20.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.205" endtime="20210205 20:02:20.255"></status>
</kw>
<msg timestamp="20210205 20:02:20.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.202" endtime="20210205 20:02:20.255"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.258" endtime="20210205 20:02:20.261"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.257" endtime="20210205 20:02:20.261"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.256" endtime="20210205 20:02:20.262"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.263" endtime="20210205 20:02:20.264"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.262" endtime="20210205 20:02:20.264"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.266" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.265" endtime="20210205 20:02:20.266"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.334" level="INFO">${idvalue} = [54]</msg>
<status status="PASS" starttime="20210205 20:02:20.266" endtime="20210205 20:02:20.334"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:20.335" level="INFO">${responseid} = 54</msg>
<status status="PASS" starttime="20210205 20:02:20.334" endtime="20210205 20:02:20.335"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.335" endtime="20210205 20:02:20.336"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.336" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.336" endtime="20210205 20:02:20.336"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.264" endtime="20210205 20:02:20.337"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.202" endtime="20210205 20:02:20.337"></status>
</kw>
<kw name="${postid} = 55" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.338" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:20.338" endtime="20210205 20:02:20.339"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:20.405" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/55 
 path_url=/posts/55 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:20.405" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/55 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8bfec2b5e7cbee96795544e260e3a4671612573341; expires=Mon, 08-Mar-21 01:02:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f0-VxeBMfiov8SnmTjGIBYMw53XYbw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816758fd60000e75cde899000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BZHdUKdjm7oPFtcoeCZXQRq%2FAu%2Frcpl%2BW0KIDFOqRx90N4RHB%2B72GW4kBpinNe%2FaOoomalSHUcb6IJxfLf2iibAW7mwiheCsE768A%2FH2ReOAm%2FBmjYa5YECsDd2p"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1f95d93e75c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 55,
  "title": "sit vel voluptatem et non libero",
  "body": "debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis molestiae\nnihil ut eum odit"
} 
 </msg>
<msg timestamp="20210205 20:02:20.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.339" endtime="20210205 20:02:20.406"></status>
</kw>
<msg timestamp="20210205 20:02:20.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.337" endtime="20210205 20:02:20.406"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.409" endtime="20210205 20:02:20.412"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.408" endtime="20210205 20:02:20.412"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.407" endtime="20210205 20:02:20.412"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.413" endtime="20210205 20:02:20.414"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.412" endtime="20210205 20:02:20.414"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.416" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.415" endtime="20210205 20:02:20.416"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.482" level="INFO">${idvalue} = [55]</msg>
<status status="PASS" starttime="20210205 20:02:20.416" endtime="20210205 20:02:20.482"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:20.483" level="INFO">${responseid} = 55</msg>
<status status="PASS" starttime="20210205 20:02:20.482" endtime="20210205 20:02:20.483"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.483" endtime="20210205 20:02:20.483"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.484" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.483" endtime="20210205 20:02:20.484"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.415" endtime="20210205 20:02:20.484"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.337" endtime="20210205 20:02:20.484"></status>
</kw>
<kw name="${postid} = 56" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.485" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:20.485" endtime="20210205 20:02:20.485"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:20.538" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/56 
 path_url=/posts/56 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:20.539" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/56 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d05348f8aaec0504cfa0613b9f642b0fa1612573341; expires=Mon, 08-Mar-21 01:02:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '969', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-u98FTQTucjGThpIemwDEky3CeT0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '08167590670000e770a5028000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=NcI0bZTjuCCS2mfeB9lZ5ZVemIRJZbVAj5Ep9TQUOxR4jmJsE9sXvOa5ASoUYKDqnRpBPgZ5LK%2FE8fZaF2ORpKOrWIP77fkGDv8%2FXHzSx0IVGk3YdDWI2BDtF%2B12"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1fa3eb2e770-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 56,
  "title": "qui et at rerum necessitatibus",
  "body": "aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis harum reprehenderit dolores eligendi"
} 
 </msg>
<msg timestamp="20210205 20:02:20.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.485" endtime="20210205 20:02:20.539"></status>
</kw>
<msg timestamp="20210205 20:02:20.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.484" endtime="20210205 20:02:20.540"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.542" endtime="20210205 20:02:20.545"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.541" endtime="20210205 20:02:20.546"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.540" endtime="20210205 20:02:20.546"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.547" endtime="20210205 20:02:20.548"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.546" endtime="20210205 20:02:20.548"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.550" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.549" endtime="20210205 20:02:20.550"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.600" level="INFO">${idvalue} = [56]</msg>
<status status="PASS" starttime="20210205 20:02:20.550" endtime="20210205 20:02:20.600"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:20.601" level="INFO">${responseid} = 56</msg>
<status status="PASS" starttime="20210205 20:02:20.600" endtime="20210205 20:02:20.601"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.601" endtime="20210205 20:02:20.601"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.602" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.602" endtime="20210205 20:02:20.602"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.548" endtime="20210205 20:02:20.602"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.484" endtime="20210205 20:02:20.602"></status>
</kw>
<kw name="${postid} = 57" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.603" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:20.603" endtime="20210205 20:02:20.604"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:20.665" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/57 
 path_url=/posts/57 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:20.665" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/57 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d077ec5244b8be943cc271dc50e9f28091612573341; expires=Mon, 08-Mar-21 01:02:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '952', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ce-Iwt4vkAV2fTGb7NKDpU2J1zQlLg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '08167590da0000ccc6be8e7000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Nid9YKWZMtM2M4kLGhw4LOStWBBx5zd7lhV1Sm4i9794NM2NgffEUFv2DZ7%2BdpD321SROoCmdl3uALg5rqzTwd1FfZ22BCw%2FVd5HFZBYvyVFlFURKU2QblrZnl%2B8"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1fafdafccc6-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 57,
  "title": "sed ab est est",
  "body": "at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est"
} 
 </msg>
<msg timestamp="20210205 20:02:20.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.604" endtime="20210205 20:02:20.666"></status>
</kw>
<msg timestamp="20210205 20:02:20.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.602" endtime="20210205 20:02:20.667"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.669" endtime="20210205 20:02:20.672"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.668" endtime="20210205 20:02:20.672"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.667" endtime="20210205 20:02:20.673"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.674" endtime="20210205 20:02:20.675"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.673" endtime="20210205 20:02:20.675"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.676" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.676" endtime="20210205 20:02:20.676"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.746" level="INFO">${idvalue} = [57]</msg>
<status status="PASS" starttime="20210205 20:02:20.677" endtime="20210205 20:02:20.746"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:20.747" level="INFO">${responseid} = 57</msg>
<status status="PASS" starttime="20210205 20:02:20.747" endtime="20210205 20:02:20.747"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.748" endtime="20210205 20:02:20.748"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.749" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.749" endtime="20210205 20:02:20.749"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.675" endtime="20210205 20:02:20.749"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.602" endtime="20210205 20:02:20.749"></status>
</kw>
<kw name="${postid} = 58" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.751" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:20.751" endtime="20210205 20:02:20.752"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:20.806" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/58 
 path_url=/posts/58 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:20.806" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/58 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0272e4dae94766ec9b3fe357caf854101612573342; expires=Mon, 08-Mar-21 01:02:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '949', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"df-bD3LY230qxsVBb8KHrs4UpWT93M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '92', 'cf-request-id': '081675916f00000cad89ac2000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=YGyVSDU8w8DsnY3FlA0jJXu0W5%2B9Sj%2Fkr3gpm3letT%2B2idyu9HaKG4syxiEd19G92YQ%2Buk6%2FhNJ9PoTUAHMpVivJusAKBslfUiN4ZOK9qy9wKzETgksv%2BaB8xbq7"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1fbefb60cad-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 58,
  "title": "voluptatum itaque dolores nisi et quasi",
  "body": "veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad similique veniam"
} 
 </msg>
<msg timestamp="20210205 20:02:20.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.752" endtime="20210205 20:02:20.807"></status>
</kw>
<msg timestamp="20210205 20:02:20.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.750" endtime="20210205 20:02:20.808"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.810" endtime="20210205 20:02:20.813"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.809" endtime="20210205 20:02:20.813"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.808" endtime="20210205 20:02:20.814"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.815" endtime="20210205 20:02:20.816"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.814" endtime="20210205 20:02:20.816"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.817" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.817" endtime="20210205 20:02:20.817"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.919" level="INFO">${idvalue} = [58]</msg>
<status status="PASS" starttime="20210205 20:02:20.818" endtime="20210205 20:02:20.920"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:20.920" level="INFO">${responseid} = 58</msg>
<status status="PASS" starttime="20210205 20:02:20.920" endtime="20210205 20:02:20.920"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.921" endtime="20210205 20:02:20.921"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.921" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.921" endtime="20210205 20:02:20.921"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.816" endtime="20210205 20:02:20.922"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.750" endtime="20210205 20:02:20.922"></status>
</kw>
<kw name="${postid} = 59" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.923" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:20.923" endtime="20210205 20:02:20.923"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:20.978" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/59 
 path_url=/posts/59 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:20.978" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/59 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8f3bc0223f21b3b994175759929faac61612573342; expires=Mon, 08-Mar-21 01:02:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '965', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"135-f8DoN5pkvK3E3Z4uNHbshLKUln0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675921d0000f04df2049000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=KXE2yiDLzpLxMsHDCzl%2FDUPim4VTkdvdn3LAnKFEI8xc6d%2FAi%2FSpn4KP6UgeklwM2vCGwRuFPscbPJNcZuNE%2Bisvbu2Eg5vdP47ru2ApP9XVDtT5TNE0GpIo7U42"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1fcfafff04d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 59,
  "title": "qui commodi dolor at maiores et quis id accusantium",
  "body": "perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores suscipit voluptas et\nanimi doloribus cum rerum quas et magni\net hic ut ut commodi expedita sunt"
} 
 </msg>
<msg timestamp="20210205 20:02:20.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.924" endtime="20210205 20:02:20.979"></status>
</kw>
<msg timestamp="20210205 20:02:20.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.922" endtime="20210205 20:02:20.980"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:20.982" endtime="20210205 20:02:20.985"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.981" endtime="20210205 20:02:20.985"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.980" endtime="20210205 20:02:20.985"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:20.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:20.987" endtime="20210205 20:02:20.987"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.985" endtime="20210205 20:02:20.988"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:20.989" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:20.989" endtime="20210205 20:02:20.989"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.056" level="INFO">${idvalue} = [59]</msg>
<status status="PASS" starttime="20210205 20:02:20.989" endtime="20210205 20:02:21.056"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:21.057" level="INFO">${responseid} = 59</msg>
<status status="PASS" starttime="20210205 20:02:21.057" endtime="20210205 20:02:21.057"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.058" endtime="20210205 20:02:21.058"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.059" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.059" endtime="20210205 20:02:21.059"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.988" endtime="20210205 20:02:21.059"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:20.922" endtime="20210205 20:02:21.059"></status>
</kw>
<kw name="${postid} = 60" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.061" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:21.061" endtime="20210205 20:02:21.062"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:21.117" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/60 
 path_url=/posts/60 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:21.117" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/60 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d767cfbdeaf84cc3e45886478385043c41612573342; expires=Mon, 08-Mar-21 01:02:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '995', 'X-Ratelimit-Reset': '1611642816', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10c-7tnlht60JBKnr58PtdEE+vo8WCI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '08167592ab0000efc88ca39000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=qW5p7CDz5%2BJeRO8r6%2BI9d3tEiVz1F8faIzgPkZqm%2BrgOPMygSvNNUUYQT%2B8vSomeHyp%2FtePvkCLyqQSuqFEY2JeKM%2BVh2FnSXJ1ldXMTUsuiwJ9LWd8wU4PTawkH"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1fddc06efc8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 60,
  "title": "consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere",
  "body": "asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et fuga perferendis voluptas\nillo ratione amet aut et omnis"
} 
 </msg>
<msg timestamp="20210205 20:02:21.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.062" endtime="20210205 20:02:21.118"></status>
</kw>
<msg timestamp="20210205 20:02:21.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.060" endtime="20210205 20:02:21.118"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.121" endtime="20210205 20:02:21.124"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.120" endtime="20210205 20:02:21.124"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.119" endtime="20210205 20:02:21.124"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.126" endtime="20210205 20:02:21.127"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.125" endtime="20210205 20:02:21.127"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.128" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.128" endtime="20210205 20:02:21.128"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.201" level="INFO">${idvalue} = [60]</msg>
<status status="PASS" starttime="20210205 20:02:21.129" endtime="20210205 20:02:21.201"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:21.202" level="INFO">${responseid} = 60</msg>
<status status="PASS" starttime="20210205 20:02:21.201" endtime="20210205 20:02:21.202"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.202" endtime="20210205 20:02:21.203"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.203" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.203" endtime="20210205 20:02:21.203"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.127" endtime="20210205 20:02:21.204"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.059" endtime="20210205 20:02:21.204"></status>
</kw>
<kw name="${postid} = 61" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.206" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:21.206" endtime="20210205 20:02:21.207"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:21.270" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/61 
 path_url=/posts/61 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:21.270" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/61 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df4ebeb5321a5a24753dce111a46f4d2c1612573342; expires=Mon, 08-Mar-21 01:02:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '950', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"117-2lMq4LJFOqWrZ3nCurXp4bbe50g"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '08167593370000e84d0f29f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=GEqwTqtjtsLUA%2Fcita4%2FQiP%2Bi3DJXRzDm0RjU0%2B6ui3toQPiN3217YvZ4StT5bYfqckAGpz0GvgNCJjkkmdwxgEKguIBV0HigzQloa2IxdFh%2BwLvGmHXs6SlpU2Q"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1febab2e84d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 61,
  "title": "voluptatem doloribus consectetur est ut ducimus",
  "body": "ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blanditiis debitis in nesciunt doloribus dicta dolores\nmagnam minus velit"
} 
 </msg>
<msg timestamp="20210205 20:02:21.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.207" endtime="20210205 20:02:21.271"></status>
</kw>
<msg timestamp="20210205 20:02:21.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.205" endtime="20210205 20:02:21.272"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.274" endtime="20210205 20:02:21.277"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.273" endtime="20210205 20:02:21.277"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.272" endtime="20210205 20:02:21.277"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.279" endtime="20210205 20:02:21.279"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.277" endtime="20210205 20:02:21.280"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.281" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.281" endtime="20210205 20:02:21.281"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.348" level="INFO">${idvalue} = [61]</msg>
<status status="PASS" starttime="20210205 20:02:21.281" endtime="20210205 20:02:21.350"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:21.350" level="INFO">${responseid} = 61</msg>
<status status="PASS" starttime="20210205 20:02:21.350" endtime="20210205 20:02:21.350"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.350" endtime="20210205 20:02:21.350"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.351" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.351" endtime="20210205 20:02:21.351"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.280" endtime="20210205 20:02:21.351"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.204" endtime="20210205 20:02:21.351"></status>
</kw>
<kw name="${postid} = 62" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.353" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:21.353" endtime="20210205 20:02:21.354"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:21.432" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/62 
 path_url=/posts/62 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:21.432" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/62 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd4ef6dd7ae699e0e6076484a6d1987d81612573342; expires=Mon, 08-Mar-21 01:02:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fc-wUwohCARVvkGoN5CwlwsirOR5iU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '08167593de00003df1e5928000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=aGEpXoWOPOSOdTtIGfBUgY58S6%2BmYX%2F9Mdgq7F8LmFfoJABQ%2FTX2mP%2Fg8AEokW1vMeHvegWEVU6p6m5PeEfvFh87MxV8H1uOdn%2FWqQsSOf23PNJXnzm2Vh3sgK8O"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f1ffcbb83df1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 62,
  "title": "beatae enim quia vel",
  "body": "enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omnis\nquo molestiae omnis ea eveniet optio"
} 
 </msg>
<msg timestamp="20210205 20:02:21.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.354" endtime="20210205 20:02:21.433"></status>
</kw>
<msg timestamp="20210205 20:02:21.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.352" endtime="20210205 20:02:21.433"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.436" endtime="20210205 20:02:21.439"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.435" endtime="20210205 20:02:21.439"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.434" endtime="20210205 20:02:21.440"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.441" endtime="20210205 20:02:21.442"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.440" endtime="20210205 20:02:21.442"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.444" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.443" endtime="20210205 20:02:21.444"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.514" level="INFO">${idvalue} = [62]</msg>
<status status="PASS" starttime="20210205 20:02:21.444" endtime="20210205 20:02:21.514"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:21.515" level="INFO">${responseid} = 62</msg>
<status status="PASS" starttime="20210205 20:02:21.514" endtime="20210205 20:02:21.515"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.515" endtime="20210205 20:02:21.516"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.517" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.516" endtime="20210205 20:02:21.517"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.442" endtime="20210205 20:02:21.517"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.352" endtime="20210205 20:02:21.517"></status>
</kw>
<kw name="${postid} = 63" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.519" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:21.518" endtime="20210205 20:02:21.520"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:21.570" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/63 
 path_url=/posts/63 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:21.570" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/63 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0a20fd959c59e9fcafd4ae03590707871612573342; expires=Mon, 08-Mar-21 01:02:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"154-0kFmwh5nu5wS1Jzcpk0yszfjrjQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675946e000015777a9fe000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=28kobR6s6aY9P0yDFQ9JTZYx%2BH%2B3Yc1UTFyjIGHYh9cSYfa3bfd6ZXlbXnL5eE9mjH1xp3lZuJSxEyTgdQa6gEbtc7JBCQx98f9OIcpu0yRpkmtx4OjgYUGYmFcA"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f200af741577-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 63,
  "title": "voluptas blanditiis repellendus animi ducimus error sapiente et suscipit",
  "body": "enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\nab delectus culpa quo reprehenderit blanditiis asperiores\naccusantium ut quam in voluptatibus voluptas ipsam dicta"
} 
 </msg>
<msg timestamp="20210205 20:02:21.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.520" endtime="20210205 20:02:21.571"></status>
</kw>
<msg timestamp="20210205 20:02:21.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.517" endtime="20210205 20:02:21.571"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.574" endtime="20210205 20:02:21.577"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.573" endtime="20210205 20:02:21.577"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.572" endtime="20210205 20:02:21.577"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.579" endtime="20210205 20:02:21.579"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.578" endtime="20210205 20:02:21.580"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.581" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.581" endtime="20210205 20:02:21.581"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.650" level="INFO">${idvalue} = [63]</msg>
<status status="PASS" starttime="20210205 20:02:21.581" endtime="20210205 20:02:21.650"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:21.651" level="INFO">${responseid} = 63</msg>
<status status="PASS" starttime="20210205 20:02:21.650" endtime="20210205 20:02:21.651"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.651" endtime="20210205 20:02:21.652"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.652" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.652" endtime="20210205 20:02:21.652"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.580" endtime="20210205 20:02:21.653"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.517" endtime="20210205 20:02:21.653"></status>
</kw>
<kw name="${postid} = 64" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.655" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:21.654" endtime="20210205 20:02:21.655"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:21.710" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/64 
 path_url=/posts/64 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:21.711" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/64 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0f16219691182f5df72b2955d30bc6b71612573342; expires=Mon, 08-Mar-21 01:02:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '960', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-fG+p7wNrgpgJUc/3oEW9IALNB1s"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '08167594f700003dc1692a9000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=LVwhBy5v2DwzyglP0Tl1%2Boy5H6YtaXENSUKqOmyEKYlrPq2hS0AoNyASaWdzkwpl7d%2Bdjjz6M2FW6q7sDhI2RxD%2FHf5AhR94Drfk38LmNsijHPWE05bVk6f6iUkk"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2018f4b3dc1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 64,
  "title": "et fugit quas eum in in aperiam quod",
  "body": "id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaque aut aut qui"
} 
 </msg>
<msg timestamp="20210205 20:02:21.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.655" endtime="20210205 20:02:21.711"></status>
</kw>
<msg timestamp="20210205 20:02:21.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.653" endtime="20210205 20:02:21.712"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.714" endtime="20210205 20:02:21.717"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.713" endtime="20210205 20:02:21.717"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.712" endtime="20210205 20:02:21.718"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.719" endtime="20210205 20:02:21.720"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.718" endtime="20210205 20:02:21.720"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.721" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.721" endtime="20210205 20:02:21.721"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.785" level="INFO">${idvalue} = [64]</msg>
<status status="PASS" starttime="20210205 20:02:21.722" endtime="20210205 20:02:21.785"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:21.786" level="INFO">${responseid} = 64</msg>
<status status="PASS" starttime="20210205 20:02:21.786" endtime="20210205 20:02:21.787"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.787" endtime="20210205 20:02:21.788"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.789" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.788" endtime="20210205 20:02:21.789"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.720" endtime="20210205 20:02:21.789"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.653" endtime="20210205 20:02:21.789"></status>
</kw>
<kw name="${postid} = 65" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.791" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:21.791" endtime="20210205 20:02:21.792"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:21.847" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/65 
 path_url=/posts/65 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:21.847" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/65 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7e5ec4b737f1a7a3bebf6f8f610184321612573343; expires=Mon, 08-Mar-21 01:02:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '955', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"108-o7Djqn++3cXC+SK+HeS4ds9s4Dk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '6963', 'cf-request-id': '081675958100009246ac1e0000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=XBjgFgk7SU4YHMsM8A3ftKSkjD0YZQHTOBCfLgtd6hT%2FX%2Bp5qTa8cxsCehkLtJikYfJML%2BvtHuBa5GDlsL%2Bb%2BCAvOzP4NhwV2S7ajLoy3PH3S3u7cv2be8hdiIrd"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f202687f9246-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 65,
  "title": "consequatur id enim sunt et et",
  "body": "voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperiores et perferendis\nnatus id esse incidunt pariatur"
} 
 </msg>
<msg timestamp="20210205 20:02:21.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.792" endtime="20210205 20:02:21.848"></status>
</kw>
<msg timestamp="20210205 20:02:21.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.790" endtime="20210205 20:02:21.848"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.851" endtime="20210205 20:02:21.854"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.850" endtime="20210205 20:02:21.854"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.849" endtime="20210205 20:02:21.854"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.856" endtime="20210205 20:02:21.856"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.855" endtime="20210205 20:02:21.857"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.858" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.858" endtime="20210205 20:02:21.858"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.923" level="INFO">${idvalue} = [65]</msg>
<status status="PASS" starttime="20210205 20:02:21.858" endtime="20210205 20:02:21.923"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:21.924" level="INFO">${responseid} = 65</msg>
<status status="PASS" starttime="20210205 20:02:21.923" endtime="20210205 20:02:21.924"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.924" endtime="20210205 20:02:21.924"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.925" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.924" endtime="20210205 20:02:21.925"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.857" endtime="20210205 20:02:21.925"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.789" endtime="20210205 20:02:21.925"></status>
</kw>
<kw name="${postid} = 66" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.926" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:21.926" endtime="20210205 20:02:21.926"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:21.975" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/66 
 path_url=/posts/66 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:21.976" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/66 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d854cbe460873c0018016f784bf957cf01612573343; expires=Mon, 08-Mar-21 01:02:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '943', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-wkA8VfsJ18Eh0sMF7Ua9wR/8DVg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816759603000015bf0719b000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=jJ86b1POZosCB%2B7owRkSaV%2Bm7YxegaVsm5A%2FjXTzehillfWzH0KxTc53MGFO9dUOUVUkSSBsrI5RfWkMvS8mb%2B72tCYJMZeg3ZzzEzSN%2BWKXYMORqKHY7IE8cRn6"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2033d4c15bf-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 66,
  "title": "repudiandae ea animi iusto",
  "body": "officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusdam et nemo iusto saepe"
} 
 </msg>
<msg timestamp="20210205 20:02:21.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.927" endtime="20210205 20:02:21.976"></status>
</kw>
<msg timestamp="20210205 20:02:21.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.925" endtime="20210205 20:02:21.977"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:21.979" endtime="20210205 20:02:21.983"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.978" endtime="20210205 20:02:21.983"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.977" endtime="20210205 20:02:21.983"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:21.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:21.984" endtime="20210205 20:02:21.985"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.983" endtime="20210205 20:02:21.985"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:21.987" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:21.986" endtime="20210205 20:02:21.987"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.058" level="INFO">${idvalue} = [66]</msg>
<status status="PASS" starttime="20210205 20:02:21.987" endtime="20210205 20:02:22.058"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:22.059" level="INFO">${responseid} = 66</msg>
<status status="PASS" starttime="20210205 20:02:22.058" endtime="20210205 20:02:22.059"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:22.059" endtime="20210205 20:02:22.060"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.061" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:22.060" endtime="20210205 20:02:22.061"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.985" endtime="20210205 20:02:22.061"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:21.925" endtime="20210205 20:02:22.061"></status>
</kw>
<kw name="${postid} = 67" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:22.063" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:22.063" endtime="20210205 20:02:22.064"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:22.123" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/67 
 path_url=/posts/67 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:22.123" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/67 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc45aeb73a4d9f2f6b19494945bfd75241612573343; expires=Mon, 08-Mar-21 01:02:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '959', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10a-zdbQphdSEl28vma+RxuMlor5ACo"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '08167596910000e728d7237000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=uT9a63IAwKrDVAFGlkzJo84WOLfZ0CjEmRl7NX%2BTjEnVwB%2Fr8VjCOPqy1z%2FJS19nT4MbPeMYqhn7bR2kcOifn4lac6Pp%2FBney%2BMkPJQ2JlkjJNF1SyFN5DFtHWdD"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2041cb7e728-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 67,
  "title": "aliquid eos sed fuga est maxime repellendus",
  "body": "reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet\nnon sapiente et consequatur necessitatibus molestiae"
} 
 </msg>
<msg timestamp="20210205 20:02:22.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.064" endtime="20210205 20:02:22.124"></status>
</kw>
<msg timestamp="20210205 20:02:22.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.062" endtime="20210205 20:02:22.124"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:22.127" endtime="20210205 20:02:22.130"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.126" endtime="20210205 20:02:22.130"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.125" endtime="20210205 20:02:22.130"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:22.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.131" endtime="20210205 20:02:22.132"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.130" endtime="20210205 20:02:22.132"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.134" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:22.133" endtime="20210205 20:02:22.134"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.195" level="INFO">${idvalue} = [67]</msg>
<status status="PASS" starttime="20210205 20:02:22.134" endtime="20210205 20:02:22.195"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:22.197" level="INFO">${responseid} = 67</msg>
<status status="PASS" starttime="20210205 20:02:22.196" endtime="20210205 20:02:22.197"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:22.197" endtime="20210205 20:02:22.198"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.199" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:22.198" endtime="20210205 20:02:22.199"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.132" endtime="20210205 20:02:22.199"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.061" endtime="20210205 20:02:22.199"></status>
</kw>
<kw name="${postid} = 68" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:22.202" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:22.201" endtime="20210205 20:02:22.203"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:22.255" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/68 
 path_url=/posts/68 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:22.255" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/68 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da858bd53dd5c0b5d9e75821b946bfb3e1612573343; expires=Mon, 08-Mar-21 01:02:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '941', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ec-n7dxDg5V05y/RJHBgoUuNuvDA5M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675971c0000efedbd245000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=crnOzJ3m5nSw%2Flve9TRikRE10DcxP%2FnnXoE63yTZWvVhsh0FeFQlM7CcoTkfRq4B%2FcwFzs1wL6cz4d8PkzhmVgVxs1uHSbGPldbAUeQvVXgi1XzLLIC08Mzf5M%2Fh"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f204f9d8efed-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 68,
  "title": "odio quis facere architecto reiciendis optio",
  "body": "magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti quidem saepe porro velit"
} 
 </msg>
<msg timestamp="20210205 20:02:22.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.203" endtime="20210205 20:02:22.256"></status>
</kw>
<msg timestamp="20210205 20:02:22.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.200" endtime="20210205 20:02:22.256"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:22.259" endtime="20210205 20:02:22.263"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.258" endtime="20210205 20:02:22.264"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.257" endtime="20210205 20:02:22.264"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:22.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.265" endtime="20210205 20:02:22.266"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.264" endtime="20210205 20:02:22.266"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.268" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:22.268" endtime="20210205 20:02:22.268"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.339" level="INFO">${idvalue} = [68]</msg>
<status status="PASS" starttime="20210205 20:02:22.268" endtime="20210205 20:02:22.339"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:22.340" level="INFO">${responseid} = 68</msg>
<status status="PASS" starttime="20210205 20:02:22.339" endtime="20210205 20:02:22.340"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:22.340" endtime="20210205 20:02:22.341"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.342" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:22.341" endtime="20210205 20:02:22.342"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.267" endtime="20210205 20:02:22.342"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.200" endtime="20210205 20:02:22.342"></status>
</kw>
<kw name="${postid} = 69" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:22.344" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:22.343" endtime="20210205 20:02:22.344"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:22.407" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/69 
 path_url=/posts/69 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:22.407" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/69 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dfd1da9d7c1a2f28c79435dbd8abe121b1612573343; expires=Mon, 08-Mar-21 01:02:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '939', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"137-6SkfkEH2vZX2tDrUhH6X9K8msxE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '08167597af00003dec35104000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=f4nEuaNYWMeih2yq3ojNvSPkd1weeypM1KP%2BPTQfO2gDwH69YKfYqRIL%2FjSkISUsFvQU3%2F%2BU6Eat71AaX3eTxtAfVL7A2zAWa2PWkVt%2B08wLWsrqDZ7ENlVsulUA"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f205e9343dec-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 69,
  "title": "fugiat quod pariatur odit minima",
  "body": "officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\nsequi commodi repudiandae asperiores et saepe a"
} 
 </msg>
<msg timestamp="20210205 20:02:22.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.345" endtime="20210205 20:02:22.408"></status>
</kw>
<msg timestamp="20210205 20:02:22.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.342" endtime="20210205 20:02:22.409"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:22.411" endtime="20210205 20:02:22.414"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.410" endtime="20210205 20:02:22.414"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.409" endtime="20210205 20:02:22.414"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:22.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.416" endtime="20210205 20:02:22.416"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.414" endtime="20210205 20:02:22.416"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.418" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:22.417" endtime="20210205 20:02:22.418"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.487" level="INFO">${idvalue} = [69]</msg>
<status status="PASS" starttime="20210205 20:02:22.418" endtime="20210205 20:02:22.487"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:22.488" level="INFO">${responseid} = 69</msg>
<status status="PASS" starttime="20210205 20:02:22.487" endtime="20210205 20:02:22.488"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:22.488" endtime="20210205 20:02:22.489"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.490" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:22.489" endtime="20210205 20:02:22.490"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.417" endtime="20210205 20:02:22.490"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.342" endtime="20210205 20:02:22.490"></status>
</kw>
<kw name="${postid} = 70" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:22.492" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:22.492" endtime="20210205 20:02:22.493"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:22.613" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/70 
 path_url=/posts/70 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:22.613" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/70 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2bd9168693fad5e7e57e90d4748d3ed41612573343; expires=Mon, 08-Mar-21 01:02:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '954', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d4-rM/RXlmI+ICK+LslODlpNGE3yUw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675987d0000e6ccfd8d5000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=k8oTI9yv0Vs%2Fu2ygo9tfFQe2ejdVIdMfXkiz7d6ZIokvqzY1%2BvPFuJS%2FLsU6DdGRt3t%2Bi4NYuVwSjCT0k9bUJYhcfyXuqFYlUD8ss%2Fdoh0axxXkpMC%2B%2FQh%2Fv5KaA"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2072d5ce6cc-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 70,
  "title": "voluptatem laborum magni",
  "body": "sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore"
} 
 </msg>
<msg timestamp="20210205 20:02:22.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.493" endtime="20210205 20:02:22.614"></status>
</kw>
<msg timestamp="20210205 20:02:22.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.491" endtime="20210205 20:02:22.615"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:22.617" endtime="20210205 20:02:22.620"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.616" endtime="20210205 20:02:22.620"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.615" endtime="20210205 20:02:22.621"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:22.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.622" endtime="20210205 20:02:22.623"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.621" endtime="20210205 20:02:22.623"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.624" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:22.624" endtime="20210205 20:02:22.625"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.695" level="INFO">${idvalue} = [70]</msg>
<status status="PASS" starttime="20210205 20:02:22.625" endtime="20210205 20:02:22.695"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:22.696" level="INFO">${responseid} = 70</msg>
<status status="PASS" starttime="20210205 20:02:22.695" endtime="20210205 20:02:22.696"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:22.696" endtime="20210205 20:02:22.697"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.697" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:22.697" endtime="20210205 20:02:22.697"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.623" endtime="20210205 20:02:22.698"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.490" endtime="20210205 20:02:22.698"></status>
</kw>
<kw name="${postid} = 71" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:22.699" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:22.699" endtime="20210205 20:02:22.700"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:22.868" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/71 
 path_url=/posts/71 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:22.868" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/71 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3127da11cdb18ac4b74374fd1c8f8c681612573344; expires=Mon, 08-Mar-21 01:02:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '938', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e8-Yh7j20Q0i9NFG2BtR9OGdKEdmek"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816759982000015bbee25e000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=gPZqPTtLJi9mHmqPr%2B7b1dKZ0FanehTUSs9MMg5kcnoiQ0PFHGlpwIP2iKKnNeDKxIqcjXcikb%2FUakyKCQGwC1Lbld2KFBo1%2F5TfjdqpidCine%2B62ATXmcxTf1l3"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f208cbbc15bb-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 71,
  "title": "et iusto veniam et illum aut fuga",
  "body": "occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim velit est perferendis"
} 
 </msg>
<msg timestamp="20210205 20:02:22.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.700" endtime="20210205 20:02:22.869"></status>
</kw>
<msg timestamp="20210205 20:02:22.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.698" endtime="20210205 20:02:22.870"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:22.872" endtime="20210205 20:02:22.875"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.871" endtime="20210205 20:02:22.875"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.870" endtime="20210205 20:02:22.875"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:22.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.877" endtime="20210205 20:02:22.878"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.876" endtime="20210205 20:02:22.878"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.879" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:22.879" endtime="20210205 20:02:22.879"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.948" level="INFO">${idvalue} = [71]</msg>
<status status="PASS" starttime="20210205 20:02:22.880" endtime="20210205 20:02:22.949"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:22.950" level="INFO">${responseid} = 71</msg>
<status status="PASS" starttime="20210205 20:02:22.949" endtime="20210205 20:02:22.950"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:22.950" endtime="20210205 20:02:22.951"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:22.951" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:22.951" endtime="20210205 20:02:22.951"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.878" endtime="20210205 20:02:22.951"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.698" endtime="20210205 20:02:22.952"></status>
</kw>
<kw name="${postid} = 72" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:22.953" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:22.953" endtime="20210205 20:02:22.954"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:23.124" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/72 
 path_url=/posts/72 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:23.124" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/72 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d953c3623559e28730564391a7d6275591612573344; expires=Mon, 08-Mar-21 01:02:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '935', 'X-Ratelimit-Reset': '1612110657', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"116-H6k0vQJtj/XCaxWK+1+y9a8ry70"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816759a0b00003dbb3ab80000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=BpfIEU62FsQd3ED7Ymybz0LjipkAHwknLNyoVsoQeML4ulK8n%2BCSSo%2FoXMNuwau19amOvnbx%2FSGrguYIePz3Uz5hv4c8RfaJ3yco6f2ue50yjxyiCfjqLhwkTeZW"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f209adc13dbb-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 72,
  "title": "sint hic doloribus consequatur eos non id",
  "body": "quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque id sunt ut aut accusamus\nsunt consectetur expedita inventore velit"
} 
 </msg>
<msg timestamp="20210205 20:02:23.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.954" endtime="20210205 20:02:23.125"></status>
</kw>
<msg timestamp="20210205 20:02:23.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:22.952" endtime="20210205 20:02:23.125"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:23.128" endtime="20210205 20:02:23.131"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.127" endtime="20210205 20:02:23.131"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.126" endtime="20210205 20:02:23.132"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:23.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.133" endtime="20210205 20:02:23.134"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.132" endtime="20210205 20:02:23.134"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.136" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:23.135" endtime="20210205 20:02:23.136"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.207" level="INFO">${idvalue} = [72]</msg>
<status status="PASS" starttime="20210205 20:02:23.136" endtime="20210205 20:02:23.207"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:23.208" level="INFO">${responseid} = 72</msg>
<status status="PASS" starttime="20210205 20:02:23.207" endtime="20210205 20:02:23.208"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:23.208" endtime="20210205 20:02:23.209"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.210" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:23.209" endtime="20210205 20:02:23.210"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.134" endtime="20210205 20:02:23.210"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:22.952" endtime="20210205 20:02:23.210"></status>
</kw>
<kw name="${postid} = 73" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:23.212" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:23.211" endtime="20210205 20:02:23.212"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:23.404" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/73 
 path_url=/posts/73 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:23.404" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/73 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9ce03e76cedabe25434f2f47ed81704d1612573344; expires=Mon, 08-Mar-21 01:02:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '936', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11f-rOkoGp9hOJP88vceK/3kAJdMgVE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816759b190000926493974000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=KVpxc10YnXfT1Irh3np1dfG79%2FVlmTO6upbSM1e%2BAWpVug3lTO%2FXZBE4q9KpkQ1JhjQQTjZ%2BZ6VGyRQqQ5kDpRZQtQ50zVTI%2BWk6fKEOgbSa4IXsJhL8M5vcpR7j"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f20b5e549264-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 73,
  "title": "consequuntur deleniti eos quia temporibus ab aliquid at",
  "body": "voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatur\ntempore cumque quae est et\net in consequuntur voluptatem voluptates aut"
} 
 </msg>
<msg timestamp="20210205 20:02:23.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.213" endtime="20210205 20:02:23.405"></status>
</kw>
<msg timestamp="20210205 20:02:23.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.210" endtime="20210205 20:02:23.405"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:23.408" endtime="20210205 20:02:23.411"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.407" endtime="20210205 20:02:23.411"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.406" endtime="20210205 20:02:23.411"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:23.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.412" endtime="20210205 20:02:23.413"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.411" endtime="20210205 20:02:23.413"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.415" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:23.414" endtime="20210205 20:02:23.415"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.483" level="INFO">${idvalue} = [73]</msg>
<status status="PASS" starttime="20210205 20:02:23.415" endtime="20210205 20:02:23.483"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:23.484" level="INFO">${responseid} = 73</msg>
<status status="PASS" starttime="20210205 20:02:23.484" endtime="20210205 20:02:23.484"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:23.485" endtime="20210205 20:02:23.485"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.486" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:23.485" endtime="20210205 20:02:23.486"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.414" endtime="20210205 20:02:23.486"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.210" endtime="20210205 20:02:23.486"></status>
</kw>
<kw name="${postid} = 74" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:23.488" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:23.488" endtime="20210205 20:02:23.489"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:23.547" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/74 
 path_url=/posts/74 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:23.547" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/74 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da99f71379e238cf15a0699c75cc814dd1612573344; expires=Mon, 08-Mar-21 01:02:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612369190', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"128-7qIwxKiVOzrfywOEfThc/blClHw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816759c2500003e1562171000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=DlF4dAgT0ey8okxsMz9AlCqTZThTL5Jg0qPGH6MQKaCNmBX%2FdK2syH9UtXw49FgUqbkKOuNm1QF4CR6jpUP6rbhuOfKeKRvr60ct1Y22gRtFLEXH8HDkWfmxSTAt"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f20d091a3e15-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 74,
  "title": "enim unde ratione doloribus quas enim ut sit sapiente",
  "body": "odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magnam et quam\nblanditiis est itaque\nquo et tenetur ratione occaecati molestiae tempora"
} 
 </msg>
<msg timestamp="20210205 20:02:23.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.489" endtime="20210205 20:02:23.548"></status>
</kw>
<msg timestamp="20210205 20:02:23.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.487" endtime="20210205 20:02:23.549"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:23.551" endtime="20210205 20:02:23.554"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.550" endtime="20210205 20:02:23.555"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.549" endtime="20210205 20:02:23.555"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:23.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.556" endtime="20210205 20:02:23.557"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.555" endtime="20210205 20:02:23.557"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.559" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:23.558" endtime="20210205 20:02:23.559"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.629" level="INFO">${idvalue} = [74]</msg>
<status status="PASS" starttime="20210205 20:02:23.559" endtime="20210205 20:02:23.629"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:23.630" level="INFO">${responseid} = 74</msg>
<status status="PASS" starttime="20210205 20:02:23.629" endtime="20210205 20:02:23.630"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:23.630" endtime="20210205 20:02:23.631"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.632" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:23.631" endtime="20210205 20:02:23.632"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.557" endtime="20210205 20:02:23.632"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.486" endtime="20210205 20:02:23.632"></status>
</kw>
<kw name="${postid} = 75" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:23.634" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:23.633" endtime="20210205 20:02:23.635"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:23.727" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/75 
 path_url=/posts/75 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:23.727" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/75 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9a80dd327700685c5e9412906bfc9ee11612573344; expires=Mon, 08-Mar-21 01:02:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '931', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"12d-f7+LvQ2H9gp0KtIQ9o5Rm53qeaE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '0816759cdd00000ca9f8903000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=OQgVcibZh5ZKOtNKxbUOWq1LiCHwH6J%2BKZzhwM6%2FOn5oyKoXJUmSGY5rUSrbQqgC8skPVm2kmF7iHH8Dpojt8d5m45bRPEvX9LSSst4f1OJ3Ka7NWKqBdzk%2FwMkC"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f20e2e170ca9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 75,
  "title": "dignissimos eum dolor ut enim et delectus in",
  "body": "commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui delectus facilis temporibus\nrerum amet et nemo voluptate expedita adipisci error dolorem"
} 
 </msg>
<msg timestamp="20210205 20:02:23.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.635" endtime="20210205 20:02:23.728"></status>
</kw>
<msg timestamp="20210205 20:02:23.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.632" endtime="20210205 20:02:23.728"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:23.731" endtime="20210205 20:02:23.734"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.730" endtime="20210205 20:02:23.734"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.729" endtime="20210205 20:02:23.734"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:23.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.735" endtime="20210205 20:02:23.736"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.734" endtime="20210205 20:02:23.736"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.738" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:23.737" endtime="20210205 20:02:23.738"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.808" level="INFO">${idvalue} = [75]</msg>
<status status="PASS" starttime="20210205 20:02:23.738" endtime="20210205 20:02:23.808"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:23.809" level="INFO">${responseid} = 75</msg>
<status status="PASS" starttime="20210205 20:02:23.808" endtime="20210205 20:02:23.809"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:23.809" endtime="20210205 20:02:23.810"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.810" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:23.810" endtime="20210205 20:02:23.810"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.737" endtime="20210205 20:02:23.811"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.632" endtime="20210205 20:02:23.811"></status>
</kw>
<kw name="${postid} = 76" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:23.813" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:23.812" endtime="20210205 20:02:23.813"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:23.912" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/76 
 path_url=/posts/76 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:23.914" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/76 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8801d3fec0c5ce5cc5c031c311e8524d1612573345; expires=Mon, 08-Mar-21 01:02:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '947', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"cc-u0/g+lWkxIsGyIKpelypYLpuJj8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816759d9200000cb9f69e0000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=psFrYqI9GW8k4Otq3F2En1G4dd%2FRlMLGPgch7rb7nm0IQqwhO42Q3ugnTAEZ6Vq106fw0nzu8Or1b6RjIB3sy1sRj0wSjhxzwdR3DUUwRI9k8Z4TbPTPT0q8RCiF"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f20f58980cb9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 76,
  "title": "doloremque officiis ad et non perferendis",
  "body": "ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio"
} 
 </msg>
<msg timestamp="20210205 20:02:23.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.813" endtime="20210205 20:02:23.914"></status>
</kw>
<msg timestamp="20210205 20:02:23.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.811" endtime="20210205 20:02:23.915"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:23.917" endtime="20210205 20:02:23.921"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.915" endtime="20210205 20:02:23.921"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.915" endtime="20210205 20:02:23.921"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:23.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.923" endtime="20210205 20:02:23.924"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.921" endtime="20210205 20:02:23.924"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.925" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:23.925" endtime="20210205 20:02:23.925"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.994" level="INFO">${idvalue} = [76]</msg>
<status status="PASS" starttime="20210205 20:02:23.926" endtime="20210205 20:02:23.994"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:23.995" level="INFO">${responseid} = 76</msg>
<status status="PASS" starttime="20210205 20:02:23.994" endtime="20210205 20:02:23.995"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:23.995" endtime="20210205 20:02:23.996"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:23.996" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:23.996" endtime="20210205 20:02:23.996"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.924" endtime="20210205 20:02:23.997"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.811" endtime="20210205 20:02:23.997"></status>
</kw>
<kw name="${postid} = 77" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:23.999" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:23.998" endtime="20210205 20:02:23.999"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:24.051" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/77 
 path_url=/posts/77 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:24.051" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/77 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcc8d66c5e1f574eb7b1eb30cd3d496131612573345; expires=Mon, 08-Mar-21 01:02:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '995', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11f-2lbe4Q56bYTg/IcJf6JOSbSCscI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816759e1f0000e845c793e000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=TKRJCzXuiiFgPopIhHWQLIRkqorMLyl8i3sanid%2F0U8eDUHLHmB5RaQwNmZB9BKmeX3Z1FX7CElMtePcpOz6vFMn1Fh5BhB52AJVnjrlb9qtgKqPWcb2zvDlfYtu"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2103e34e845-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 77,
  "title": "necessitatibus quasi exercitationem odio",
  "body": "modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident"
} 
 </msg>
<msg timestamp="20210205 20:02:24.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.999" endtime="20210205 20:02:24.052"></status>
</kw>
<msg timestamp="20210205 20:02:24.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:23.997" endtime="20210205 20:02:24.052"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:24.055" endtime="20210205 20:02:24.058"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.054" endtime="20210205 20:02:24.058"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.053" endtime="20210205 20:02:24.058"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:24.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.060" endtime="20210205 20:02:24.060"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.059" endtime="20210205 20:02:24.061"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.062" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:24.062" endtime="20210205 20:02:24.062"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.136" level="INFO">${idvalue} = [77]</msg>
<status status="PASS" starttime="20210205 20:02:24.062" endtime="20210205 20:02:24.136"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:24.137" level="INFO">${responseid} = 77</msg>
<status status="PASS" starttime="20210205 20:02:24.136" endtime="20210205 20:02:24.137"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:24.137" endtime="20210205 20:02:24.138"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.139" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:24.138" endtime="20210205 20:02:24.139"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.061" endtime="20210205 20:02:24.139"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:23.997" endtime="20210205 20:02:24.139"></status>
</kw>
<kw name="${postid} = 78" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:24.141" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:24.140" endtime="20210205 20:02:24.141"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:24.258" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/78 
 path_url=/posts/78 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:24.258" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/78 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dda6787e26aaa27238be53374e85ed0be1612573345; expires=Mon, 08-Mar-21 01:02:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d3-xKs0MgAtIORio5QR/VxM9bC/XYc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '0816759ee600003ddfe78e1000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=d%2BTOn0ungwmRaHP1zlN%2F0WoscUKBTM2sSSHmOCUuvv1Zlp8vMeyWI7eHa48ipluummnVuhilb6TZD3wuV9ClqXnzPSvjRAvc4WzII2Jt%2FpTvbkGkwWlJnmha4YQ4"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2117bf43ddf-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 78,
  "title": "quam voluptatibus rerum veritatis",
  "body": "nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus"
} 
 </msg>
<msg timestamp="20210205 20:02:24.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.142" endtime="20210205 20:02:24.259"></status>
</kw>
<msg timestamp="20210205 20:02:24.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.139" endtime="20210205 20:02:24.260"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:24.262" endtime="20210205 20:02:24.265"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.261" endtime="20210205 20:02:24.265"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.260" endtime="20210205 20:02:24.266"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:24.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.267" endtime="20210205 20:02:24.268"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.266" endtime="20210205 20:02:24.268"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.269" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:24.269" endtime="20210205 20:02:24.269"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.342" level="INFO">${idvalue} = [78]</msg>
<status status="PASS" starttime="20210205 20:02:24.270" endtime="20210205 20:02:24.342"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:24.343" level="INFO">${responseid} = 78</msg>
<status status="PASS" starttime="20210205 20:02:24.342" endtime="20210205 20:02:24.343"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:24.343" endtime="20210205 20:02:24.344"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.344" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:24.344" endtime="20210205 20:02:24.344"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.268" endtime="20210205 20:02:24.345"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.139" endtime="20210205 20:02:24.345"></status>
</kw>
<kw name="${postid} = 79" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:24.346" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:24.346" endtime="20210205 20:02:24.347"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:24.507" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/79 
 path_url=/posts/79 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:24.508" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/79 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d010718bae6e87c4672796e88da353f751612573345; expires=Mon, 08-Mar-21 01:02:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '930', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"110-2pubCm1Sfl7Y7qFtirsYZCcorgA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '0816759fe70000e72cac3c9000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=52RU5kBh2L7eqsMC96fW2oCaUjb75400VCt6OyaAEp5oVCkLEu9V%2FD3XimI47OUqhytfWLjeCCwQxMnCi%2FXflcVEhucLShBkja0o8JUqEUoKvytyptBpHdCXUQ8E"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2130939e72c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 79,
  "title": "pariatur consequatur quia magnam autem omnis non amet",
  "body": "libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam molestiae ducimus est\nofficiis esse molestiae iste et quos"
} 
 </msg>
<msg timestamp="20210205 20:02:24.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.347" endtime="20210205 20:02:24.508"></status>
</kw>
<msg timestamp="20210205 20:02:24.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.345" endtime="20210205 20:02:24.509"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:24.512" endtime="20210205 20:02:24.515"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.510" endtime="20210205 20:02:24.515"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.509" endtime="20210205 20:02:24.515"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:24.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.516" endtime="20210205 20:02:24.517"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.515" endtime="20210205 20:02:24.517"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.519" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:24.518" endtime="20210205 20:02:24.519"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.601" level="INFO">${idvalue} = [79]</msg>
<status status="PASS" starttime="20210205 20:02:24.519" endtime="20210205 20:02:24.601"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:24.602" level="INFO">${responseid} = 79</msg>
<status status="PASS" starttime="20210205 20:02:24.601" endtime="20210205 20:02:24.602"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:24.602" endtime="20210205 20:02:24.603"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.604" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:24.603" endtime="20210205 20:02:24.604"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.517" endtime="20210205 20:02:24.604"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.345" endtime="20210205 20:02:24.604"></status>
</kw>
<kw name="${postid} = 80" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:24.607" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:24.607" endtime="20210205 20:02:24.608"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:24.820" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/80 
 path_url=/posts/80 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:24.820" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/80 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db14cfda02c0aea3baa3b6f68323dcf901612573346; expires=Mon, 08-Mar-21 01:02:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '993', 'X-Ratelimit-Reset': '1611642816', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11c-0HY/hHFa5y+uiyBfjGo3n4UDzu8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675a0f20000e6d8fa232000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=iYYJqxSq8V%2F%2B8BhPJtVq%2F3LEM7v5nhU4RHMXQqp5pE1RGcWFxzTrimtyfcI7C9VsqkJ0905VAvsTL2dM4WgTrpNmW%2FOXB3DBiOy8Xn6NraMJb1C87AeeAr0fgNRp"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f214bd65e6d8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 80,
  "title": "labore in ex et explicabo corporis aut quas",
  "body": "ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias provident\nminus incidunt vero fugit rerum sint sunt excepturi provident"
} 
 </msg>
<msg timestamp="20210205 20:02:24.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.608" endtime="20210205 20:02:24.821"></status>
</kw>
<msg timestamp="20210205 20:02:24.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.604" endtime="20210205 20:02:24.822"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:24.824" endtime="20210205 20:02:24.828"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.823" endtime="20210205 20:02:24.828"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.822" endtime="20210205 20:02:24.828"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:24.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.830" endtime="20210205 20:02:24.830"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.829" endtime="20210205 20:02:24.831"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.832" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:24.832" endtime="20210205 20:02:24.832"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.898" level="INFO">${idvalue} = [80]</msg>
<status status="PASS" starttime="20210205 20:02:24.832" endtime="20210205 20:02:24.898"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:24.899" level="INFO">${responseid} = 80</msg>
<status status="PASS" starttime="20210205 20:02:24.898" endtime="20210205 20:02:24.899"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:24.899" endtime="20210205 20:02:24.900"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:24.901" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:24.900" endtime="20210205 20:02:24.901"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.831" endtime="20210205 20:02:24.901"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.604" endtime="20210205 20:02:24.901"></status>
</kw>
<kw name="${postid} = 81" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:24.903" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:24.903" endtime="20210205 20:02:24.904"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:25.039" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/81 
 path_url=/posts/81 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:25.039" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/81 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db8c78e51349ac86dcfa97cece0ca44ba1612573346; expires=Mon, 08-Mar-21 01:02:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '928', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"132-WQvU4RaGGtekXO5F/gjY3m5r2rE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675a1fb0000154e692f6000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=7KUJmFKmnV81Asf8NfdBvcSHsODUvOCk75WBkHPtRKNDmS7FYhTpz1aiohITOlP%2FRowR0uMarzcTf76F08ZLR7A8FFE5a0ec44bOetdL%2FIl9NmFkKhoFIvRzipMg"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2165d6c154e-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 81,
  "title": "tempora rem veritatis voluptas quo dolores vero",
  "body": "facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum non ratione velit laboriosam quis consequuntur\nex officiis minima doloremque voluptas ut aut"
} 
 </msg>
<msg timestamp="20210205 20:02:25.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.904" endtime="20210205 20:02:25.040"></status>
</kw>
<msg timestamp="20210205 20:02:25.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:24.902" endtime="20210205 20:02:25.040"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:25.043" endtime="20210205 20:02:25.046"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.042" endtime="20210205 20:02:25.046"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.041" endtime="20210205 20:02:25.047"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:25.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.048" endtime="20210205 20:02:25.049"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.047" endtime="20210205 20:02:25.049"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.050" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:25.050" endtime="20210205 20:02:25.050"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.123" level="INFO">${idvalue} = [81]</msg>
<status status="PASS" starttime="20210205 20:02:25.051" endtime="20210205 20:02:25.123"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:25.124" level="INFO">${responseid} = 81</msg>
<status status="PASS" starttime="20210205 20:02:25.123" endtime="20210205 20:02:25.124"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:25.124" endtime="20210205 20:02:25.125"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.126" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:25.125" endtime="20210205 20:02:25.126"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.049" endtime="20210205 20:02:25.126"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:24.901" endtime="20210205 20:02:25.126"></status>
</kw>
<kw name="${postid} = 82" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:25.128" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:25.127" endtime="20210205 20:02:25.128"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:25.287" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/82 
 path_url=/posts/82 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:25.287" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/82 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=deb06593be5bd4575b83131d709ffee301612573346; expires=Mon, 08-Mar-21 01:02:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '927', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11c-eeFdAk1e1gEi8uyXsudyKBm1kV0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675a2f40000e6e4723b9000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=9kpo%2Bd33hxAM2lKvU2trXt%2BoEyHzR9UemwCeOa%2F59eG%2FyFOElUjU8MadGYctGxwWkvOW6uVw0W3kTQoGoMxt3hWUwjtGPCNBjNEXWr%2FmLiVSaUJg4z2wHF%2B6CIu6"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f217e891e6e4-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 82,
  "title": "laudantium voluptate suscipit sunt enim enim",
  "body": "ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus adipisci\ndolor enim assumenda soluta laboriosam amet iste delectus hic"
} 
 </msg>
<msg timestamp="20210205 20:02:25.288" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.129" endtime="20210205 20:02:25.288"></status>
</kw>
<msg timestamp="20210205 20:02:25.288" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.126" endtime="20210205 20:02:25.288"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:25.291" endtime="20210205 20:02:25.294"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.290" endtime="20210205 20:02:25.294"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.289" endtime="20210205 20:02:25.294"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:25.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.296" endtime="20210205 20:02:25.296"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.295" endtime="20210205 20:02:25.297"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.298" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:25.298" endtime="20210205 20:02:25.298"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.372" level="INFO">${idvalue} = [82]</msg>
<status status="PASS" starttime="20210205 20:02:25.299" endtime="20210205 20:02:25.372"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:25.373" level="INFO">${responseid} = 82</msg>
<status status="PASS" starttime="20210205 20:02:25.372" endtime="20210205 20:02:25.373"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:25.373" endtime="20210205 20:02:25.374"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.374" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:25.374" endtime="20210205 20:02:25.374"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.297" endtime="20210205 20:02:25.375"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.126" endtime="20210205 20:02:25.375"></status>
</kw>
<kw name="${postid} = 83" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:25.376" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:25.376" endtime="20210205 20:02:25.377"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:25.526" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/83 
 path_url=/posts/83 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:25.526" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/83 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db8c78e51349ac86dcfa97cece0ca44ba1612573346; expires=Mon, 08-Mar-21 01:02:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '926', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11d-e5gcZg196MbfLRv+N5/t/INg4U4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675a37f0000154e4700f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Av3ipx4GSMdDFAXIVx3MoQgCy87mvDxoiHWneXbtGHOqf1ZIOxiI1bXzTVw6ZepQE5H2kIK9PaZkU72tZxQTWbrdaShziuDSHlad%2FcurBdmhrGZUN61x%2BfzuLCwX"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f218cc5e154e-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 83,
  "title": "odit et voluptates doloribus alias odio et",
  "body": "est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\nreprehenderit eius rem quibusdam"
} 
 </msg>
<msg timestamp="20210205 20:02:25.527" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.377" endtime="20210205 20:02:25.527"></status>
</kw>
<msg timestamp="20210205 20:02:25.527" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.375" endtime="20210205 20:02:25.527"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:25.530" endtime="20210205 20:02:25.532"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.529" endtime="20210205 20:02:25.533"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.528" endtime="20210205 20:02:25.533"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:25.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.534" endtime="20210205 20:02:25.535"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.533" endtime="20210205 20:02:25.535"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.537" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:25.536" endtime="20210205 20:02:25.537"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.608" level="INFO">${idvalue} = [83]</msg>
<status status="PASS" starttime="20210205 20:02:25.537" endtime="20210205 20:02:25.608"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:25.609" level="INFO">${responseid} = 83</msg>
<status status="PASS" starttime="20210205 20:02:25.609" endtime="20210205 20:02:25.609"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:25.610" endtime="20210205 20:02:25.610"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.611" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:25.610" endtime="20210205 20:02:25.611"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.535" endtime="20210205 20:02:25.611"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.375" endtime="20210205 20:02:25.611"></status>
</kw>
<kw name="${postid} = 84" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:25.613" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:25.613" endtime="20210205 20:02:25.614"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:25.660" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/84 
 path_url=/posts/84 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:25.660" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/84 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d63082f278ee2f2025b7b1a500a95be7b1612573346; expires=Mon, 08-Mar-21 01:02:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '925', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10f-9j78zFP2xPokwlOnDdjXgjDNtRw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '081675a4690000e76c17086000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=fG4JR2lq3yzf2%2Bvpw3OH8sSMj94P9qjgxJTWKdybXbWSMu9rkcUlaaCmDJCuc9lqPsmPGp%2FqC9USC4Ao4dkkSc6hALujt1%2BeugysxruL2knm2CrGPvMzRxxgAFP7"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f21a4b85e76c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 84,
  "title": "optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut",
  "body": "sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique veniam\nrecusandae dignissimos dolor incidunt consequatur odio"
} 
 </msg>
<msg timestamp="20210205 20:02:25.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.614" endtime="20210205 20:02:25.661"></status>
</kw>
<msg timestamp="20210205 20:02:25.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.612" endtime="20210205 20:02:25.661"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:25.664" endtime="20210205 20:02:25.667"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.662" endtime="20210205 20:02:25.667"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.661" endtime="20210205 20:02:25.667"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:25.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.669" endtime="20210205 20:02:25.669"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.667" endtime="20210205 20:02:25.670"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.671" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:25.671" endtime="20210205 20:02:25.671"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.743" level="INFO">${idvalue} = [84]</msg>
<status status="PASS" starttime="20210205 20:02:25.671" endtime="20210205 20:02:25.743"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:25.744" level="INFO">${responseid} = 84</msg>
<status status="PASS" starttime="20210205 20:02:25.743" endtime="20210205 20:02:25.744"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:25.744" endtime="20210205 20:02:25.745"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.746" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:25.745" endtime="20210205 20:02:25.746"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.670" endtime="20210205 20:02:25.746"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.611" endtime="20210205 20:02:25.746"></status>
</kw>
<kw name="${postid} = 85" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:25.748" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:25.747" endtime="20210205 20:02:25.748"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:25.837" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/85 
 path_url=/posts/85 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:25.837" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/85 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d48d4dd7771e8d846785fd4748e70d19a1612573347; expires=Mon, 08-Mar-21 01:02:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '924', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-EiZY//e3eHc6o7YCr0c2BxbG4NU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675a5170000e770b71b3000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=F8WyVCNPG4JDNS4wjhl4lvpo7ZlDdZShNHMCwfaXYJuR%2FoMFrdXb%2FEuvstVpP%2Fr2M%2BH71ZZN4Pkj1PgL91DCTvf4%2Bg1Wsk4cNUjbHuYBPcxX4JjAYn7UWFrT8F1D"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f21b5aade770-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 85,
  "title": "dolore veritatis porro provident adipisci blanditiis et sunt",
  "body": "similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam sint sed tempora\nenim provident pariatur praesentium atque animi amet ratione"
} 
 </msg>
<msg timestamp="20210205 20:02:25.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.749" endtime="20210205 20:02:25.838"></status>
</kw>
<msg timestamp="20210205 20:02:25.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.746" endtime="20210205 20:02:25.838"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:25.841" endtime="20210205 20:02:25.844"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.839" endtime="20210205 20:02:25.844"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.838" endtime="20210205 20:02:25.844"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:25.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.846" endtime="20210205 20:02:25.846"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.845" endtime="20210205 20:02:25.847"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.848" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:25.848" endtime="20210205 20:02:25.848"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.968" level="INFO">${idvalue} = [85]</msg>
<status status="PASS" starttime="20210205 20:02:25.848" endtime="20210205 20:02:25.969"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:25.970" level="INFO">${responseid} = 85</msg>
<status status="PASS" starttime="20210205 20:02:25.969" endtime="20210205 20:02:25.970"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:25.970" endtime="20210205 20:02:25.970"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:25.971" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:25.971" endtime="20210205 20:02:25.971"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.847" endtime="20210205 20:02:25.971"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.746" endtime="20210205 20:02:25.971"></status>
</kw>
<kw name="${postid} = 86" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:25.973" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:25.973" endtime="20210205 20:02:25.974"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:26.128" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/86 
 path_url=/posts/86 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:26.129" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/86 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d22600ba378d670d4f761fa77fa9c76131612573347; expires=Mon, 08-Mar-21 01:02:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '923', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"102-z1kgT9P52YzKL5Lr1auwY9AtvAY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675a6360000e83da035d000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=hvYH9Hgmz208EPM3rSpX6faOZefhgZvLHa3setdsEYRAjRsobMHD5EXWlwaqvq7lmzJp378pRtsBy86CVAxLaI28Z35e9Hmyu%2B%2FvO4yDhEaCEaFeAu5vpsNAnqJQ"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f21d2ffae83d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 86,
  "title": "placeat quia et porro iste",
  "body": "quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel explicabo autem\nasperiores pariatur deserunt optio"
} 
 </msg>
<msg timestamp="20210205 20:02:26.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.974" endtime="20210205 20:02:26.129"></status>
</kw>
<msg timestamp="20210205 20:02:26.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:25.972" endtime="20210205 20:02:26.130"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:26.132" endtime="20210205 20:02:26.135"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.131" endtime="20210205 20:02:26.135"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.130" endtime="20210205 20:02:26.136"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:26.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.137" endtime="20210205 20:02:26.137"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.136" endtime="20210205 20:02:26.138"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.139" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:26.139" endtime="20210205 20:02:26.140"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.212" level="INFO">${idvalue} = [86]</msg>
<status status="PASS" starttime="20210205 20:02:26.140" endtime="20210205 20:02:26.212"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:26.213" level="INFO">${responseid} = 86</msg>
<status status="PASS" starttime="20210205 20:02:26.213" endtime="20210205 20:02:26.213"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:26.213" endtime="20210205 20:02:26.214"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.215" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:26.214" endtime="20210205 20:02:26.215"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.138" endtime="20210205 20:02:26.215"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:25.972" endtime="20210205 20:02:26.215"></status>
</kw>
<kw name="${postid} = 87" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:26.217" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:26.216" endtime="20210205 20:02:26.218"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:26.383" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/87 
 path_url=/posts/87 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:26.383" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/87 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da100eee8383cd633e3cc6a684c6187d31612573347; expires=Mon, 08-Mar-21 01:02:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '922', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"c1-StXbFLxw6d815/mITyDVkJUK2xI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '081675a73400003e3969bf8000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=LaRJzl9eKjGZLlCL1dupD8fSVoRjxcwcfJA%2B%2B17e0x2FXA0tCEQhVBu8YJdzvWMfTLddyHnYIm0ZMbG8WHU2nvbB16u9FZBv6S8nWfRzRlYVD4DmSP9VWecaL464"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f21eb8d53e39-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 87,
  "title": "nostrum quis quasi placeat",
  "body": "eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est"
} 
 </msg>
<msg timestamp="20210205 20:02:26.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.219" endtime="20210205 20:02:26.384"></status>
</kw>
<msg timestamp="20210205 20:02:26.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.215" endtime="20210205 20:02:26.384"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:26.387" endtime="20210205 20:02:26.390"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.386" endtime="20210205 20:02:26.390"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.385" endtime="20210205 20:02:26.390"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:26.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.392" endtime="20210205 20:02:26.392"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.391" endtime="20210205 20:02:26.393"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.394" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:26.394" endtime="20210205 20:02:26.394"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.463" level="INFO">${idvalue} = [87]</msg>
<status status="PASS" starttime="20210205 20:02:26.394" endtime="20210205 20:02:26.463"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:26.464" level="INFO">${responseid} = 87</msg>
<status status="PASS" starttime="20210205 20:02:26.463" endtime="20210205 20:02:26.464"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:26.464" endtime="20210205 20:02:26.465"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.465" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:26.465" endtime="20210205 20:02:26.465"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.393" endtime="20210205 20:02:26.466"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.215" endtime="20210205 20:02:26.466"></status>
</kw>
<kw name="${postid} = 88" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:26.468" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:26.467" endtime="20210205 20:02:26.468"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:26.629" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/88 
 path_url=/posts/88 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:26.629" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/88 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da081bf890c131e35675f3b26d6f4c45d1612573347; expires=Mon, 08-Mar-21 01:02:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '937', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"bf-99RNmrovk8IKMxPgFxxzF7hL4oc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '081675a830000015bb958ee000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=REOaw8HuHCYfs7PAPDiMQzrqh67p8lYYYJ8GO6xednMpK5xzZS9jmFC3WBgF9bqv8dMGEIFE2iQZjbqiM7wWkCv4bO2m0Y9s4MjeBSTy0Wm6725LjOkPhCtX23P2"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2204cae15bb-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 88,
  "title": "sapiente omnis fugit eos",
  "body": "consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed"
} 
 </msg>
<msg timestamp="20210205 20:02:26.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.468" endtime="20210205 20:02:26.630"></status>
</kw>
<msg timestamp="20210205 20:02:26.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.466" endtime="20210205 20:02:26.631"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:26.633" endtime="20210205 20:02:26.636"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.632" endtime="20210205 20:02:26.636"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.631" endtime="20210205 20:02:26.637"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:26.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.638" endtime="20210205 20:02:26.639"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.637" endtime="20210205 20:02:26.639"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.640" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:26.640" endtime="20210205 20:02:26.640"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.712" level="INFO">${idvalue} = [88]</msg>
<status status="PASS" starttime="20210205 20:02:26.640" endtime="20210205 20:02:26.712"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:26.713" level="INFO">${responseid} = 88</msg>
<status status="PASS" starttime="20210205 20:02:26.712" endtime="20210205 20:02:26.713"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:26.713" endtime="20210205 20:02:26.714"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.714" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:26.714" endtime="20210205 20:02:26.714"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.639" endtime="20210205 20:02:26.715"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.466" endtime="20210205 20:02:26.715"></status>
</kw>
<kw name="${postid} = 89" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:26.716" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:26.716" endtime="20210205 20:02:26.717"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:26.877" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/89 
 path_url=/posts/89 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:26.877" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/89 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d6fc3ba851f64ef4832bd97992f8208071612573348; expires=Mon, 08-Mar-21 01:02:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '935', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-AJIAh/kcPdTbwy1rCjIlUhHPTtE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675a9290000e728b3356000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=aalSkkQxCX%2BiDhQXqw6bImAPb6UuNPFJjstOAgH9TpnwEEFly5YCUBtCiDWffSC1AghIHg8K2cc1kZMsuTdsP2yisDbtevlEiElzz98wmuOsKI6Cz3E9JHDvyk3z"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f221d9b2e728-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 89,
  "title": "sint soluta et vel magnam aut ut sed qui",
  "body": "repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\ntempore quas est"
} 
 </msg>
<msg timestamp="20210205 20:02:26.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.717" endtime="20210205 20:02:26.878"></status>
</kw>
<msg timestamp="20210205 20:02:26.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.715" endtime="20210205 20:02:26.878"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:26.882" endtime="20210205 20:02:26.884"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.880" endtime="20210205 20:02:26.885"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.879" endtime="20210205 20:02:26.885"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:26.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.886" endtime="20210205 20:02:26.887"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.885" endtime="20210205 20:02:26.887"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.889" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:26.888" endtime="20210205 20:02:26.889"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.959" level="INFO">${idvalue} = [89]</msg>
<status status="PASS" starttime="20210205 20:02:26.889" endtime="20210205 20:02:26.959"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:26.960" level="INFO">${responseid} = 89</msg>
<status status="PASS" starttime="20210205 20:02:26.959" endtime="20210205 20:02:26.960"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:26.960" endtime="20210205 20:02:26.961"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:26.961" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:26.961" endtime="20210205 20:02:26.961"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.887" endtime="20210205 20:02:26.962"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.715" endtime="20210205 20:02:26.962"></status>
</kw>
<kw name="${postid} = 90" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:26.963" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:26.963" endtime="20210205 20:02:26.964"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:27.116" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/90 
 path_url=/posts/90 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:27.117" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/90 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df4f8a5300cbebc81aa10db5eb08fa83f1612573348; expires=Mon, 08-Mar-21 01:02:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '992', 'X-Ratelimit-Reset': '1611642816', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fa-J+W5iw5qyzTS6afRH4pq7cvG7wg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675a9bc0000e8555c245000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=3%2F76GkaFOuOC4z98ugXPkXCptIUEC9pvuAwC05ioH2Uy3t%2F3Fl4CQT4OzIis1Y0%2FyVDHyIEBSICIl%2FWR7OCz3KdtWN%2Bi%2BEmnh1n6Re%2B1%2Bg879h1Ri6SadHj%2BTy0F"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f222ca10e855-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 90,
  "title": "ad iusto omnis odit dolor voluptatibus",
  "body": "minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta similique molestias praesentium blanditiis"
} 
 </msg>
<msg timestamp="20210205 20:02:27.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.964" endtime="20210205 20:02:27.117"></status>
</kw>
<msg timestamp="20210205 20:02:27.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:26.962" endtime="20210205 20:02:27.118"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:27.120" endtime="20210205 20:02:27.123"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.119" endtime="20210205 20:02:27.124"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.118" endtime="20210205 20:02:27.124"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:27.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.125" endtime="20210205 20:02:27.126"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.124" endtime="20210205 20:02:27.126"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.128" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:27.127" endtime="20210205 20:02:27.128"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.197" level="INFO">${idvalue} = [90]</msg>
<status status="PASS" starttime="20210205 20:02:27.128" endtime="20210205 20:02:27.197"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:27.198" level="INFO">${responseid} = 90</msg>
<status status="PASS" starttime="20210205 20:02:27.197" endtime="20210205 20:02:27.198"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:27.198" endtime="20210205 20:02:27.199"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.199" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:27.199" endtime="20210205 20:02:27.199"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.127" endtime="20210205 20:02:27.200"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:26.962" endtime="20210205 20:02:27.200"></status>
</kw>
<kw name="${postid} = 91" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:27.201" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:27.201" endtime="20210205 20:02:27.202"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:27.257" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/91 
 path_url=/posts/91 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:27.257" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/91 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d29f93eb17f55ead01dfff395bb8383e61612573348; expires=Mon, 08-Mar-21 01:02:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e5-l9aQa2/gJFY5FFG1O9x9F+UJRfA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '081675aaa50000f0094cba6000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=p%2FYzH%2B4Sax8teeil1TE2uWuFnBiwyU029lqYXCptlsGzimMDuqHm0oN4SP4jfSJoE47gRTwreFn1GJiLDDoGVVD%2F4IKa2JcbPA59g95thyTdPVLp%2FSzB0F2dPuwF"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2243ccaf009-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 91,
  "title": "aut amet sed",
  "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
} 
 </msg>
<msg timestamp="20210205 20:02:27.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.202" endtime="20210205 20:02:27.258"></status>
</kw>
<msg timestamp="20210205 20:02:27.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.200" endtime="20210205 20:02:27.259"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:27.261" endtime="20210205 20:02:27.264"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.260" endtime="20210205 20:02:27.264"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.259" endtime="20210205 20:02:27.264"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:27.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.266" endtime="20210205 20:02:27.266"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.265" endtime="20210205 20:02:27.267"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.268" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:27.268" endtime="20210205 20:02:27.268"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.339" level="INFO">${idvalue} = [91]</msg>
<status status="PASS" starttime="20210205 20:02:27.269" endtime="20210205 20:02:27.339"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:27.340" level="INFO">${responseid} = 91</msg>
<status status="PASS" starttime="20210205 20:02:27.339" endtime="20210205 20:02:27.340"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:27.340" endtime="20210205 20:02:27.341"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.342" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:27.341" endtime="20210205 20:02:27.342"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.267" endtime="20210205 20:02:27.342"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.200" endtime="20210205 20:02:27.342"></status>
</kw>
<kw name="${postid} = 92" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:27.344" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:27.343" endtime="20210205 20:02:27.344"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:27.443" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/92 
 path_url=/posts/92 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:27.443" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/92 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5273ba706d14d2ea729854f562e34b0b1612573348; expires=Mon, 08-Mar-21 01:02:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612408676', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e3-XfDSGc/SGdffvPSz0KEalY/lSfk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '081675ab5f00000cc542922000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=PBpiDVBYrGt3XOQJJs1jdfY7C9yMLBIWirpGlOiZCl5lTe8OQtDUiArdAiZOKyPHaU%2BKof7xsH3RBlZIs3u2nPymIcIjC2cxpPSWVl9i6Ss%2B78rmGBBXQutzSHpo"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2256de20cc5-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 92,
  "title": "ratione ex tenetur perferendis",
  "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
} 
 </msg>
<msg timestamp="20210205 20:02:27.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.345" endtime="20210205 20:02:27.444"></status>
</kw>
<msg timestamp="20210205 20:02:27.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.342" endtime="20210205 20:02:27.445"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:27.447" endtime="20210205 20:02:27.450"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.446" endtime="20210205 20:02:27.450"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.445" endtime="20210205 20:02:27.451"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:27.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.452" endtime="20210205 20:02:27.453"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.451" endtime="20210205 20:02:27.453"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.455" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:27.454" endtime="20210205 20:02:27.455"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.522" level="INFO">${idvalue} = [92]</msg>
<status status="PASS" starttime="20210205 20:02:27.455" endtime="20210205 20:02:27.522"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:27.524" level="INFO">${responseid} = 92</msg>
<status status="PASS" starttime="20210205 20:02:27.524" endtime="20210205 20:02:27.524"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:27.525" endtime="20210205 20:02:27.525"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.525" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:27.525" endtime="20210205 20:02:27.525"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.453" endtime="20210205 20:02:27.526"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.342" endtime="20210205 20:02:27.526"></status>
</kw>
<kw name="${postid} = 93" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:27.528" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:27.527" endtime="20210205 20:02:27.528"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:27.689" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/93 
 path_url=/posts/93 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:27.689" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/93 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1ffcf2042cd752e17649e3e34dfd37e51612573348; expires=Mon, 08-Mar-21 01:02:28 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '916', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"107-ePXZ2FoBjuryDSZ4+6vLe92vrBs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '081675ac5400000cd138856000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=oL%2Fv5i%2B2scvdUcxsS2IAYJb6ZcqToXs9Opp9%2Fz8ZgYtlQdQgN3sr93AarW%2FszAB44BA23c6U%2FhzZLfIaNl3ENQbbmJ%2F5d%2FabMkxlLB9myY0a8z7epzNkQdjCqP%2F0"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f226eb7b0cd1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 93,
  "title": "beatae soluta recusandae",
  "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
} 
 </msg>
<msg timestamp="20210205 20:02:27.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.529" endtime="20210205 20:02:27.690"></status>
</kw>
<msg timestamp="20210205 20:02:27.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.526" endtime="20210205 20:02:27.691"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:27.693" endtime="20210205 20:02:27.696"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.692" endtime="20210205 20:02:27.696"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.691" endtime="20210205 20:02:27.696"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:27.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.697" endtime="20210205 20:02:27.698"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.696" endtime="20210205 20:02:27.698"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.700" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:27.699" endtime="20210205 20:02:27.700"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.767" level="INFO">${idvalue} = [93]</msg>
<status status="PASS" starttime="20210205 20:02:27.700" endtime="20210205 20:02:27.767"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:27.768" level="INFO">${responseid} = 93</msg>
<status status="PASS" starttime="20210205 20:02:27.767" endtime="20210205 20:02:27.768"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:27.768" endtime="20210205 20:02:27.769"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.770" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:27.769" endtime="20210205 20:02:27.770"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.699" endtime="20210205 20:02:27.770"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.526" endtime="20210205 20:02:27.770"></status>
</kw>
<kw name="${postid} = 94" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:27.772" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:27.772" endtime="20210205 20:02:27.773"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:27.937" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/94 
 path_url=/posts/94 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:27.937" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/94 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df23b787d22ec14688f2ba227b13f13a91612573349; expires=Mon, 08-Mar-21 01:02:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '913', 'X-Ratelimit-Reset': '1612110657', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"108-YgH61+NkjOflAIB5ysSTcOx0QTQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '081675ad4e0000e72c60068000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=vsMnaoR2e3BDPeSvnoeD9GQLeAWmP2ABkRbfJlJnfEEelJm1NwxYIZpy%2F5II4DlCbQoKvk%2B71wicna6lRX8BDpaRDqZQ0eBVKHxhuNCkdQkErsVpg5BtZqHVfU9v"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2287b66e72c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 94,
  "title": "qui qui voluptates illo iste minima",
  "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
} 
 </msg>
<msg timestamp="20210205 20:02:27.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.773" endtime="20210205 20:02:27.938"></status>
</kw>
<msg timestamp="20210205 20:02:27.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.771" endtime="20210205 20:02:27.939"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:27.941" endtime="20210205 20:02:27.944"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.940" endtime="20210205 20:02:27.944"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.939" endtime="20210205 20:02:27.944"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:27.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:27.946" endtime="20210205 20:02:27.946"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.945" endtime="20210205 20:02:27.947"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:27.948" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:27.948" endtime="20210205 20:02:27.948"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.022" level="INFO">${idvalue} = [94]</msg>
<status status="PASS" starttime="20210205 20:02:27.948" endtime="20210205 20:02:28.022"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:28.023" level="INFO">${responseid} = 94</msg>
<status status="PASS" starttime="20210205 20:02:28.022" endtime="20210205 20:02:28.023"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:28.024" endtime="20210205 20:02:28.024"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.025" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:28.024" endtime="20210205 20:02:28.025"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.947" endtime="20210205 20:02:28.025"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:27.770" endtime="20210205 20:02:28.025"></status>
</kw>
<kw name="${postid} = 95" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:28.027" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:28.027" endtime="20210205 20:02:28.028"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:28.324" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/95 
 path_url=/posts/95 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:28.324" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/95 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da35b7191e57d6ae9bb1d7dbed4dd32bd1612573349; expires=Mon, 08-Mar-21 01:02:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '911', 'X-Ratelimit-Reset': '1611067982', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"126-rrdOZSpMvdZiiYyTLDi2rkLG/Vw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '081675ade200003daf7e198000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=RBMhCJqs877EN%2F0YylH5qsJ2gSf8ePiqluxwjDUfRiDrpPTfg7gEFE3W58YBTTc8xqZXb%2FeG1d%2Fuko1PGH6xkgr5BA7ZKl%2F47gJ8v1%2BY0eonwasf%2BLBa8qIpN%2Bdx"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2296b013daf-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 95,
  "title": "id minus libero illum nam ad officiis",
  "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
} 
 </msg>
<msg timestamp="20210205 20:02:28.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.028" endtime="20210205 20:02:28.325"></status>
</kw>
<msg timestamp="20210205 20:02:28.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.026" endtime="20210205 20:02:28.326"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:28.330" endtime="20210205 20:02:28.335"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.328" endtime="20210205 20:02:28.335"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.326" endtime="20210205 20:02:28.336"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:28.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.338" endtime="20210205 20:02:28.339"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.336" endtime="20210205 20:02:28.339"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.342" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:28.341" endtime="20210205 20:02:28.342"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.394" level="INFO">${idvalue} = [95]</msg>
<status status="PASS" starttime="20210205 20:02:28.343" endtime="20210205 20:02:28.394"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:28.395" level="INFO">${responseid} = 95</msg>
<status status="PASS" starttime="20210205 20:02:28.394" endtime="20210205 20:02:28.395"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:28.395" endtime="20210205 20:02:28.395"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.396" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:28.395" endtime="20210205 20:02:28.396"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.340" endtime="20210205 20:02:28.396"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.025" endtime="20210205 20:02:28.396"></status>
</kw>
<kw name="${postid} = 96" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:28.398" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:28.397" endtime="20210205 20:02:28.398"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:28.442" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/96 
 path_url=/posts/96 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:28.442" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/96 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3c1b3e8210e57f68203ff794be1f29461612573349; expires=Mon, 08-Mar-21 01:02:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-7coBGYTlaO8bCv0lNSqoAlkoszE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '081675af490000155a00075000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=3LXS8EMDX0YvpkOxgAIsEAsJ%2Fhvt%2B6tNDEYhs4V4l4ZNrD4fUGHBfKjmld139bsEr3eVm6TAbDR69kdXtMGmTHWzlNS48q53zE4%2FJaVCFq6pVNXHhFjZ1Go2tD19"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f22ba895155a-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 96,
  "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
  "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
} 
 </msg>
<msg timestamp="20210205 20:02:28.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.398" endtime="20210205 20:02:28.444"></status>
</kw>
<msg timestamp="20210205 20:02:28.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.397" endtime="20210205 20:02:28.444"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:28.446" endtime="20210205 20:02:28.449"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.445" endtime="20210205 20:02:28.449"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.444" endtime="20210205 20:02:28.450"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:28.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.451" endtime="20210205 20:02:28.452"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.450" endtime="20210205 20:02:28.452"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.453" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:28.453" endtime="20210205 20:02:28.453"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.525" level="INFO">${idvalue} = [96]</msg>
<status status="PASS" starttime="20210205 20:02:28.454" endtime="20210205 20:02:28.525"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:28.526" level="INFO">${responseid} = 96</msg>
<status status="PASS" starttime="20210205 20:02:28.525" endtime="20210205 20:02:28.526"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:28.526" endtime="20210205 20:02:28.526"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.526" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:28.526" endtime="20210205 20:02:28.526"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.452" endtime="20210205 20:02:28.527"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.397" endtime="20210205 20:02:28.527"></status>
</kw>
<kw name="${postid} = 97" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:28.528" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:28.528" endtime="20210205 20:02:28.528"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:28.581" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/97 
 path_url=/posts/97 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:28.581" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/97 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3c1b3e8210e57f68203ff794be1f29461612573349; expires=Mon, 08-Mar-21 01:02:29 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612026138', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"13f-OIy2AGGq8mYJVydBUqG+k5NoCF4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '081675afd20000155a3cbc1000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=HiEmyF5n%2FqLuxdmcAGqIz2Xoog%2FjHnnQbWGzfAxN9mygBSTZAsp0JXLIVjaWsyiN9P2wrhWb0bGcIrKMFdVUemQmwdWnvy0nh6dLK6Y%2B2A7j7EWrlvWKFA%2B1ZeRV"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f22c8ad5155a-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 97,
  "title": "quas fugiat ut perspiciatis vero provident",
  "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
} 
 </msg>
<msg timestamp="20210205 20:02:28.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.528" endtime="20210205 20:02:28.582"></status>
</kw>
<msg timestamp="20210205 20:02:28.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.527" endtime="20210205 20:02:28.583"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:28.585" endtime="20210205 20:02:28.588"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.584" endtime="20210205 20:02:28.588"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.583" endtime="20210205 20:02:28.589"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:28.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.590" endtime="20210205 20:02:28.591"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.589" endtime="20210205 20:02:28.591"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.592" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:28.592" endtime="20210205 20:02:28.592"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.665" level="INFO">${idvalue} = [97]</msg>
<status status="PASS" starttime="20210205 20:02:28.593" endtime="20210205 20:02:28.665"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:28.666" level="INFO">${responseid} = 97</msg>
<status status="PASS" starttime="20210205 20:02:28.665" endtime="20210205 20:02:28.666"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:28.666" endtime="20210205 20:02:28.667"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.667" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:28.667" endtime="20210205 20:02:28.667"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.591" endtime="20210205 20:02:28.668"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.527" endtime="20210205 20:02:28.668"></status>
</kw>
<kw name="${postid} = 98" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:28.670" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:28.669" endtime="20210205 20:02:28.670"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:28.892" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/98 
 path_url=/posts/98 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:28.892" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/98 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d95a40eeb8805bbe4f813d708890e0f8c1612573350; expires=Mon, 08-Mar-21 01:02:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '926', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d1-AdCHAQW37rE37t8vXTeQZeKV7Cg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '91', 'cf-request-id': '081675b05e0000efed5c82d000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=zVaqLY6ts7fgcwrHauiDyoqZLXbV3bWHwHK1TtFTwpVB1Iw9kuz41m5ebRpl874k%2F1g4RTvIgERCGswo5%2BXdNpoenk9w40kKLNsimZFIj25pyks439wtptzsYhQV"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f22d6ad7efed-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 98,
  "title": "laboriosam dolor voluptates",
  "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
} 
 </msg>
<msg timestamp="20210205 20:02:28.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.670" endtime="20210205 20:02:28.893"></status>
</kw>
<msg timestamp="20210205 20:02:28.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.668" endtime="20210205 20:02:28.893"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:28.896" endtime="20210205 20:02:28.899"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.894" endtime="20210205 20:02:28.899"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.894" endtime="20210205 20:02:28.899"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:28.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.901" endtime="20210205 20:02:28.902"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.900" endtime="20210205 20:02:28.902"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.904" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:28.903" endtime="20210205 20:02:28.904"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.975" level="INFO">${idvalue} = [98]</msg>
<status status="PASS" starttime="20210205 20:02:28.904" endtime="20210205 20:02:28.975"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:28.976" level="INFO">${responseid} = 98</msg>
<status status="PASS" starttime="20210205 20:02:28.975" endtime="20210205 20:02:28.976"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:28.976" endtime="20210205 20:02:28.977"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:28.977" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:28.977" endtime="20210205 20:02:28.977"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.902" endtime="20210205 20:02:28.978"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.668" endtime="20210205 20:02:28.978"></status>
</kw>
<kw name="${postid} = 99" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:28.979" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:28.979" endtime="20210205 20:02:28.980"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:29.033" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/99 
 path_url=/posts/99 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:29.033" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/99 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d6cbf92a7ea93880b5d98b2b47c08437f1612573350; expires=Mon, 08-Mar-21 01:02:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '925', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e0-aXopzb0YfAN1tmSD/RVNZPaEz8g"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '90', 'cf-request-id': '081675b1940000e8491b95d000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=B2QvzcXwUM7vT1gIIUdtN06a%2FnKkvMj1wGVwqsM3M2rthU%2BzRGv7PfYnx6dKYFvcV47Sc4J1VSmoMDsBB97mjrk1pzaYVNJhFiP6lybpeQhR8rkGmEurKJqI4zTN"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d0f22f5e9ee849-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 99,
  "title": "temporibus sit alias delectus eligendi possimus magni",
  "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
} 
 </msg>
<msg timestamp="20210205 20:02:29.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.980" endtime="20210205 20:02:29.034"></status>
</kw>
<msg timestamp="20210205 20:02:29.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:28.978" endtime="20210205 20:02:29.035"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:29.037" endtime="20210205 20:02:29.040"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:29.036" endtime="20210205 20:02:29.040"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:29.035" endtime="20210205 20:02:29.040"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:29.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:29.042" endtime="20210205 20:02:29.042"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:29.041" endtime="20210205 20:02:29.043"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:29.044" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:29.044" endtime="20210205 20:02:29.044"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:29.119" level="INFO">${idvalue} = [99]</msg>
<status status="PASS" starttime="20210205 20:02:29.045" endtime="20210205 20:02:29.119"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:29.120" level="INFO">${responseid} = 99</msg>
<status status="PASS" starttime="20210205 20:02:29.119" endtime="20210205 20:02:29.120"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:29.120" endtime="20210205 20:02:29.121"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:29.122" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:29.121" endtime="20210205 20:02:29.122"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:29.043" endtime="20210205 20:02:29.122"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:28.978" endtime="20210205 20:02:29.122"></status>
</kw>
<kw name="${postid} = 100" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:02:29.124" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:02:29.124" endtime="20210205 20:02:29.125"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:02:29.199" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:02:29.200" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:02:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1587d851d5db40c6c440f7872c65919b1612573350; expires=Mon, 08-Mar-21 01:02:30 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611591853', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4354', 'cf-request-id': '081675b22500003e346682b000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=vZSHGwUwM84LdQZY61h9%2FgxB1wUjylhvRF6RNEJGi8MI6h1gzO51BWCVsCy3dK0Og7Tx%2BKsewj11o4%2FHJmxXSK2R6VaRg7dw%2FKlE9xHFDmZejGNM5Yt%2BNrewdr2T"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d0f2303f4d3e34-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<msg timestamp="20210205 20:02:29.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:29.125" endtime="20210205 20:02:29.200"></status>
</kw>
<msg timestamp="20210205 20:02:29.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:02:29.123" endtime="20210205 20:02:29.201"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:29.203" endtime="20210205 20:02:29.206"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:29.202" endtime="20210205 20:02:29.206"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:29.201" endtime="20210205 20:02:29.207"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:02:29.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:02:29.208" endtime="20210205 20:02:29.209"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:29.207" endtime="20210205 20:02:29.209"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:29.210" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:29.210" endtime="20210205 20:02:29.211"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:29.278" level="INFO">${idvalue} = [100]</msg>
<status status="PASS" starttime="20210205 20:02:29.211" endtime="20210205 20:02:29.278"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:02:29.279" level="INFO">${responseid} = 100</msg>
<status status="PASS" starttime="20210205 20:02:29.279" endtime="20210205 20:02:29.280"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:02:29.280" endtime="20210205 20:02:29.280"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:02:29.281" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:02:29.281" endtime="20210205 20:02:29.281"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:29.209" endtime="20210205 20:02:29.282"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:29.122" endtime="20210205 20:02:29.282"></status>
</kw>
<status status="PASS" starttime="20210205 20:02:10.798" endtime="20210205 20:02:29.282"></status>
</kw>
<doc>Validate Response for Getting post by passing single post id</doc>
<tags>
<tag>Positive Extensive</tag>
</tags>
<status status="PASS" starttime="20210205 20:02:10.721" endtime="20210205 20:02:29.283" critical="yes"></status>
</test>
<status status="PASS" starttime="20210205 20:02:03.885" endtime="20210205 20:02:29.297"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Hybrid</stat>
<stat pass="2" fail="0">Negative</stat>
<stat pass="4" fail="0">Positive</stat>
<stat pass="1" fail="0">Positive Extensive</stat>
<stat pass="7" fail="0">Smoke</stat>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="TS001 Posts">TS001 Posts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
