<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210205 12:52:06.837" rpa="false">
<suite id="s1" name="TS001 Posts" source="C:\typicodetests\http-jsonplaceholder.typicode.com-robotframework\RobotAutomation\TestCases\GetPostsTC\TS001_Posts.robot">
<test id="s1-t1" name="TC001 VALIDATE GET ALL POSTS ENDPOINT">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:07.828" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:07.826" endtime="20210205 12:52:07.828"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 12:52:07.830" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:07.828" endtime="20210205 12:52:07.830"></status>
</kw>
<msg timestamp="20210205 12:52:07.831" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:07.825" endtime="20210205 12:52:07.831"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 12:52:07.833" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 12:52:07.831" endtime="20210205 12:52:07.833"></status>
</kw>
<msg timestamp="20210205 12:52:07.833" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 12:52:07.831" endtime="20210205 12:52:07.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:07.835" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:07.833" endtime="20210205 12:52:07.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 12:52:07.837" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 12:52:07.835" endtime="20210205 12:52:07.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 12:52:07.842" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 12:52:07.839" endtime="20210205 12:52:07.843"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.823" endtime="20210205 12:52:07.843"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_All_Posts</arg>
<arg>${base_url}</arg>
<arg>/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:07.845" level="INFO">Creating Session using : alias=Get_All_Posts, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:07.845" endtime="20210205 12:52:07.846"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:07.934" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:07.935" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d46a5f52f54f599588660c6217719c2f51612547528; expires=Sun, 07-Mar-21 17:52:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612307992', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7577', 'cf-request-id': '0814ebad8700003df2e60f0000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=seQ5bPwLk9He%2F5jLSee%2BemwjLJTkPn%2FFzl5q7TdyuGFYIBG0H8nEKl5kZDZhf%2FLm0X9oal7OzVBc4sMJ9PGdEIL5EpLSd612reUZXRTm6iXLwmnuXnJzbBvNhoCG"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bc27eb23df2-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210205 12:52:07.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:07.846" endtime="20210205 12:52:07.935"></status>
</kw>
<msg timestamp="20210205 12:52:07.936" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:07.844" endtime="20210205 12:52:07.936"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>All</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.940" endtime="20210205 12:52:07.952"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.938" endtime="20210205 12:52:07.953"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.937" endtime="20210205 12:52:07.953"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:07.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:07.955" endtime="20210205 12:52:07.955"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.954" endtime="20210205 12:52:07.955"></status>
</kw>
<kw name="VALIDATE RESPONSE SIZE" library="PostsHelper">
<arguments>
<arg>${allpostcnt}</arg>
<arg>${response}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idlist}</var>
</assign>
<msg timestamp="20210205 12:52:07.957" level="INFO">@{idlist} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:07.957" endtime="20210205 12:52:07.958"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.958" endtime="20210205 12:52:07.959"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.958" endtime="20210205 12:52:07.959"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.959" endtime="20210205 12:52:07.959"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.959" endtime="20210205 12:52:07.959"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.960" endtime="20210205 12:52:07.960"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.960" endtime="20210205 12:52:07.960"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.960" endtime="20210205 12:52:07.961"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.960" endtime="20210205 12:52:07.961"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.961" endtime="20210205 12:52:07.961"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.961" endtime="20210205 12:52:07.961"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.961" endtime="20210205 12:52:07.962"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.961" endtime="20210205 12:52:07.962"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.962" endtime="20210205 12:52:07.963"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.962" endtime="20210205 12:52:07.963"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.963" endtime="20210205 12:52:07.964"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.963" endtime="20210205 12:52:07.964"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.965" endtime="20210205 12:52:07.966"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.965" endtime="20210205 12:52:07.966"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.967" endtime="20210205 12:52:07.967"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.967" endtime="20210205 12:52:07.967"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.968" endtime="20210205 12:52:07.969"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.968" endtime="20210205 12:52:07.969"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.969" endtime="20210205 12:52:07.970"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.969" endtime="20210205 12:52:07.971"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.971" endtime="20210205 12:52:07.972"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.971" endtime="20210205 12:52:07.972"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.973" endtime="20210205 12:52:07.974"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.973" endtime="20210205 12:52:07.974"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.974" endtime="20210205 12:52:07.975"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.974" endtime="20210205 12:52:07.975"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.975" endtime="20210205 12:52:07.976"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.975" endtime="20210205 12:52:07.976"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.977" endtime="20210205 12:52:07.977"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.976" endtime="20210205 12:52:07.977"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.978" endtime="20210205 12:52:07.978"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.977" endtime="20210205 12:52:07.978"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.979" endtime="20210205 12:52:07.980"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.979" endtime="20210205 12:52:07.980"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.981" endtime="20210205 12:52:07.983"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.980" endtime="20210205 12:52:07.983"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.984" endtime="20210205 12:52:07.985"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.984" endtime="20210205 12:52:07.986"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.986" endtime="20210205 12:52:07.988"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.986" endtime="20210205 12:52:07.988"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.989" endtime="20210205 12:52:07.990"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.988" endtime="20210205 12:52:07.990"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.991" endtime="20210205 12:52:07.992"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.990" endtime="20210205 12:52:07.992"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.993" endtime="20210205 12:52:07.994"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.993" endtime="20210205 12:52:07.994"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.995" endtime="20210205 12:52:07.997"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.995" endtime="20210205 12:52:07.997"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.998" endtime="20210205 12:52:07.999"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.998" endtime="20210205 12:52:07.999"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:07.999" endtime="20210205 12:52:08.000"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.999" endtime="20210205 12:52:08.000"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.000" endtime="20210205 12:52:08.001"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.000" endtime="20210205 12:52:08.001"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.001" endtime="20210205 12:52:08.001"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.001" endtime="20210205 12:52:08.001"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.001" endtime="20210205 12:52:08.003"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.001" endtime="20210205 12:52:08.003"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.004" endtime="20210205 12:52:08.004"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.003" endtime="20210205 12:52:08.004"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.004" endtime="20210205 12:52:08.005"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.004" endtime="20210205 12:52:08.005"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.005" endtime="20210205 12:52:08.005"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.005" endtime="20210205 12:52:08.005"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.005" endtime="20210205 12:52:08.006"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.005" endtime="20210205 12:52:08.006"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.006" endtime="20210205 12:52:08.007"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.006" endtime="20210205 12:52:08.007"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.007" endtime="20210205 12:52:08.007"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.007" endtime="20210205 12:52:08.007"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.008" endtime="20210205 12:52:08.008"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.007" endtime="20210205 12:52:08.008"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.008" endtime="20210205 12:52:08.008"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.008" endtime="20210205 12:52:08.008"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.009" endtime="20210205 12:52:08.009"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.009" endtime="20210205 12:52:08.009"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.009" endtime="20210205 12:52:08.010"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.009" endtime="20210205 12:52:08.010"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.010" endtime="20210205 12:52:08.010"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.010" endtime="20210205 12:52:08.010"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.011" endtime="20210205 12:52:08.011"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.010" endtime="20210205 12:52:08.011"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.011" endtime="20210205 12:52:08.012"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.011" endtime="20210205 12:52:08.012"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.012" endtime="20210205 12:52:08.012"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.012" endtime="20210205 12:52:08.012"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.012" endtime="20210205 12:52:08.014"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.012" endtime="20210205 12:52:08.014"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.015" endtime="20210205 12:52:08.016"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.014" endtime="20210205 12:52:08.016"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.016" endtime="20210205 12:52:08.017"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.016" endtime="20210205 12:52:08.017"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.018" endtime="20210205 12:52:08.018"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.018" endtime="20210205 12:52:08.019"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.019" endtime="20210205 12:52:08.020"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.019" endtime="20210205 12:52:08.020"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.020" endtime="20210205 12:52:08.021"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.020" endtime="20210205 12:52:08.021"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.021" endtime="20210205 12:52:08.022"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.021" endtime="20210205 12:52:08.022"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.023" endtime="20210205 12:52:08.023"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.022" endtime="20210205 12:52:08.023"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.024" endtime="20210205 12:52:08.024"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.023" endtime="20210205 12:52:08.024"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.025" endtime="20210205 12:52:08.026"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.025" endtime="20210205 12:52:08.026"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.026" endtime="20210205 12:52:08.027"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.026" endtime="20210205 12:52:08.027"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.028" endtime="20210205 12:52:08.028"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.027" endtime="20210205 12:52:08.028"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.029" endtime="20210205 12:52:08.029"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.028" endtime="20210205 12:52:08.029"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.029" endtime="20210205 12:52:08.030"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.029" endtime="20210205 12:52:08.030"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.031" endtime="20210205 12:52:08.032"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.031" endtime="20210205 12:52:08.032"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.032" endtime="20210205 12:52:08.033"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.032" endtime="20210205 12:52:08.033"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.034" endtime="20210205 12:52:08.034"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.033" endtime="20210205 12:52:08.034"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.035" endtime="20210205 12:52:08.036"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.035" endtime="20210205 12:52:08.036"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.036" endtime="20210205 12:52:08.037"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.036" endtime="20210205 12:52:08.037"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.037" endtime="20210205 12:52:08.038"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.037" endtime="20210205 12:52:08.038"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.038" endtime="20210205 12:52:08.039"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.038" endtime="20210205 12:52:08.039"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.040" endtime="20210205 12:52:08.040"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.039" endtime="20210205 12:52:08.040"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.041" endtime="20210205 12:52:08.041"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.040" endtime="20210205 12:52:08.041"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.042" endtime="20210205 12:52:08.042"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.042" endtime="20210205 12:52:08.042"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.043" endtime="20210205 12:52:08.043"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.043" endtime="20210205 12:52:08.043"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.044" endtime="20210205 12:52:08.045"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.044" endtime="20210205 12:52:08.045"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.045" endtime="20210205 12:52:08.046"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.045" endtime="20210205 12:52:08.046"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.046" endtime="20210205 12:52:08.047"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.046" endtime="20210205 12:52:08.047"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.047" endtime="20210205 12:52:08.048"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.047" endtime="20210205 12:52:08.048"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.049" endtime="20210205 12:52:08.049"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.048" endtime="20210205 12:52:08.049"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.050" endtime="20210205 12:52:08.050"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.049" endtime="20210205 12:52:08.050"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.051" endtime="20210205 12:52:08.051"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.050" endtime="20210205 12:52:08.051"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.052" endtime="20210205 12:52:08.052"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.051" endtime="20210205 12:52:08.052"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.053" endtime="20210205 12:52:08.054"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.052" endtime="20210205 12:52:08.054"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.054" endtime="20210205 12:52:08.055"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.054" endtime="20210205 12:52:08.055"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.055" endtime="20210205 12:52:08.056"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.055" endtime="20210205 12:52:08.056"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.056" endtime="20210205 12:52:08.057"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.056" endtime="20210205 12:52:08.057"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.057" endtime="20210205 12:52:08.058"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.057" endtime="20210205 12:52:08.058"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.058" endtime="20210205 12:52:08.060"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.058" endtime="20210205 12:52:08.060"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.061" endtime="20210205 12:52:08.061"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.060" endtime="20210205 12:52:08.061"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.062" endtime="20210205 12:52:08.063"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.062" endtime="20210205 12:52:08.063"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.063" endtime="20210205 12:52:08.065"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.063" endtime="20210205 12:52:08.065"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.065" endtime="20210205 12:52:08.066"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.065" endtime="20210205 12:52:08.066"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.066" endtime="20210205 12:52:08.067"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.066" endtime="20210205 12:52:08.067"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.068" endtime="20210205 12:52:08.068"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.067" endtime="20210205 12:52:08.068"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.069" endtime="20210205 12:52:08.070"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.069" endtime="20210205 12:52:08.070"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.070" endtime="20210205 12:52:08.071"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.070" endtime="20210205 12:52:08.071"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.071" endtime="20210205 12:52:08.072"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.071" endtime="20210205 12:52:08.072"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.072" endtime="20210205 12:52:08.073"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.072" endtime="20210205 12:52:08.073"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.073" endtime="20210205 12:52:08.074"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.073" endtime="20210205 12:52:08.074"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.075" endtime="20210205 12:52:08.076"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.074" endtime="20210205 12:52:08.076"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.076" endtime="20210205 12:52:08.077"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.076" endtime="20210205 12:52:08.077"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.078" endtime="20210205 12:52:08.078"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.077" endtime="20210205 12:52:08.078"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.079" endtime="20210205 12:52:08.079"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.078" endtime="20210205 12:52:08.079"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.080" endtime="20210205 12:52:08.081"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.080" endtime="20210205 12:52:08.081"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.958" endtime="20210205 12:52:08.081"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${idlist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 12:52:08.082" level="INFO">Length is 100</msg>
<msg timestamp="20210205 12:52:08.082" level="INFO">${cnt} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.081" endtime="20210205 12:52:08.082"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${cnt}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.082" endtime="20210205 12:52:08.083"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idlist}</var>
</assign>
<msg timestamp="20210205 12:52:08.084" level="INFO">@{idlist} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:08.083" endtime="20210205 12:52:08.084"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:07.957" endtime="20210205 12:52:08.084"></status>
</kw>
<doc>Validate Get All Posts REST endpoint status code, response size and user post count</doc>
<tags>
<tag>Positive</tag>
</tags>
<status status="PASS" starttime="20210205 12:52:07.822" endtime="20210205 12:52:08.085" critical="yes"></status>
</test>
<test id="s1-t2" name="TC002 VALIDATE POST COUNT BY USER ID - VALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:08.092" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:08.091" endtime="20210205 12:52:08.092"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 12:52:08.094" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.093" endtime="20210205 12:52:08.094"></status>
</kw>
<msg timestamp="20210205 12:52:08.095" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.089" endtime="20210205 12:52:08.095"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 12:52:08.098" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.096" endtime="20210205 12:52:08.098"></status>
</kw>
<msg timestamp="20210205 12:52:08.099" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.095" endtime="20210205 12:52:08.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.100" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.100" endtime="20210205 12:52:08.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 12:52:08.101" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 12:52:08.101" endtime="20210205 12:52:08.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.102" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.102" endtime="20210205 12:52:08.103"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.088" endtime="20210205 12:52:08.103"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Valid Id Boundary Values: 1,10</arg>
</arguments>
<msg timestamp="20210205 12:52:08.104" level="INFO">Set test documentation to:
Valid Id Boundary Values: 1,10</msg>
<status status="PASS" starttime="20210205 12:52:08.104" endtime="20210205 12:52:08.104"></status>
</kw>
<kw name="VALIDATE POST COUNT BY USER ID" library="PostsHelper">
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${validinituserid}</var>
</assign>
<msg timestamp="20210205 12:52:08.111" level="INFO">${validinituserid} = 1</msg>
<status status="PASS" starttime="20210205 12:52:08.109" endtime="20210205 12:52:08.111"></status>
</kw>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${validfinaluserid}</var>
</assign>
<msg timestamp="20210205 12:52:08.112" level="INFO">${validfinaluserid} = 10</msg>
<status status="PASS" starttime="20210205 12:52:08.111" endtime="20210205 12:52:08.112"></status>
</kw>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${validinitcount}</var>
</assign>
<msg timestamp="20210205 12:52:08.114" level="INFO">${validinitcount} = 10</msg>
<status status="PASS" starttime="20210205 12:52:08.113" endtime="20210205 12:52:08.114"></status>
</kw>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${validfinalcount}</var>
</assign>
<msg timestamp="20210205 12:52:08.117" level="INFO">${validfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 12:52:08.115" endtime="20210205 12:52:08.117"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:08.118" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:08.117" endtime="20210205 12:52:08.118"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 12:52:08.120" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.118" endtime="20210205 12:52:08.120"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${validinituserid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.123" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:08.122" endtime="20210205 12:52:08.124"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:08.182" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/1/posts 
 path_url=/users/1/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:08.182" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/1/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9e68a8839e32d11c9f44382d9ddced611612547528; expires=Sun, 07-Mar-21 17:52:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612397753', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"aa6-j2NSH739l9uq40OywFMn7Y0C/iY"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '28263', 'cf-request-id': '0814ebae7d0000159f749d3000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=gRyMiP2gDoolZu%2Bln4OQVoymR17Nb39lDgZfBA14xHkPq7Rnjj9U%2FQ5vaV6XPnCzf%2B1fdct8j%2BUVlR5uRk1a5BJ9ML3sRtf5TfvKv2vQm0T1Jb2zDJUdx%2FmWT3Ym"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bc3fcb4159f-EWR'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  }
] 
 </msg>
<msg timestamp="20210205 12:52:08.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.124" endtime="20210205 12:52:08.182"></status>
</kw>
<msg timestamp="20210205 12:52:08.183" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.120" endtime="20210205 12:52:08.183"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="PostsHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 12:52:08.185" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:08.184" endtime="20210205 12:52:08.185"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.186" endtime="20210205 12:52:08.186"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.185" endtime="20210205 12:52:08.186"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.187" endtime="20210205 12:52:08.187"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.187" endtime="20210205 12:52:08.187"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.188" endtime="20210205 12:52:08.188"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.188" endtime="20210205 12:52:08.189"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.189" endtime="20210205 12:52:08.190"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.189" endtime="20210205 12:52:08.190"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.190" endtime="20210205 12:52:08.191"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.190" endtime="20210205 12:52:08.191"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.191" endtime="20210205 12:52:08.192"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.191" endtime="20210205 12:52:08.192"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.192" endtime="20210205 12:52:08.193"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.192" endtime="20210205 12:52:08.193"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.193" endtime="20210205 12:52:08.194"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.193" endtime="20210205 12:52:08.194"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.194" endtime="20210205 12:52:08.195"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.194" endtime="20210205 12:52:08.195"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.195" endtime="20210205 12:52:08.196"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.195" endtime="20210205 12:52:08.196"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.185" endtime="20210205 12:52:08.196"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 12:52:08.197" level="INFO">Length is 10</msg>
<msg timestamp="20210205 12:52:08.197" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 12:52:08.196" endtime="20210205 12:52:08.197"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 12:52:08.198" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:08.197" endtime="20210205 12:52:08.198"></status>
</kw>
<msg timestamp="20210205 12:52:08.198" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 12:52:08.183" endtime="20210205 12:52:08.198"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${validinitcount}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.198" endtime="20210205 12:52:08.199"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${validfinaluserid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.201" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:08.200" endtime="20210205 12:52:08.201"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:08.255" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/10/posts 
 path_url=/users/10/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:08.255" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/10/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2ed05ce9dc74a30d001b90302a0e43001612547528; expires=Sun, 07-Mar-21 17:52:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612542892', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"a68-bp+xhXz2hSYZZUvrpfEFLIhQbe4"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4659', 'cf-request-id': '0814ebaeca0000e6b07c06c000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=1ClfKCt87xUNMc0AxovkUdZUmt3kKWAgizGs2gwVyWiKYaQWBceX3lz7t7Rq26NEEp6YoYrUfjvMH1WO4FxoMGEhe%2FdXthzoqnhHe9SV01SuIv8LBIpYidZjHRg8"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bc47c6fe6b0-EWR'} 
 body=[
  {
    "userId": 10,
    "id": 91,
    "title": "aut amet sed",
    "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
  },
  {
    "userId": 10,
    "id": 92,
    "title": "ratione ex tenetur perferendis",
    "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
  },
  {
    "userId": 10,
    "id": 93,
    "title": "beatae soluta recusandae",
    "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
  },
  {
    "userId": 10,
    "id": 94,
    "title": "qui qui voluptates illo iste minima",
    "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
  },
  {
    "userId": 10,
    "id": 95,
    "title": "id minus libero illum nam ad officiis",
    "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
  },
  {
    "userId": 10,
    "id": 96,
    "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
    "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
  },
  {
    "userId": 10,
    "id": 97,
    "title": "quas fugiat ut perspiciatis vero provident",
    "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
  },
  {
    "userId": 10,
    "id": 98,
    "title": "laboriosam dolor voluptates",
    "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
  },
  {
    "userId": 10,
    "id": 99,
    "title": "temporibus sit alias delectus eligendi possimus magni",
    "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
  },
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<msg timestamp="20210205 12:52:08.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.202" endtime="20210205 12:52:08.255"></status>
</kw>
<msg timestamp="20210205 12:52:08.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.199" endtime="20210205 12:52:08.256"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="PostsHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 12:52:08.258" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:08.257" endtime="20210205 12:52:08.258"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.259" endtime="20210205 12:52:08.259"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.258" endtime="20210205 12:52:08.259"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.260" endtime="20210205 12:52:08.260"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.260" endtime="20210205 12:52:08.260"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.261" endtime="20210205 12:52:08.261"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.261" endtime="20210205 12:52:08.261"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.262" endtime="20210205 12:52:08.263"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.262" endtime="20210205 12:52:08.263"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.264" endtime="20210205 12:52:08.264"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.263" endtime="20210205 12:52:08.264"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.265" endtime="20210205 12:52:08.265"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.264" endtime="20210205 12:52:08.265"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.266" endtime="20210205 12:52:08.266"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.265" endtime="20210205 12:52:08.266"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.267" endtime="20210205 12:52:08.267"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.266" endtime="20210205 12:52:08.267"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.268" endtime="20210205 12:52:08.268"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.267" endtime="20210205 12:52:08.268"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.269" endtime="20210205 12:52:08.269"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.268" endtime="20210205 12:52:08.269"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.258" endtime="20210205 12:52:08.269"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 12:52:08.270" level="INFO">Length is 10</msg>
<msg timestamp="20210205 12:52:08.270" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 12:52:08.270" endtime="20210205 12:52:08.270"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 12:52:08.271" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:08.271" endtime="20210205 12:52:08.271"></status>
</kw>
<msg timestamp="20210205 12:52:08.272" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 12:52:08.256" endtime="20210205 12:52:08.272"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${validfinalcount}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.272" endtime="20210205 12:52:08.273"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.108" endtime="20210205 12:52:08.273"></status>
</kw>
<doc>Valid Id Boundary Values: 1,10</doc>
<tags>
<tag>Positive Boundary</tag>
</tags>
<status status="PASS" starttime="20210205 12:52:08.087" endtime="20210205 12:52:08.274" critical="yes"></status>
</test>
<test id="s1-t3" name="TC003 VALIDATE EMPTY POST COUNT BY INVALID USER ID - INVALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:08.281" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:08.279" endtime="20210205 12:52:08.281"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 12:52:08.283" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.281" endtime="20210205 12:52:08.283"></status>
</kw>
<msg timestamp="20210205 12:52:08.283" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.278" endtime="20210205 12:52:08.283"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 12:52:08.287" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.285" endtime="20210205 12:52:08.287"></status>
</kw>
<msg timestamp="20210205 12:52:08.287" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.284" endtime="20210205 12:52:08.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.289" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.288" endtime="20210205 12:52:08.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 12:52:08.290" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 12:52:08.289" endtime="20210205 12:52:08.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.291" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.290" endtime="20210205 12:52:08.291"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.277" endtime="20210205 12:52:08.292"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Invalid Id Boundary Values: 0,11</arg>
</arguments>
<msg timestamp="20210205 12:52:08.293" level="INFO">Set test documentation to:
Invalid Id Boundary Values: 0,11</msg>
<status status="PASS" starttime="20210205 12:52:08.292" endtime="20210205 12:52:08.293"></status>
</kw>
<kw name="VALIDATE POST COUNT BY INVALID USER ID" library="PostsHelper">
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:08.297" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:08.295" endtime="20210205 12:52:08.297"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 12:52:08.299" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.297" endtime="20210205 12:52:08.300"></status>
</kw>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidinituserid}</var>
</assign>
<msg timestamp="20210205 12:52:08.302" level="INFO">${invalidinituserid} = 0</msg>
<status status="PASS" starttime="20210205 12:52:08.300" endtime="20210205 12:52:08.302"></status>
</kw>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidfinaluserid}</var>
</assign>
<msg timestamp="20210205 12:52:08.304" level="INFO">${invalidfinaluserid} = 11</msg>
<status status="PASS" starttime="20210205 12:52:08.302" endtime="20210205 12:52:08.304"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${invalidinituserid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.306" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:08.305" endtime="20210205 12:52:08.306"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:08.374" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/0/posts 
 path_url=/users/0/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:08.374" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/0/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=daa8abac44981f20342ba39d04cf936fd1612547528; expires=Sun, 07-Mar-21 17:52:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612543132', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4418', 'Accept-Ranges': 'bytes', 'cf-request-id': '0814ebaf340000e85d4e361000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=6ZX%2FASVjsfo0qbYVq9wQgI6vNZj4PmizCr%2BpmVR0Zso35w9yxqVYkG9SVK6%2F74iDa3tvYtv0XOFiabU7lKja9LGg8DkQJlMfKb6eujWUisqET0kc1%2Fd1%2Bky9ufCT"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bc519abe85d-EWR'} 
 body=[] 
 </msg>
<msg timestamp="20210205 12:52:08.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.306" endtime="20210205 12:52:08.375"></status>
</kw>
<msg timestamp="20210205 12:52:08.376" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.304" endtime="20210205 12:52:08.376"></status>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.376" endtime="20210205 12:52:08.378"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${invalidfinaluserid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.380" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:08.380" endtime="20210205 12:52:08.381"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:08.438" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/11/posts 
 path_url=/users/11/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:08.438" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/11/posts 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d90c42a8ca67e22a11e06d9ab36f75ef81612547528; expires=Sun, 07-Mar-21 17:52:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612543132', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '4418', 'Accept-Ranges': 'bytes', 'cf-request-id': '0814ebaf80000015bfa3088000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=NFl7kWWUPFv9baeiGHvF4EDXcZs8ZQFgA%2BW%2BGw4xFS4H%2FbrG4dp7ApiNevhhBGX6cHU2ZVEroyEctnejV7jZQryK0vyDaANu6c7duaBku4mvGs3dWCMnWqPZH0AS"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bc5990615bf-EWR'} 
 body=[] 
 </msg>
<msg timestamp="20210205 12:52:08.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.381" endtime="20210205 12:52:08.438"></status>
</kw>
<msg timestamp="20210205 12:52:08.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.378" endtime="20210205 12:52:08.439"></status>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.439" endtime="20210205 12:52:08.441"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.294" endtime="20210205 12:52:08.442"></status>
</kw>
<doc>Invalid Id Boundary Values: 0,11</doc>
<tags>
<tag>Negative Boundary</tag>
</tags>
<status status="PASS" starttime="20210205 12:52:08.276" endtime="20210205 12:52:08.443" critical="yes"></status>
</test>
<test id="s1-t4" name="TC004 VALIDATE GET POST BY POST ID - VALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:08.449" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:08.448" endtime="20210205 12:52:08.449"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 12:52:08.452" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.450" endtime="20210205 12:52:08.452"></status>
</kw>
<msg timestamp="20210205 12:52:08.453" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.447" endtime="20210205 12:52:08.453"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 12:52:08.456" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.455" endtime="20210205 12:52:08.457"></status>
</kw>
<msg timestamp="20210205 12:52:08.457" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.453" endtime="20210205 12:52:08.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.458" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.457" endtime="20210205 12:52:08.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 12:52:08.459" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 12:52:08.459" endtime="20210205 12:52:08.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.460" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.459" endtime="20210205 12:52:08.460"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.446" endtime="20210205 12:52:08.460"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Valid Post Id Boundary Values: 1,100</arg>
</arguments>
<msg timestamp="20210205 12:52:08.462" level="INFO">Set test documentation to:
Valid Post Id Boundary Values: 1,100</msg>
<status status="PASS" starttime="20210205 12:52:08.461" endtime="20210205 12:52:08.462"></status>
</kw>
<kw name="VALIDATE POST BY VALID POST ID" library="PostsHelper">
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${validinitpostid}</var>
</assign>
<msg timestamp="20210205 12:52:08.464" level="INFO">${validinitpostid} = 1</msg>
<status status="PASS" starttime="20210205 12:52:08.463" endtime="20210205 12:52:08.464"></status>
</kw>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${validinitpostcount}</var>
</assign>
<msg timestamp="20210205 12:52:08.465" level="INFO">${validinitpostcount} = 1</msg>
<status status="PASS" starttime="20210205 12:52:08.464" endtime="20210205 12:52:08.465"></status>
</kw>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${validfinalpostid}</var>
</assign>
<msg timestamp="20210205 12:52:08.467" level="INFO">${validfinalpostid} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.466" endtime="20210205 12:52:08.468"></status>
</kw>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${validfinalpostcount}</var>
</assign>
<msg timestamp="20210205 12:52:08.470" level="INFO">${validfinalpostcount} = 1</msg>
<status status="PASS" starttime="20210205 12:52:08.468" endtime="20210205 12:52:08.470"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:08.472" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:08.471" endtime="20210205 12:52:08.472"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 12:52:08.474" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.473" endtime="20210205 12:52:08.474"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${validinitpostid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.475" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:08.475" endtime="20210205 12:52:08.476"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:08.527" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:08.527" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df3ac94fb132595ca41bdffaf1a030bba1612547528; expires=Sun, 07-Mar-21 17:52:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7679', 'cf-request-id': '0814ebafdc00003da855af2000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=LDz8e%2BVT8e4P0jZgGdvWzQ3RZFnG31xj9CBRCDXXOsHmnDZXCwado7sYBarjoc3HxLQbDfvhVKyaVugBm2AMGiV9Npxydx%2BzhnAIhKGDQPJl6wjbdNu%2FGWTf5c5a"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bc62ce43da8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<msg timestamp="20210205 12:52:08.527" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.476" endtime="20210205 12:52:08.528"></status>
</kw>
<msg timestamp="20210205 12:52:08.528" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.474" endtime="20210205 12:52:08.528"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.533" endtime="20210205 12:52:08.537"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.531" endtime="20210205 12:52:08.537"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.530" endtime="20210205 12:52:08.538"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.538" endtime="20210205 12:52:08.539"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.538" endtime="20210205 12:52:08.539"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${validinitpostid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:08.542" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:08.541" endtime="20210205 12:52:08.542"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:08.648" level="INFO">${idvalue} = [1]</msg>
<status status="PASS" starttime="20210205 12:52:08.542" endtime="20210205 12:52:08.648"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:08.649" level="INFO">${responseid} = 1</msg>
<status status="PASS" starttime="20210205 12:52:08.648" endtime="20210205 12:52:08.649"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.649" endtime="20210205 12:52:08.649"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:08.650" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:08.649" endtime="20210205 12:52:08.650"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.539" endtime="20210205 12:52:08.650"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${validfinalpostid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.651" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:08.651" endtime="20210205 12:52:08.651"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:08.699" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:08.700" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d34a3f62ffcdd6747463430774e3fbc481612547528; expires=Sun, 07-Mar-21 17:52:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611591853', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7458', 'cf-request-id': '0814ebb08a0000f04db9047000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=kh%2FzQyfTA%2B%2BfN1a24vC6lIjhasKLpS9AI6kULUfBjDj0fEgK2pm0sS9IPuuyTkRee1agvNULp1sUy%2BLQaGWGydi8SkX8TqKJHsuj2uBKgGoxXAV6WKLj2VHvZFhT"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bc74f83f04d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<msg timestamp="20210205 12:52:08.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.652" endtime="20210205 12:52:08.700"></status>
</kw>
<msg timestamp="20210205 12:52:08.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.650" endtime="20210205 12:52:08.701"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.703" endtime="20210205 12:52:08.706"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.702" endtime="20210205 12:52:08.706"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.701" endtime="20210205 12:52:08.706"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.708" endtime="20210205 12:52:08.708"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.707" endtime="20210205 12:52:08.709"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${validfinalpostid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:08.710" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:08.710" endtime="20210205 12:52:08.710"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:08.782" level="INFO">${idvalue} = [100]</msg>
<status status="PASS" starttime="20210205 12:52:08.710" endtime="20210205 12:52:08.782"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:08.783" level="INFO">${responseid} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.783" endtime="20210205 12:52:08.783"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:08.784" endtime="20210205 12:52:08.784"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:08.785" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:08.785" endtime="20210205 12:52:08.785"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.709" endtime="20210205 12:52:08.785"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.462" endtime="20210205 12:52:08.786"></status>
</kw>
<doc>Valid Post Id Boundary Values: 1,100</doc>
<tags>
<tag>Positive Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 12:52:08.444" endtime="20210205 12:52:08.786" critical="yes"></status>
</test>
<test id="s1-t5" name="TC005 VALIDATE GET POST BY POST ID - INVALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:08.794" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:08.793" endtime="20210205 12:52:08.795"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 12:52:08.797" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.795" endtime="20210205 12:52:08.797"></status>
</kw>
<msg timestamp="20210205 12:52:08.798" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.792" endtime="20210205 12:52:08.798"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 12:52:08.802" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.799" endtime="20210205 12:52:08.803"></status>
</kw>
<msg timestamp="20210205 12:52:08.803" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.798" endtime="20210205 12:52:08.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.804" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.804" endtime="20210205 12:52:08.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 12:52:08.805" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 12:52:08.805" endtime="20210205 12:52:08.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.806" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 12:52:08.806" endtime="20210205 12:52:08.807"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.791" endtime="20210205 12:52:08.807"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Invalid Post Id Boundary Values: 0,101</arg>
</arguments>
<msg timestamp="20210205 12:52:08.808" level="INFO">Set test documentation to:
Invalid Post Id Boundary Values: 0,101</msg>
<status status="PASS" starttime="20210205 12:52:08.808" endtime="20210205 12:52:08.808"></status>
</kw>
<kw name="VALIDATE POST BY INVALID POST ID" library="PostsHelper">
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidinitpostid}</var>
</assign>
<msg timestamp="20210205 12:52:08.812" level="INFO">${invalidinitpostid} = 0</msg>
<status status="PASS" starttime="20210205 12:52:08.811" endtime="20210205 12:52:08.812"></status>
</kw>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidfinalpostid}</var>
</assign>
<msg timestamp="20210205 12:52:08.815" level="INFO">${invalidfinalpostid} = 101</msg>
<status status="PASS" starttime="20210205 12:52:08.813" endtime="20210205 12:52:08.815"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:08.818" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:08.816" endtime="20210205 12:52:08.818"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 12:52:08.820" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:08.818" endtime="20210205 12:52:08.820"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${invalidinitpostid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${invalidinitpostid}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.822" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:08.822" endtime="20210205 12:52:08.823"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:08.882" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/0 
 path_url=/posts/0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:08.882" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/0 
 status=404, reason=Not Found 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcce6e96701170068ebcdad491f7dec0e1612547529; expires=Sun, 07-Mar-21 17:52:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612546792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '742', 'cf-request-id': '0814ebb13e00003df86e827000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=nDRpWRhibMUhATsjK864Rs7BgxOJe5GobCxjWzgnKomocLuksGoIVv69Jd5EcFYgCXyPCRqlV9Y5uAIJTa2uPd%2Fvtp0X9yB3IV6Aau0v0KYSzcy1hPix3G5NcNuj"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bc86bed3df8-EWR'} 
 body={} 
 </msg>
<msg timestamp="20210205 12:52:08.890" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/0</msg>
<status status="FAIL" starttime="20210205 12:52:08.824" endtime="20210205 12:52:08.890"></status>
</kw>
<status status="FAIL" starttime="20210205 12:52:08.821" endtime="20210205 12:52:08.891"></status>
</kw>
<msg timestamp="20210205 12:52:08.891" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/0</msg>
<status status="PASS" starttime="20210205 12:52:08.820" endtime="20210205 12:52:08.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.892" endtime="20210205 12:52:08.892"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${invalidfinalpostid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${invalidfinalpostid}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.895" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:08.894" endtime="20210205 12:52:08.895"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:08.945" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/101 
 path_url=/posts/101 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:08.945" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/101 
 status=404, reason=Not Found 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db06222199d585de502b5c7fdeede8cb01612547529; expires=Sun, 07-Mar-21 17:52:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '998', 'x-ratelimit-reset': '1612546792', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '742', 'cf-request-id': '0814ebb17e0000f029d8899000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=6IbJyfYXqgzD%2ByBtE9E439Are%2BM5IqT8CqIOQVl4Jp0lK5EMfFWRzhhZUspG6vAiRfSKm2UHMqdt%2Fwiof59%2BTVSZgLUvkKL7ZCVbGIBxXxs6%2BlveIfE%2BYOKGnEbR"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bc8c80ff029-EWR'} 
 body={} 
 </msg>
<msg timestamp="20210205 12:52:08.950" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/101</msg>
<status status="FAIL" starttime="20210205 12:52:08.895" endtime="20210205 12:52:08.950"></status>
</kw>
<status status="FAIL" starttime="20210205 12:52:08.893" endtime="20210205 12:52:08.950"></status>
</kw>
<msg timestamp="20210205 12:52:08.951" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/101</msg>
<status status="PASS" starttime="20210205 12:52:08.893" endtime="20210205 12:52:08.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:08.951" endtime="20210205 12:52:08.952"></status>
</kw>
<kw name="GET RANDOM STRING" library="PostsHelper">
<assign>
<var>${randomstr}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${randompostid}</var>
</assign>
<msg timestamp="20210205 12:52:08.953" level="INFO">${randompostid} = NVhWs</msg>
<status status="PASS" starttime="20210205 12:52:08.952" endtime="20210205 12:52:08.953"></status>
</kw>
<msg timestamp="20210205 12:52:08.953" level="INFO">${randomstr} = NVhWs</msg>
<status status="PASS" starttime="20210205 12:52:08.952" endtime="20210205 12:52:08.954"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:08.956" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:08.955" endtime="20210205 12:52:08.957"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:09.040" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/NVhWs 
 path_url=/posts/NVhWs 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:09.040" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/NVhWs 
 status=404, reason=Not Found 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d24609aca80ca0c546ac3e3435a1f26161612547529; expires=Sun, 07-Mar-21 17:52:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612547561', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'MISS', 'cf-request-id': '0814ebb1be0000f0050494c000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=IYrDaOPHqp3MA4ZHozN2hwgFWhXSY2QA79sA5A4K6G6pEZzLzQZZ0ge71leQYd81Vn19bQXdUCi9RWQYfCzYete8XrUNG2%2FxaPxIgTgR8vgSLfnlDLJXb%2BHxUCnN"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bc93ff2f005-EWR'} 
 body={} 
 </msg>
<msg timestamp="20210205 12:52:09.044" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/NVhWs</msg>
<status status="FAIL" starttime="20210205 12:52:08.957" endtime="20210205 12:52:09.045"></status>
</kw>
<status status="FAIL" starttime="20210205 12:52:08.954" endtime="20210205 12:52:09.045"></status>
</kw>
<msg timestamp="20210205 12:52:09.045" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/NVhWs</msg>
<status status="PASS" starttime="20210205 12:52:08.954" endtime="20210205 12:52:09.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.046" endtime="20210205 12:52:09.046"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:08.810" endtime="20210205 12:52:09.047"></status>
</kw>
<doc>Invalid Post Id Boundary Values: 0,101</doc>
<tags>
<tag>Negative Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 12:52:08.789" endtime="20210205 12:52:09.047" critical="yes"></status>
</test>
<test id="s1-t6" name="TC006 COMPARE USER ID FILTERED ALL POSTS RESPONSE TO GET POST BY USER ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:09.064" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:09.062" endtime="20210205 12:52:09.064"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 12:52:09.065" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:09.064" endtime="20210205 12:52:09.066"></status>
</kw>
<msg timestamp="20210205 12:52:09.066" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:09.061" endtime="20210205 12:52:09.066"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.069" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 12:52:09.067" endtime="20210205 12:52:09.069"></status>
</kw>
<msg timestamp="20210205 12:52:09.069" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 12:52:09.066" endtime="20210205 12:52:09.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.070" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:09.070" endtime="20210205 12:52:09.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 12:52:09.071" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 12:52:09.071" endtime="20210205 12:52:09.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.072" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 12:52:09.072" endtime="20210205 12:52:09.072"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.061" endtime="20210205 12:52:09.073"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Todo</arg>
</arguments>
<msg timestamp="20210205 12:52:09.074" level="INFO">Set test documentation to:
Todo</msg>
<status status="PASS" starttime="20210205 12:52:09.073" endtime="20210205 12:52:09.074"></status>
</kw>
<doc>Todo</doc>
<status status="PASS" starttime="20210205 12:52:09.058" endtime="20210205 12:52:09.103" critical="yes"></status>
</test>
<test id="s1-t7" name="TC007 COMPARE POST ID FILTERED POST ENDPOINT RESPONSE TO GET POST BY POST ID URI RESPONSE">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:09.111" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:09.110" endtime="20210205 12:52:09.111"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 12:52:09.113" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:09.111" endtime="20210205 12:52:09.113"></status>
</kw>
<msg timestamp="20210205 12:52:09.114" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:09.109" endtime="20210205 12:52:09.114"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.116" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 12:52:09.115" endtime="20210205 12:52:09.117"></status>
</kw>
<msg timestamp="20210205 12:52:09.117" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 12:52:09.114" endtime="20210205 12:52:09.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.118" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:09.117" endtime="20210205 12:52:09.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 12:52:09.118" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 12:52:09.118" endtime="20210205 12:52:09.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.119" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 12:52:09.119" endtime="20210205 12:52:09.119"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.108" endtime="20210205 12:52:09.119"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Todo</arg>
</arguments>
<msg timestamp="20210205 12:52:09.136" level="INFO">Set test documentation to:
Todo</msg>
<status status="PASS" starttime="20210205 12:52:09.135" endtime="20210205 12:52:09.137"></status>
</kw>
<doc>Todo</doc>
<status status="PASS" starttime="20210205 12:52:09.107" endtime="20210205 12:52:09.138" critical="yes"></status>
</test>
<test id="s1-t8" name="TC008 VALIDATE GET POST BY POST ID FOR ALL POST ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 12:52:09.143" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 12:52:09.142" endtime="20210205 12:52:09.143"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 12:52:09.144" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:09.143" endtime="20210205 12:52:09.144"></status>
</kw>
<msg timestamp="20210205 12:52:09.144" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:09.141" endtime="20210205 12:52:09.144"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.146" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 12:52:09.145" endtime="20210205 12:52:09.146"></status>
</kw>
<msg timestamp="20210205 12:52:09.146" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 12:52:09.144" endtime="20210205 12:52:09.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.148" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 12:52:09.147" endtime="20210205 12:52:09.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 12:52:09.150" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 12:52:09.149" endtime="20210205 12:52:09.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.151" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 12:52:09.150" endtime="20210205 12:52:09.151"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.141" endtime="20210205 12:52:09.152"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${allpostcnt}</arg>
</arguments>
<assign>
<var>${allpostnum}</var>
</assign>
<msg timestamp="20210205 12:52:09.168" level="INFO">${allpostnum} = 100</msg>
<status status="PASS" starttime="20210205 12:52:09.166" endtime="20210205 12:52:09.168"></status>
</kw>
<kw name="${postid} IN RANGE [ 1 | ${allpostnum+1} ]" type="for">
<kw name="${postid} = 1" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.172" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:09.172" endtime="20210205 12:52:09.173"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:09.226" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:09.226" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da03d028138a43b8cf3e2a0c523f7d8181612547529; expires=Sun, 07-Mar-21 17:52:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612482284', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7680', 'cf-request-id': '0814ebb29400003e159db0e000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=yk1NHWqTEEZLE2SSs1Xjh7jJhMva%2Fu4yXKpJ4wvPnwHclSRkuWhFQDrdGXRxDqCamhVjm08jb7wVrgEMTtT8j5jo81vjgDKx6hiv7KzamEcUxZJ2oAVK%2Fy6ovB0A"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bca8d103e15-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<msg timestamp="20210205 12:52:09.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.173" endtime="20210205 12:52:09.227"></status>
</kw>
<msg timestamp="20210205 12:52:09.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.170" endtime="20210205 12:52:09.227"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.229" endtime="20210205 12:52:09.233"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.228" endtime="20210205 12:52:09.233"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.227" endtime="20210205 12:52:09.234"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.235" endtime="20210205 12:52:09.235"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.234" endtime="20210205 12:52:09.235"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.236" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:09.236" endtime="20210205 12:52:09.236"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.297" level="INFO">${idvalue} = [1]</msg>
<status status="PASS" starttime="20210205 12:52:09.236" endtime="20210205 12:52:09.297"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:09.298" level="INFO">${responseid} = 1</msg>
<status status="PASS" starttime="20210205 12:52:09.297" endtime="20210205 12:52:09.298"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.298" endtime="20210205 12:52:09.299"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.299" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:09.299" endtime="20210205 12:52:09.299"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.235" endtime="20210205 12:52:09.300"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.170" endtime="20210205 12:52:09.300"></status>
</kw>
<kw name="${postid} = 2" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.302" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:09.301" endtime="20210205 12:52:09.302"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:09.387" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/2 
 path_url=/posts/2 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:09.387" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/2 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd0d5f0ba0d21ada08188de6e5314d1911612547529; expires=Sun, 07-Mar-21 17:52:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612518289', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"116-jnDuMpjju89+9j7e0BqkdFsVRjs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '355', 'cf-request-id': '0814ebb316000015b793816000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=MdlVQgZ%2B9purr5l8B%2FoGZuQdYL7rKxpXbnPgHWWvS3ZhXK2o6m4Ktl7Es3diOE%2BwjRDH7ZaLOijn5M%2BzTOgoWQ6X7XGmfp4jmPzGjjvi5I7ItvxVPvwXi1mq6FqE"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bcb5c0f15b7-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 2,
  "title": "qui est esse",
  "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
} 
 </msg>
<msg timestamp="20210205 12:52:09.387" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.302" endtime="20210205 12:52:09.387"></status>
</kw>
<msg timestamp="20210205 12:52:09.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.300" endtime="20210205 12:52:09.388"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.391" endtime="20210205 12:52:09.394"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.390" endtime="20210205 12:52:09.394"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.389" endtime="20210205 12:52:09.395"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.396" endtime="20210205 12:52:09.397"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.395" endtime="20210205 12:52:09.397"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.399" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:09.398" endtime="20210205 12:52:09.399"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.470" level="INFO">${idvalue} = [2]</msg>
<status status="PASS" starttime="20210205 12:52:09.399" endtime="20210205 12:52:09.470"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:09.471" level="INFO">${responseid} = 2</msg>
<status status="PASS" starttime="20210205 12:52:09.471" endtime="20210205 12:52:09.471"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.472" endtime="20210205 12:52:09.472"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.473" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:09.473" endtime="20210205 12:52:09.473"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.397" endtime="20210205 12:52:09.473"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.300" endtime="20210205 12:52:09.473"></status>
</kw>
<kw name="${postid} = 3" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.475" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:09.475" endtime="20210205 12:52:09.476"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:09.542" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/3 
 path_url=/posts/3 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:09.542" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/3 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dfb0fbc66019be10fdeef29fd7cab1ada1612547529; expires=Sun, 07-Mar-21 17:52:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1610298431', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11b-USacuIw5a/iXAGdNKBvqr/TbMTc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '25825', 'cf-request-id': '0814ebb3ce0000e74c8e94f000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=1iyLmDbpoYHgX%2FHjfeOsKgHjTDTsYg6HqYOuZ23ZOhbc%2Bhh72NSNrbgThDicwYzHuPZiznG1ah%2BNhhbnQFDa0%2FSzt%2FRTaQe9DRshjMmauAL%2FB%2Fcvfjnp%2FP20PQcT"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bcc7a6be74c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 3,
  "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
  "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
} 
 </msg>
<msg timestamp="20210205 12:52:09.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.476" endtime="20210205 12:52:09.543"></status>
</kw>
<msg timestamp="20210205 12:52:09.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.474" endtime="20210205 12:52:09.543"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.546" endtime="20210205 12:52:09.549"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.545" endtime="20210205 12:52:09.549"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.543" endtime="20210205 12:52:09.549"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.550" endtime="20210205 12:52:09.551"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.549" endtime="20210205 12:52:09.551"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.553" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:09.552" endtime="20210205 12:52:09.553"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.621" level="INFO">${idvalue} = [3]</msg>
<status status="PASS" starttime="20210205 12:52:09.553" endtime="20210205 12:52:09.621"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:09.623" level="INFO">${responseid} = 3</msg>
<status status="PASS" starttime="20210205 12:52:09.622" endtime="20210205 12:52:09.623"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.623" endtime="20210205 12:52:09.624"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.625" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:09.624" endtime="20210205 12:52:09.625"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.551" endtime="20210205 12:52:09.625"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.473" endtime="20210205 12:52:09.625"></status>
</kw>
<kw name="${postid} = 4" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.627" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:09.627" endtime="20210205 12:52:09.628"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:09.684" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/4 
 path_url=/posts/4 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:09.684" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/4 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7111e612894029283eae69d9055aaebc1612547529; expires=Sun, 07-Mar-21 17:52:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1610298431', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10e-HqG77o1RAmatkSwR36f4+Io6g1E"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7461', 'cf-request-id': '0814ebb4600000f019658db000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=eRYlbE7VFpI3JluH1l0NSfT%2Bkf0NIDR1OeyD33s13YojlZO%2BAJwUoxfTymxYNfA0usd0%2Fsda68vMGd9v0v%2BRCM9ZOk8gOQVbhhZJ8GYmEB8tZIubQBPwT2owv9Am"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bcd6f10f019-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 4,
  "title": "eum et est occaecati",
  "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
} 
 </msg>
<msg timestamp="20210205 12:52:09.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.628" endtime="20210205 12:52:09.685"></status>
</kw>
<msg timestamp="20210205 12:52:09.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.626" endtime="20210205 12:52:09.685"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.688" endtime="20210205 12:52:09.691"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.687" endtime="20210205 12:52:09.691"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.686" endtime="20210205 12:52:09.691"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.692" endtime="20210205 12:52:09.693"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.691" endtime="20210205 12:52:09.693"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.695" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:09.694" endtime="20210205 12:52:09.695"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.767" level="INFO">${idvalue} = [4]</msg>
<status status="PASS" starttime="20210205 12:52:09.695" endtime="20210205 12:52:09.767"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:09.768" level="INFO">${responseid} = 4</msg>
<status status="PASS" starttime="20210205 12:52:09.767" endtime="20210205 12:52:09.768"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.768" endtime="20210205 12:52:09.769"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.769" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:09.769" endtime="20210205 12:52:09.769"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.693" endtime="20210205 12:52:09.770"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.625" endtime="20210205 12:52:09.770"></status>
</kw>
<kw name="${postid} = 5" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.772" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:09.771" endtime="20210205 12:52:09.772"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:09.827" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/5 
 path_url=/posts/5 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:09.827" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/5 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dad544c89a836725cc73304725146313c1612547529; expires=Sun, 07-Mar-21 17:52:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612523149', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-IivojO0CtPZmcMK0iydTbsfG7Wc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '24390', 'cf-request-id': '0814ebb4ee00000cc918140000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=HhNNDBpmtnagT03%2B92GlW%2Be89ZcXE7QoV0yHg8Az4dBXgTeDPRQkqW5OiyMIXN8KE25lGf3TejPrdRWRsC0HjWXkHpAk5XYP5rvOpiAY5%2BFqqp9R7CcJA8XD5CoY"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bce4d200cc9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 5,
  "title": "nesciunt quas odio",
  "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
} 
 </msg>
<msg timestamp="20210205 12:52:09.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.772" endtime="20210205 12:52:09.828"></status>
</kw>
<msg timestamp="20210205 12:52:09.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.770" endtime="20210205 12:52:09.828"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.831" endtime="20210205 12:52:09.834"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.830" endtime="20210205 12:52:09.834"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.829" endtime="20210205 12:52:09.834"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.835" endtime="20210205 12:52:09.836"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.834" endtime="20210205 12:52:09.836"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.838" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:09.837" endtime="20210205 12:52:09.838"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.905" level="INFO">${idvalue} = [5]</msg>
<status status="PASS" starttime="20210205 12:52:09.838" endtime="20210205 12:52:09.905"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:09.906" level="INFO">${responseid} = 5</msg>
<status status="PASS" starttime="20210205 12:52:09.905" endtime="20210205 12:52:09.906"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.906" endtime="20210205 12:52:09.907"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.908" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:09.907" endtime="20210205 12:52:09.908"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.836" endtime="20210205 12:52:09.908"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.770" endtime="20210205 12:52:09.908"></status>
</kw>
<kw name="${postid} = 6" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.910" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:09.910" endtime="20210205 12:52:09.911"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:09.965" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/6 
 path_url=/posts/6 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:09.966" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/6 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d969fc0a578720711b662b53530e78ab91612547530; expires=Sun, 07-Mar-21 17:52:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612517389', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-kxIuVC3UpKrGIRfIBmsZMsJaaiA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '1160', 'cf-request-id': '0814ebb57a00003da9b889e000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=8Qzp43WhboviAu68txd8Aqj5bci4rVxRF4JIYUZ4na%2Fc7C3%2F%2F%2Fy8AW2XkdBT4Wnp3oFq51kK4%2FSg86wo1yG7FFwaadv5bL3HTynuLDuHMLN19NJ%2FRz3EXZqAtIBg"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bcf2eab3da9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 6,
  "title": "dolorem eum magni eos aperiam quia",
  "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
} 
 </msg>
<msg timestamp="20210205 12:52:09.966" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.911" endtime="20210205 12:52:09.966"></status>
</kw>
<msg timestamp="20210205 12:52:09.966" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.909" endtime="20210205 12:52:09.967"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:09.969" endtime="20210205 12:52:09.972"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.968" endtime="20210205 12:52:09.972"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.967" endtime="20210205 12:52:09.972"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:09.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:09.974" endtime="20210205 12:52:09.974"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.973" endtime="20210205 12:52:09.974"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:09.976" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:09.975" endtime="20210205 12:52:09.976"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.035" level="INFO">${idvalue} = [6]</msg>
<status status="PASS" starttime="20210205 12:52:09.976" endtime="20210205 12:52:10.035"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:10.036" level="INFO">${responseid} = 6</msg>
<status status="PASS" starttime="20210205 12:52:10.035" endtime="20210205 12:52:10.036"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:10.036" endtime="20210205 12:52:10.036"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.037" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:10.037" endtime="20210205 12:52:10.037"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.975" endtime="20210205 12:52:10.037"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.909" endtime="20210205 12:52:10.037"></status>
</kw>
<kw name="${postid} = 7" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:10.038" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:10.038" endtime="20210205 12:52:10.039"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:10.132" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/7 
 path_url=/posts/7 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:10.132" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/7 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3f87f1ff274ee371f65702bca025d7011612547530; expires=Sun, 07-Mar-21 17:52:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612523209', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-wrK4SLERwov0EbpkNAKTHsvGWBs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '24373', 'cf-request-id': '0814ebb5ff000015d3d71b5000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=bs9pWMuWjE0rp54TXYKJefB3Xu8O%2BJ7e1rWmZzyWWPoMpQyBze5yQPBy0OO3b1DQype181LVAZM%2BUMPidlpHl7HrSRgDz2JixoSTtVrzT35iKoyyFKImLvePiu3B"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bcffc0f15d3-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 7,
  "title": "magnam facilis autem",
  "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
} 
 </msg>
<msg timestamp="20210205 12:52:10.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.039" endtime="20210205 12:52:10.133"></status>
</kw>
<msg timestamp="20210205 12:52:10.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.037" endtime="20210205 12:52:10.133"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:10.136" endtime="20210205 12:52:10.139"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.134" endtime="20210205 12:52:10.139"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.133" endtime="20210205 12:52:10.139"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:10.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.141" endtime="20210205 12:52:10.141"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.139" endtime="20210205 12:52:10.141"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.143" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:10.142" endtime="20210205 12:52:10.143"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.212" level="INFO">${idvalue} = [7]</msg>
<status status="PASS" starttime="20210205 12:52:10.143" endtime="20210205 12:52:10.212"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:10.213" level="INFO">${responseid} = 7</msg>
<status status="PASS" starttime="20210205 12:52:10.212" endtime="20210205 12:52:10.213"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:10.214" endtime="20210205 12:52:10.214"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.215" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:10.215" endtime="20210205 12:52:10.215"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.142" endtime="20210205 12:52:10.215"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.037" endtime="20210205 12:52:10.215"></status>
</kw>
<kw name="${postid} = 8" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:10.217" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:10.217" endtime="20210205 12:52:10.218"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:10.281" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/8 
 path_url=/posts/8 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:10.281" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/8 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d73521274f99c15ed4c4ed7dae11789ea1612547530; expires=Sun, 07-Mar-21 17:52:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '999', 'x-ratelimit-reset': '1612211807', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"104-Yd+P3vUk4gJ20H3qrEyZIqbProI"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7462', 'cf-request-id': '0814ebb6b60000f05539b4f000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Ebb%2Bh3FROk21AiFhX1kVIA4hUrgFgeG4U4ZaZN105CP6Y%2Fk%2FkpjlGTZeVTOIQcliRZ8Jpt0ZWHG6Y5L92BXEEH9GVIkWhgCqiPQWnpbwN%2FpohVoWov31R9j9saPp"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bd12a0cf055-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 8,
  "title": "dolorem dolore est ipsam",
  "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
} 
 </msg>
<msg timestamp="20210205 12:52:10.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.218" endtime="20210205 12:52:10.282"></status>
</kw>
<msg timestamp="20210205 12:52:10.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.216" endtime="20210205 12:52:10.282"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:10.285" endtime="20210205 12:52:10.288"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.284" endtime="20210205 12:52:10.288"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.283" endtime="20210205 12:52:10.288"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:10.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.289" endtime="20210205 12:52:10.290"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.288" endtime="20210205 12:52:10.290"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.292" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:10.291" endtime="20210205 12:52:10.292"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.359" level="INFO">${idvalue} = [8]</msg>
<status status="PASS" starttime="20210205 12:52:10.292" endtime="20210205 12:52:10.359"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:10.360" level="INFO">${responseid} = 8</msg>
<status status="PASS" starttime="20210205 12:52:10.359" endtime="20210205 12:52:10.360"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:10.360" endtime="20210205 12:52:10.360"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.361" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:10.360" endtime="20210205 12:52:10.361"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.291" endtime="20210205 12:52:10.361"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.216" endtime="20210205 12:52:10.361"></status>
</kw>
<kw name="${postid} = 9" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:10.362" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:10.362" endtime="20210205 12:52:10.362"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:10.529" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/9 
 path_url=/posts/9 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:10.529" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/9 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d505e8f5f9ac8bac95cf8b7e8d0c4b41b1612547530; expires=Sun, 07-Mar-21 17:52:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '991', 'X-Ratelimit-Reset': '1611625595', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-mPDZopc4bkupX1TAvUQz4Bpbp5s"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '9362', 'cf-request-id': '0814ebb7ae0000e851a0363000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Vb7GVztIL50FkTl0uNEuX8flVg%2BI2DILaB7iShfrM9k%2BV2h00tTh2nLILEY3qdir364IVzOUs9u83NapF4ZVYhM%2F6iqCdV5730Nj0uo7WmebhKL3O40MoB8yvwA0"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bd2be39e851-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 9,
  "title": "nesciunt iure omnis dolorem tempora et accusantium",
  "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
} 
 </msg>
<msg timestamp="20210205 12:52:10.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.363" endtime="20210205 12:52:10.530"></status>
</kw>
<msg timestamp="20210205 12:52:10.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.361" endtime="20210205 12:52:10.530"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:10.533" endtime="20210205 12:52:10.535"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.532" endtime="20210205 12:52:10.536"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.531" endtime="20210205 12:52:10.536"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:10.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.537" endtime="20210205 12:52:10.538"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.536" endtime="20210205 12:52:10.538"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.540" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:10.539" endtime="20210205 12:52:10.540"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.611" level="INFO">${idvalue} = [9]</msg>
<status status="PASS" starttime="20210205 12:52:10.540" endtime="20210205 12:52:10.611"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:10.613" level="INFO">${responseid} = 9</msg>
<status status="PASS" starttime="20210205 12:52:10.612" endtime="20210205 12:52:10.613"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:10.614" endtime="20210205 12:52:10.615"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.616" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:10.615" endtime="20210205 12:52:10.616"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.538" endtime="20210205 12:52:10.616"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.361" endtime="20210205 12:52:10.616"></status>
</kw>
<kw name="${postid} = 10" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:10.620" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:10.619" endtime="20210205 12:52:10.621"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:10.798" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/10 
 path_url=/posts/10 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:10.798" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/10 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dab059a8d416d8aeae9dfca6cf6fad8d01612547530; expires=Sun, 07-Mar-21 17:52:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '993', 'X-Ratelimit-Reset': '1612521769', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d9-iWGkhNuCVU3QUpWXcSkr72qX524"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '25801', 'cf-request-id': '0814ebb8bb00003e51dd376000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=nh7qJXTa%2FZYKaliiZ8T%2B%2FZdwIeDVi81VNEvdOi9x7dHE6F3gw13%2Bf1q7XDUw5AcB5TEI0CCvHXGbGo5SDxboEP2kHw8Yf6uSwuJzALN5BLPz92MJmKcMrk%2FvSLQo"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bd458533e51-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 10,
  "title": "optio molestias id quia eum",
  "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
} 
 </msg>
<msg timestamp="20210205 12:52:10.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.621" endtime="20210205 12:52:10.799"></status>
</kw>
<msg timestamp="20210205 12:52:10.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.617" endtime="20210205 12:52:10.799"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:10.802" endtime="20210205 12:52:10.805"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.801" endtime="20210205 12:52:10.805"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.800" endtime="20210205 12:52:10.805"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:10.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.807" endtime="20210205 12:52:10.808"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.806" endtime="20210205 12:52:10.808"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.809" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:10.809" endtime="20210205 12:52:10.809"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.883" level="INFO">${idvalue} = [10]</msg>
<status status="PASS" starttime="20210205 12:52:10.810" endtime="20210205 12:52:10.883"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:10.884" level="INFO">${responseid} = 10</msg>
<status status="PASS" starttime="20210205 12:52:10.883" endtime="20210205 12:52:10.884"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:10.884" endtime="20210205 12:52:10.885"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:10.886" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:10.885" endtime="20210205 12:52:10.886"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.808" endtime="20210205 12:52:10.886"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.617" endtime="20210205 12:52:10.886"></status>
</kw>
<kw name="${postid} = 11" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:10.888" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:10.887" endtime="20210205 12:52:10.888"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:11.070" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/11 
 path_url=/posts/11 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:11.070" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/11 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7a7c1735972ba3c218ee0ada5c960cfa1612547531; expires=Sun, 07-Mar-21 17:52:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '936', 'X-Ratelimit-Reset': '1610900006', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-uIZ0aYbaIRT3eH//+EjRpRGAwRw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '9362', 'cf-request-id': '0814ebb9ca0000ccee8b9f4000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=nhGCpmWqBBVDevFs%2BsvocUa9hol%2BRijwluj6Wk3VCcjkks8Bvf8Asy5rBo3FvHjXDbpiIQLs6OJj8JfsoksNca%2B6nsCbBA0B5nNngArHtYoQFQ9LytpMRkcBgI%2Bm"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bd61f44ccee-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 11,
  "title": "et ea vero quia laudantium autem",
  "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
} 
 </msg>
<msg timestamp="20210205 12:52:11.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.889" endtime="20210205 12:52:11.071"></status>
</kw>
<msg timestamp="20210205 12:52:11.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:10.886" endtime="20210205 12:52:11.071"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:11.074" endtime="20210205 12:52:11.077"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.073" endtime="20210205 12:52:11.077"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.072" endtime="20210205 12:52:11.077"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:11.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.078" endtime="20210205 12:52:11.079"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.077" endtime="20210205 12:52:11.079"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.081" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:11.080" endtime="20210205 12:52:11.081"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.152" level="INFO">${idvalue} = [11]</msg>
<status status="PASS" starttime="20210205 12:52:11.081" endtime="20210205 12:52:11.152"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:11.153" level="INFO">${responseid} = 11</msg>
<status status="PASS" starttime="20210205 12:52:11.153" endtime="20210205 12:52:11.153"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:11.154" endtime="20210205 12:52:11.154"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.155" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:11.154" endtime="20210205 12:52:11.155"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.080" endtime="20210205 12:52:11.155"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:10.886" endtime="20210205 12:52:11.155"></status>
</kw>
<kw name="${postid} = 12" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:11.157" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:11.157" endtime="20210205 12:52:11.158"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:11.326" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/12 
 path_url=/posts/12 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:11.326" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/12 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df1e477d9bd902109d6e701c2009d73041612547531; expires=Sun, 07-Mar-21 17:52:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612515589', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fa-Kb6iNtCKEzLRQ8QyZ5zRPuKRNgs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '2932', 'cf-request-id': '0814ebba5c0000157748bee000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mIIHvCxa6XoW3imJPsBxj5YbIQExVjg5MtO%2F%2BAWBuO8osnwnIXLZEmgReDP9oSBabWygp1W4DN%2B4CnHcf3WMrl79Hsu030TvVXwvPDQB%2FoCLvhha01yrHBbqOPRt"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bd6ff501577-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 12,
  "title": "in quibusdam tempore odit est dolorem",
  "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
} 
 </msg>
<msg timestamp="20210205 12:52:11.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.158" endtime="20210205 12:52:11.327"></status>
</kw>
<msg timestamp="20210205 12:52:11.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.156" endtime="20210205 12:52:11.327"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:11.330" endtime="20210205 12:52:11.334"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.329" endtime="20210205 12:52:11.334"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.328" endtime="20210205 12:52:11.334"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:11.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.336" endtime="20210205 12:52:11.336"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.334" endtime="20210205 12:52:11.337"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.339" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:11.338" endtime="20210205 12:52:11.339"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.418" level="INFO">${idvalue} = [12]</msg>
<status status="PASS" starttime="20210205 12:52:11.339" endtime="20210205 12:52:11.418"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:11.420" level="INFO">${responseid} = 12</msg>
<status status="PASS" starttime="20210205 12:52:11.419" endtime="20210205 12:52:11.420"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:11.421" endtime="20210205 12:52:11.422"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.423" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:11.423" endtime="20210205 12:52:11.423"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.337" endtime="20210205 12:52:11.423"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.155" endtime="20210205 12:52:11.423"></status>
</kw>
<kw name="${postid} = 13" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:11.426" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:11.426" endtime="20210205 12:52:11.427"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:11.609" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/13 
 path_url=/posts/13 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:11.609" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/13 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d80e9faf0bc7efcbdcb5353fb7adba6661612547531; expires=Sun, 07-Mar-21 17:52:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '991', 'X-Ratelimit-Reset': '1611532392', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"150-jmPMxXQIZLCEEVRunU0Zippecws"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '9361', 'cf-request-id': '0814ebbb680000ccd670a50000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=iDXckUWDIGJum%2F25rLTM88RmkJ%2F2yl3uZGotqfbRlZlhdBKjw2SBAAMB7g3faVPP4Uu%2FK%2Bty6tmAnLXWurFJtXMuj0Ibefdn%2By8r5iLC0avTaTbuD9G0ArN8meoc"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bd8aedfccd6-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 13,
  "title": "dolorum ut in voluptas mollitia et saepe quo animi",
  "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
} 
 </msg>
<msg timestamp="20210205 12:52:11.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.427" endtime="20210205 12:52:11.609"></status>
</kw>
<msg timestamp="20210205 12:52:11.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.424" endtime="20210205 12:52:11.610"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:11.614" endtime="20210205 12:52:11.617"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.612" endtime="20210205 12:52:11.617"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.611" endtime="20210205 12:52:11.617"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:11.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.619" endtime="20210205 12:52:11.620"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.618" endtime="20210205 12:52:11.620"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.621" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:11.621" endtime="20210205 12:52:11.621"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.677" level="INFO">${idvalue} = [13]</msg>
<status status="PASS" starttime="20210205 12:52:11.622" endtime="20210205 12:52:11.677"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:11.678" level="INFO">${responseid} = 13</msg>
<status status="PASS" starttime="20210205 12:52:11.678" endtime="20210205 12:52:11.678"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:11.678" endtime="20210205 12:52:11.679"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.679" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:11.679" endtime="20210205 12:52:11.679"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.620" endtime="20210205 12:52:11.679"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.424" endtime="20210205 12:52:11.679"></status>
</kw>
<kw name="${postid} = 14" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:11.681" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:11.680" endtime="20210205 12:52:11.681"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:11.799" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/14 
 path_url=/posts/14 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:11.799" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/14 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d42268160436dc6355c7cbb8fb481de831612547531; expires=Sun, 07-Mar-21 17:52:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612525730', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e6-a5waiJMRxEr5D9vgRbpDZ2ofS4U"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '21835', 'cf-request-id': '0814ebbc610000e738f30cc000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=fzqPloZfnBuw3%2F9Y1rkDb%2F%2BVa06NVE2BaP9rr7qiDIsSx7zebCcZLE%2F11mk%2F1vMwYIEfSrEribWQeVp%2B%2BLaJOjB588QKd%2FNl1Rs0NAgoietVVVZdbTG9GB26FlTd"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bda3e54e738-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 14,
  "title": "voluptatem eligendi optio",
  "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
} 
 </msg>
<msg timestamp="20210205 12:52:11.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.681" endtime="20210205 12:52:11.800"></status>
</kw>
<msg timestamp="20210205 12:52:11.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.680" endtime="20210205 12:52:11.800"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:11.802" endtime="20210205 12:52:11.805"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.801" endtime="20210205 12:52:11.805"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.800" endtime="20210205 12:52:11.806"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:11.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.807" endtime="20210205 12:52:11.808"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.806" endtime="20210205 12:52:11.808"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.810" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:11.809" endtime="20210205 12:52:11.810"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.890" level="INFO">${idvalue} = [14]</msg>
<status status="PASS" starttime="20210205 12:52:11.810" endtime="20210205 12:52:11.890"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:11.891" level="INFO">${responseid} = 14</msg>
<status status="PASS" starttime="20210205 12:52:11.890" endtime="20210205 12:52:11.891"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:11.891" endtime="20210205 12:52:11.893"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.894" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:11.893" endtime="20210205 12:52:11.894"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.808" endtime="20210205 12:52:11.894"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.679" endtime="20210205 12:52:11.894"></status>
</kw>
<kw name="${postid} = 15" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:11.896" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:11.896" endtime="20210205 12:52:11.897"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:11.952" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/15 
 path_url=/posts/15 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:11.952" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/15 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2635880fd140eef403daab6062025acf1612547532; expires=Sun, 07-Mar-21 17:52:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1610900126', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"eb-g42jCAr46rCEFHt8pUWS/uASMcA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '9365', 'cf-request-id': '0814ebbd3b0000e76c1e223000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=CQhn9fWSj1h5CsfIJQA6rUcsb1IGqC7HBTZz24KIZjJqqCasTBmLf28B8NjGHiHSQ0LuOPaaZBVnRW%2Fqqejt3eRzuDyh2w0%2Bn27BlU9vGnyPvw1tNmRmaibjnT0U"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bdb9a54e76c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 15,
  "title": "eveniet quod temporibus",
  "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
} 
 </msg>
<msg timestamp="20210205 12:52:11.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.897" endtime="20210205 12:52:11.953"></status>
</kw>
<msg timestamp="20210205 12:52:11.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.895" endtime="20210205 12:52:11.953"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:11.955" endtime="20210205 12:52:11.957"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.954" endtime="20210205 12:52:11.957"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.953" endtime="20210205 12:52:11.957"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:11.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:11.958" endtime="20210205 12:52:11.959"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.957" endtime="20210205 12:52:11.959"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:11.960" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:11.960" endtime="20210205 12:52:11.960"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:12.015" level="INFO">${idvalue} = [15]</msg>
<status status="PASS" starttime="20210205 12:52:11.960" endtime="20210205 12:52:12.015"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:12.016" level="INFO">${responseid} = 15</msg>
<status status="PASS" starttime="20210205 12:52:12.015" endtime="20210205 12:52:12.016"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:12.017" endtime="20210205 12:52:12.017"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:12.018" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:12.018" endtime="20210205 12:52:12.018"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.959" endtime="20210205 12:52:12.019"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:11.894" endtime="20210205 12:52:12.019"></status>
</kw>
<kw name="${postid} = 16" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:12.022" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:12.021" endtime="20210205 12:52:12.022"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:12.146" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/16 
 path_url=/posts/16 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:12.146" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/16 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df4a053cbba178baf799381e20ff8ecee1612547532; expires=Sun, 07-Mar-21 17:52:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612523209', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"139-Ry5LVphQL/+x/ADbFfrczHgqqDs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '24377', 'cf-request-id': '0814ebbe01000015cbb00dc000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=PzEInRPpoKWeK3bbo0YaCikoTWnYOvvi3iLllKlIoFhh1YrHu8r4vHkBaYXbbODHZriPiyfNnI4BwmheWlLBIHkwABUn%2BMNhXoKy8YyBpREdquruXqgSTrmKL6CL"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bdccaf115cb-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 16,
  "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
  "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
} 
 </msg>
<msg timestamp="20210205 12:52:12.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:12.023" endtime="20210205 12:52:12.147"></status>
</kw>
<msg timestamp="20210205 12:52:12.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:12.019" endtime="20210205 12:52:12.147"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:12.150" endtime="20210205 12:52:12.153"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.149" endtime="20210205 12:52:12.153"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.148" endtime="20210205 12:52:12.153"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:12.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:12.154" endtime="20210205 12:52:12.156"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.153" endtime="20210205 12:52:12.156"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:12.157" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:12.157" endtime="20210205 12:52:12.157"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:12.229" level="INFO">${idvalue} = [16]</msg>
<status status="PASS" starttime="20210205 12:52:12.157" endtime="20210205 12:52:12.229"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:12.230" level="INFO">${responseid} = 16</msg>
<status status="PASS" starttime="20210205 12:52:12.229" endtime="20210205 12:52:12.230"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:12.230" endtime="20210205 12:52:12.231"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:12.231" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:12.231" endtime="20210205 12:52:12.231"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.156" endtime="20210205 12:52:12.232"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.019" endtime="20210205 12:52:12.232"></status>
</kw>
<kw name="${postid} = 17" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:12.234" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:12.233" endtime="20210205 12:52:12.235"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:12.392" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/17 
 path_url=/posts/17 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:12.392" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/17 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d27cc86dd8fadc5502f86ac384ddf997d1612547532; expires=Sun, 07-Mar-21 17:52:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '989', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-Y7y9zgdEq0WndoXZmQZBsN4+z14"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '9362', 'cf-request-id': '0814ebbe8c0000155e0e936000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=LdabbG27wEmo%2BoYEH%2FqNSn6kbXmlGmi1qq6UnHeJ0qjjm3WRsIUlJyhQVQ%2FoFWJP3JgS%2FQrUzKeqIOO01W2q%2BYc%2F%2F1YiU5zoYgEAqD14WFBsUrT8Vzch9WI4x21T"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bddad8f155e-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 17,
  "title": "fugit voluptas sed molestias voluptatem provident",
  "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
} 
 </msg>
<msg timestamp="20210205 12:52:12.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:12.235" endtime="20210205 12:52:12.392"></status>
</kw>
<msg timestamp="20210205 12:52:12.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:12.232" endtime="20210205 12:52:12.393"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:12.395" endtime="20210205 12:52:12.398"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.394" endtime="20210205 12:52:12.398"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.393" endtime="20210205 12:52:12.399"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:12.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:12.400" endtime="20210205 12:52:12.401"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.399" endtime="20210205 12:52:12.401"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:12.402" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:12.402" endtime="20210205 12:52:12.402"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:12.467" level="INFO">${idvalue} = [17]</msg>
<status status="PASS" starttime="20210205 12:52:12.403" endtime="20210205 12:52:12.468"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:12.469" level="INFO">${responseid} = 17</msg>
<status status="PASS" starttime="20210205 12:52:12.468" endtime="20210205 12:52:12.469"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:12.469" endtime="20210205 12:52:12.470"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:12.471" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:12.471" endtime="20210205 12:52:12.472"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.401" endtime="20210205 12:52:12.472"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.232" endtime="20210205 12:52:12.472"></status>
</kw>
<kw name="${postid} = 18" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:12.475" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:12.474" endtime="20210205 12:52:12.476"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:12.532" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/18 
 path_url=/posts/18 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:12.532" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/18 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dad69a11382f546581ea0beb9fd5eff5c1612547532; expires=Sun, 07-Mar-21 17:52:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d6-gBDS8x9CZAqgdjWUPWV0jWIQ7ps"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7464', 'cf-request-id': '0814ebbf7d0000ccf2a3896000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=wOwTAc%2BllzTTNglaWO2MOjORnfiRL49oEXdvY4RxkoqGF3WyjOFzuZjOD9RvKZdvCcswcljR2EUScXlJAYadWOPXRv4E8Uk2mdgUxPA%2FYmYePNTaxFXKZCCN1Z%2BD"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bdf2986ccf2-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 18,
  "title": "voluptate et itaque vero tempora molestiae",
  "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
} 
 </msg>
<msg timestamp="20210205 12:52:12.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:12.476" endtime="20210205 12:52:12.532"></status>
</kw>
<msg timestamp="20210205 12:52:12.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:12.473" endtime="20210205 12:52:12.532"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:12.534" endtime="20210205 12:52:12.536"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.533" endtime="20210205 12:52:12.536"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.533" endtime="20210205 12:52:12.536"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:12.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:12.537" endtime="20210205 12:52:12.538"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.537" endtime="20210205 12:52:12.538"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:12.539" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:12.538" endtime="20210205 12:52:12.539"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:12.968" level="INFO">${idvalue} = [18]</msg>
<status status="PASS" starttime="20210205 12:52:12.539" endtime="20210205 12:52:12.968"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:12.969" level="INFO">${responseid} = 18</msg>
<status status="PASS" starttime="20210205 12:52:12.968" endtime="20210205 12:52:12.969"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:12.969" endtime="20210205 12:52:12.969"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:12.970" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:12.969" endtime="20210205 12:52:12.970"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.538" endtime="20210205 12:52:12.970"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.472" endtime="20210205 12:52:12.970"></status>
</kw>
<kw name="${postid} = 19" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:12.971" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:12.971" endtime="20210205 12:52:12.971"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:13.027" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/19 
 path_url=/posts/19 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:13.028" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/19 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da52791b57a823c2144a36f048d9c123d1612547533; expires=Sun, 07-Mar-21 17:52:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '987', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f5-6MONAVAj01S9sHCgIVhhm8kT8bk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7465', 'cf-request-id': '0814ebc16f00000ced2f183000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=cgddi8b4E4Ulj44JDg11LTxcXwPwklr9T8ZIdA%2FsKA59qQCvnu1%2BXFFlfC4oM1cLH5qx64Gs9NSTDY5muSQZh6kGsKXMF4wLWTQEQGSa1ak0JzycIdijCLK3vy3h"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7be24cd00ced-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 19,
  "title": "adipisci placeat illum aut reiciendis qui",
  "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
} 
 </msg>
<msg timestamp="20210205 12:52:13.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:12.972" endtime="20210205 12:52:13.028"></status>
</kw>
<msg timestamp="20210205 12:52:13.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:12.970" endtime="20210205 12:52:13.029"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:13.031" endtime="20210205 12:52:13.034"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.030" endtime="20210205 12:52:13.034"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.029" endtime="20210205 12:52:13.034"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:13.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.036" endtime="20210205 12:52:13.036"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.035" endtime="20210205 12:52:13.037"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.038" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:13.038" endtime="20210205 12:52:13.038"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.104" level="INFO">${idvalue} = [19]</msg>
<status status="PASS" starttime="20210205 12:52:13.038" endtime="20210205 12:52:13.104"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:13.105" level="INFO">${responseid} = 19</msg>
<status status="PASS" starttime="20210205 12:52:13.104" endtime="20210205 12:52:13.105"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:13.105" endtime="20210205 12:52:13.106"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.107" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:13.106" endtime="20210205 12:52:13.107"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.037" endtime="20210205 12:52:13.107"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:12.970" endtime="20210205 12:52:13.107"></status>
</kw>
<kw name="${postid} = 20" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:13.109" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:13.108" endtime="20210205 12:52:13.109"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:13.249" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/20 
 path_url=/posts/20 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:13.249" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/20 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db97317e2e011cf48bd1a664c573fbf481612547533; expires=Sun, 07-Mar-21 17:52:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611843621', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-B2D4HCXMgAW5NzE2tV3HVA4JP6M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7465', 'cf-request-id': '0814ebc2370000e845c4a0b000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Qm9HklO5PhWlW5pNl1imJSBD4fGgo60%2BTRXyjd4nzmX2t4YbL3Q8M8E%2BSzqLobUmwTRJ%2BdEpqKvrfU6omgbLvufWnohIX66fccKpBBZouKiszJQZYNFMM3QK393B"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7be38c11e845-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 20,
  "title": "doloribus ad provident suscipit at",
  "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
} 
 </msg>
<msg timestamp="20210205 12:52:13.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.110" endtime="20210205 12:52:13.250"></status>
</kw>
<msg timestamp="20210205 12:52:13.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.107" endtime="20210205 12:52:13.251"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:13.253" endtime="20210205 12:52:13.256"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.252" endtime="20210205 12:52:13.256"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.251" endtime="20210205 12:52:13.257"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:13.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.258" endtime="20210205 12:52:13.259"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.257" endtime="20210205 12:52:13.259"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.260" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:13.260" endtime="20210205 12:52:13.261"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.326" level="INFO">${idvalue} = [20]</msg>
<status status="PASS" starttime="20210205 12:52:13.261" endtime="20210205 12:52:13.326"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:13.327" level="INFO">${responseid} = 20</msg>
<status status="PASS" starttime="20210205 12:52:13.327" endtime="20210205 12:52:13.327"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:13.328" endtime="20210205 12:52:13.328"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.329" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:13.329" endtime="20210205 12:52:13.329"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.259" endtime="20210205 12:52:13.329"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.107" endtime="20210205 12:52:13.329"></status>
</kw>
<kw name="${postid} = 21" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:13.331" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:13.331" endtime="20210205 12:52:13.332"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:13.492" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/21 
 path_url=/posts/21 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:13.492" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/21 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7ea872e232c01ade4496ecf419fb2c221612547533; expires=Sun, 07-Mar-21 17:52:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612546312', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"117-mvqE9pMkp/BxthnOAO6lQoihz2M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '1260', 'cf-request-id': '0814ebc34100003daf7c0a5000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=UO0TmHMRG%2FTjPPGfGdTNVMH%2BYjfpUwx4LnA8Pq1pfnwqJ0uhBCM77Mpz7JJyVXeKz5SYfKTMxFRBRYLje%2FUC%2BxVLkVbQ4TG%2F7%2Bo8z%2FY1VpyItAd0cIRozZJYVCl%2F"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7be539613daf-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 21,
  "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
  "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
} 
 </msg>
<msg timestamp="20210205 12:52:13.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.332" endtime="20210205 12:52:13.493"></status>
</kw>
<msg timestamp="20210205 12:52:13.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.330" endtime="20210205 12:52:13.493"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:13.495" endtime="20210205 12:52:13.498"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.494" endtime="20210205 12:52:13.498"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.493" endtime="20210205 12:52:13.499"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:13.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.500" endtime="20210205 12:52:13.501"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.499" endtime="20210205 12:52:13.501"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.503" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:13.502" endtime="20210205 12:52:13.503"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.570" level="INFO">${idvalue} = [21]</msg>
<status status="PASS" starttime="20210205 12:52:13.503" endtime="20210205 12:52:13.570"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:13.571" level="INFO">${responseid} = 21</msg>
<status status="PASS" starttime="20210205 12:52:13.570" endtime="20210205 12:52:13.571"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:13.571" endtime="20210205 12:52:13.572"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.572" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:13.572" endtime="20210205 12:52:13.572"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.501" endtime="20210205 12:52:13.573"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.330" endtime="20210205 12:52:13.573"></status>
</kw>
<kw name="${postid} = 22" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:13.574" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:13.574" endtime="20210205 12:52:13.575"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:13.738" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/22 
 path_url=/posts/22 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:13.738" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/22 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5b120d72b4d1d4aae5bcdc15d506184d1612547533; expires=Sun, 07-Mar-21 17:52:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612523209', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e6-PXw6heQCz2Yay/FrkPvuks+op8Y"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '24378', 'cf-request-id': '0814ebc43800003df84c05b000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=9nMINPapz1KFukBOHhHmKLtp4ndMikCsVDsNqmq5Sa3tlUYkFhm26kvdG%2FYJnHLYo0cvYNdkPHj6Bnkhqp9ZabYivkiXhpZD8xLm3E6Q8XhyczMBxVo30jfN2U%2BW"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7be6cd433df8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 22,
  "title": "dolor sint quo a velit explicabo quia nam",
  "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
} 
 </msg>
<msg timestamp="20210205 12:52:13.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.575" endtime="20210205 12:52:13.739"></status>
</kw>
<msg timestamp="20210205 12:52:13.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.573" endtime="20210205 12:52:13.739"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:13.742" endtime="20210205 12:52:13.745"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.741" endtime="20210205 12:52:13.745"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.740" endtime="20210205 12:52:13.745"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:13.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.746" endtime="20210205 12:52:13.747"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.745" endtime="20210205 12:52:13.747"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.749" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:13.748" endtime="20210205 12:52:13.749"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.815" level="INFO">${idvalue} = [22]</msg>
<status status="PASS" starttime="20210205 12:52:13.749" endtime="20210205 12:52:13.815"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:13.817" level="INFO">${responseid} = 22</msg>
<status status="PASS" starttime="20210205 12:52:13.816" endtime="20210205 12:52:13.817"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:13.817" endtime="20210205 12:52:13.817"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.818" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:13.818" endtime="20210205 12:52:13.818"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.747" endtime="20210205 12:52:13.818"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.573" endtime="20210205 12:52:13.818"></status>
</kw>
<kw name="${postid} = 23" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:13.820" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:13.820" endtime="20210205 12:52:13.821"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:13.984" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/23 
 path_url=/posts/23 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:13.984" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/23 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d49caa7672d0ad5da9bcdd1c98d1a61281612547534; expires=Sun, 07-Mar-21 17:52:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-2cknVyBv5gWr1s/pxvkFBL7N/38"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7466', 'cf-request-id': '0814ebc4c100000ced2dad6000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=2hN6WlOz%2BNqX502VY6UmblQ%2FcnwUeTPzKp0BpPBO%2BiTlg25S4JT41dGKpdXOu6bLRe6Pai%2BhcNbNTeMv0c6lyMIEdk9A3cpcV7uKEaupWCKKgjd%2Be3w%2BTNxRTR9V"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7be799000ced-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 23,
  "title": "maxime id vitae nihil numquam",
  "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
} 
 </msg>
<msg timestamp="20210205 12:52:13.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.821" endtime="20210205 12:52:13.985"></status>
</kw>
<msg timestamp="20210205 12:52:13.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.819" endtime="20210205 12:52:13.985"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:13.988" endtime="20210205 12:52:13.991"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.987" endtime="20210205 12:52:13.991"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.986" endtime="20210205 12:52:13.991"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:13.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:13.993" endtime="20210205 12:52:13.993"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.991" endtime="20210205 12:52:13.994"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:13.995" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:13.995" endtime="20210205 12:52:13.995"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.063" level="INFO">${idvalue} = [23]</msg>
<status status="PASS" starttime="20210205 12:52:13.995" endtime="20210205 12:52:14.063"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:14.064" level="INFO">${responseid} = 23</msg>
<status status="PASS" starttime="20210205 12:52:14.064" endtime="20210205 12:52:14.064"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:14.064" endtime="20210205 12:52:14.065"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.066" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:14.065" endtime="20210205 12:52:14.066"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.994" endtime="20210205 12:52:14.066"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:13.819" endtime="20210205 12:52:14.066"></status>
</kw>
<kw name="${postid} = 24" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:14.068" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:14.068" endtime="20210205 12:52:14.069"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:14.122" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/24 
 path_url=/posts/24 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:14.122" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/24 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d38a1fa5ea8bc5ffc51e278793b8e64a71612547534; expires=Sun, 07-Mar-21 17:52:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f3-ifVym0pMyH3QE/zD+bJosWWZ/xY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7466', 'cf-request-id': '0814ebc5b60000e8459ba9f000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=NWvmC4Yf0JMHzUP%2BfNBWFTuvBOB19DO3TqdYHSw51HQuGOglJwvySXyrOVWrygnBdcC35YDOlXn3zbxIrrEayjDplLM67xT9LCEtKRgrZ6rxWplVVJAmbX8N5SIh"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7be92e4ae845-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 24,
  "title": "autem hic labore sunt dolores incidunt",
  "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
} 
 </msg>
<msg timestamp="20210205 12:52:14.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.069" endtime="20210205 12:52:14.123"></status>
</kw>
<msg timestamp="20210205 12:52:14.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.067" endtime="20210205 12:52:14.123"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:14.126" endtime="20210205 12:52:14.129"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.124" endtime="20210205 12:52:14.129"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.123" endtime="20210205 12:52:14.129"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:14.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.130" endtime="20210205 12:52:14.131"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.129" endtime="20210205 12:52:14.131"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.133" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:14.133" endtime="20210205 12:52:14.133"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.206" level="INFO">${idvalue} = [24]</msg>
<status status="PASS" starttime="20210205 12:52:14.133" endtime="20210205 12:52:14.206"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:14.207" level="INFO">${responseid} = 24</msg>
<status status="PASS" starttime="20210205 12:52:14.206" endtime="20210205 12:52:14.207"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:14.207" endtime="20210205 12:52:14.208"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.208" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:14.208" endtime="20210205 12:52:14.208"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.132" endtime="20210205 12:52:14.209"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.066" endtime="20210205 12:52:14.209"></status>
</kw>
<kw name="${postid} = 25" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:14.211" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:14.210" endtime="20210205 12:52:14.212"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:14.290" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/25 
 path_url=/posts/25 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:14.290" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/25 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d939c3bb3c0da1e29b4502ad6f1b2dc571612547534; expires=Sun, 07-Mar-21 17:52:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '982', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ed-5nZjsj4lJ1lY/Chj2v9voa/MRVw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7466', 'cf-request-id': '0814ebc65e00003e22cf8c0000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=OJNYYImpKtUEACDXRwrgeFDeBYe8iephd6SJHrGpt8KOh6NHsfa3cpXqk7yNwZfmL4T7nQseU8KEPAzwu079eHS6g5tL5X0MTc1j65gF02R1vidb15j%2BtPOAuv5p"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bea3ddb3e22-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 25,
  "title": "rem alias distinctio quo quis",
  "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
} 
 </msg>
<msg timestamp="20210205 12:52:14.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.212" endtime="20210205 12:52:14.291"></status>
</kw>
<msg timestamp="20210205 12:52:14.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.209" endtime="20210205 12:52:14.291"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:14.294" endtime="20210205 12:52:14.296"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.292" endtime="20210205 12:52:14.296"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.291" endtime="20210205 12:52:14.297"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:14.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.298" endtime="20210205 12:52:14.299"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.297" endtime="20210205 12:52:14.299"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.301" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:14.300" endtime="20210205 12:52:14.301"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.368" level="INFO">${idvalue} = [25]</msg>
<status status="PASS" starttime="20210205 12:52:14.301" endtime="20210205 12:52:14.368"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:14.369" level="INFO">${responseid} = 25</msg>
<status status="PASS" starttime="20210205 12:52:14.368" endtime="20210205 12:52:14.369"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:14.369" endtime="20210205 12:52:14.370"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.370" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:14.370" endtime="20210205 12:52:14.370"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.299" endtime="20210205 12:52:14.371"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.209" endtime="20210205 12:52:14.371"></status>
</kw>
<kw name="${postid} = 26" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:14.373" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:14.372" endtime="20210205 12:52:14.373"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:14.542" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/26 
 path_url=/posts/26 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:14.542" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/26 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=daff74f33809c31bfe5f34a226868f0811612547534; expires=Sun, 07-Mar-21 17:52:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"103-nvdlqF1XCHpBd3+QuyEzLJ0DKRU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7466', 'cf-request-id': '0814ebc75c000015d345353000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=imIQDeQ7W6g1TACpP73Q3%2FTL%2Fyewy75cg7vfiNQWMi%2Bue2O0ukxyf9zEM4lBXV7DE1c2OcrGxwkykfPYbBlxHfHHGJxD6vYZxfdaskM6XI%2B3AZFXaScnq86K%2BYST"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bebc86215d3-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 26,
  "title": "est et quae odit qui non",
  "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
} 
 </msg>
<msg timestamp="20210205 12:52:14.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.373" endtime="20210205 12:52:14.543"></status>
</kw>
<msg timestamp="20210205 12:52:14.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.371" endtime="20210205 12:52:14.543"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:14.546" endtime="20210205 12:52:14.549"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.544" endtime="20210205 12:52:14.549"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.543" endtime="20210205 12:52:14.549"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:14.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.550" endtime="20210205 12:52:14.551"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.549" endtime="20210205 12:52:14.551"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.553" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:14.552" endtime="20210205 12:52:14.553"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.668" level="INFO">${idvalue} = [26]</msg>
<status status="PASS" starttime="20210205 12:52:14.553" endtime="20210205 12:52:14.668"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:14.669" level="INFO">${responseid} = 26</msg>
<status status="PASS" starttime="20210205 12:52:14.668" endtime="20210205 12:52:14.669"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:14.669" endtime="20210205 12:52:14.670"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.670" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:14.670" endtime="20210205 12:52:14.670"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.551" endtime="20210205 12:52:14.671"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.371" endtime="20210205 12:52:14.671"></status>
</kw>
<kw name="${postid} = 27" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:14.673" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:14.672" endtime="20210205 12:52:14.673"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:14.818" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/27 
 path_url=/posts/27 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:14.818" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/27 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1ce3b7f81ce1fe3c4f1c7511c664379e1612547534; expires=Sun, 07-Mar-21 17:52:14 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-qKM2azhXtnWXfnWclKp4KhCN+BA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7466', 'cf-request-id': '0814ebc8700000e6e0af3e1000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=LHsBhEP1wf3fOTI61zs49j3M0A1hZDcOjJNex17yfaE5XQCU%2F9QG4MrdK7hwMdEn4G8eAaaGJSEisiTdeuClMa9vYXTAIchozaaBGAhpwaaKl8aJflMQ%2BPMHs1p9"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bed7916e6e0-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 27,
  "title": "quasi id et eos tenetur aut quo autem",
  "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
} 
 </msg>
<msg timestamp="20210205 12:52:14.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.673" endtime="20210205 12:52:14.819"></status>
</kw>
<msg timestamp="20210205 12:52:14.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.671" endtime="20210205 12:52:14.819"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:14.822" endtime="20210205 12:52:14.825"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.821" endtime="20210205 12:52:14.825"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.820" endtime="20210205 12:52:14.825"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:14.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.826" endtime="20210205 12:52:14.827"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.825" endtime="20210205 12:52:14.827"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.829" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:14.828" endtime="20210205 12:52:14.829"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.891" level="INFO">${idvalue} = [27]</msg>
<status status="PASS" starttime="20210205 12:52:14.829" endtime="20210205 12:52:14.891"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:14.892" level="INFO">${responseid} = 27</msg>
<status status="PASS" starttime="20210205 12:52:14.891" endtime="20210205 12:52:14.892"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:14.892" endtime="20210205 12:52:14.892"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:14.893" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:14.892" endtime="20210205 12:52:14.893"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.827" endtime="20210205 12:52:14.893"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.671" endtime="20210205 12:52:14.893"></status>
</kw>
<kw name="${postid} = 28" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:14.894" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:14.894" endtime="20210205 12:52:14.894"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:15.105" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/28 
 path_url=/posts/28 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:15.105" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/28 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dad90bebf3662705db0a2bcecf63a6fea1612547535; expires=Sun, 07-Mar-21 17:52:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f9-AEZ+sXaihdyQslUCCBcxh7QHSIc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7467', 'cf-request-id': '0814ebc97e0000923abaa85000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=kpi%2Bqm3nBXCY2R%2BOWlq%2BtuQGCPziab9WJHGaDxD%2BVzTw5mUw0Ryx7tsD4xixoPWmcthJnTOeV2e4mdoaS0WEMLKrN3xGbriBQ8gbq3wIK%2BDYnHmfAKSodAutA9Hp"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bef3f09923a-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 28,
  "title": "delectus ullam et corporis nulla voluptas sequi",
  "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
} 
 </msg>
<msg timestamp="20210205 12:52:15.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.894" endtime="20210205 12:52:15.106"></status>
</kw>
<msg timestamp="20210205 12:52:15.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:14.893" endtime="20210205 12:52:15.106"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:15.109" endtime="20210205 12:52:15.112"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.108" endtime="20210205 12:52:15.112"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.107" endtime="20210205 12:52:15.112"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:15.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.113" endtime="20210205 12:52:15.114"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.112" endtime="20210205 12:52:15.114"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.116" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:15.116" endtime="20210205 12:52:15.116"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.186" level="INFO">${idvalue} = [28]</msg>
<status status="PASS" starttime="20210205 12:52:15.116" endtime="20210205 12:52:15.186"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:15.187" level="INFO">${responseid} = 28</msg>
<status status="PASS" starttime="20210205 12:52:15.186" endtime="20210205 12:52:15.187"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:15.187" endtime="20210205 12:52:15.187"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.188" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:15.187" endtime="20210205 12:52:15.188"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.115" endtime="20210205 12:52:15.188"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:14.893" endtime="20210205 12:52:15.188"></status>
</kw>
<kw name="${postid} = 29" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:15.189" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:15.189" endtime="20210205 12:52:15.189"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:15.349" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/29 
 path_url=/posts/29 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:15.349" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/29 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0099428e93a026734b6c23005f41085a1612547535; expires=Sun, 07-Mar-21 17:52:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '978', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-s0ld/Dvp7Q01gQ2gs/shmGjHA3Q"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7467', 'cf-request-id': '0814ebca8400003df24e94b000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=iPxNCIxX7QntuM%2BMkOUeyufnp%2BOKgX8V5nEtObNBWTWuiQCftFSQO%2FfxKp0qjSbfRLw%2BCV%2B0D9SzaGLf%2BtjmsPfqKQPtcnai5sfv0iRQjCEF%2BiRkyiNgknIo32FR"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bf0daa33df2-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 29,
  "title": "iusto eius quod necessitatibus culpa ea",
  "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
} 
 </msg>
<msg timestamp="20210205 12:52:15.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.189" endtime="20210205 12:52:15.350"></status>
</kw>
<msg timestamp="20210205 12:52:15.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.188" endtime="20210205 12:52:15.350"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:15.353" endtime="20210205 12:52:15.356"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.352" endtime="20210205 12:52:15.356"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.351" endtime="20210205 12:52:15.356"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:15.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.358" endtime="20210205 12:52:15.358"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.357" endtime="20210205 12:52:15.359"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.360" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:15.360" endtime="20210205 12:52:15.360"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.428" level="INFO">${idvalue} = [29]</msg>
<status status="PASS" starttime="20210205 12:52:15.360" endtime="20210205 12:52:15.428"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:15.429" level="INFO">${responseid} = 29</msg>
<status status="PASS" starttime="20210205 12:52:15.428" endtime="20210205 12:52:15.429"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:15.429" endtime="20210205 12:52:15.430"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.430" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:15.430" endtime="20210205 12:52:15.430"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.359" endtime="20210205 12:52:15.431"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.188" endtime="20210205 12:52:15.431"></status>
</kw>
<kw name="${postid} = 30" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:15.433" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:15.432" endtime="20210205 12:52:15.433"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:15.592" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/30 
 path_url=/posts/30 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:15.592" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/30 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd22f068327b642c879d5c22df4a3f7e31612547535; expires=Sun, 07-Mar-21 17:52:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '991', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-p/fED6+/tICtAVNeMV6EIhtgIes"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7467', 'cf-request-id': '0814ebcb78000015cb901c8000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=vnroTnKT7mBnw0dJM3DfgS4FVL8K46RHymNcF088GoVX86x4vEHVe%2FmRG9ZvIsVeJhYVOM%2BuSZy3s5FbF9eLoctq2%2Fn5Sh01AJWNYFESP4pAvxLWcIUYqszMPbN%2B"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bf25c8215cb-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 30,
  "title": "a quo magni similique perferendis",
  "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
} 
 </msg>
<msg timestamp="20210205 12:52:15.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.434" endtime="20210205 12:52:15.593"></status>
</kw>
<msg timestamp="20210205 12:52:15.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.431" endtime="20210205 12:52:15.593"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:15.595" endtime="20210205 12:52:15.599"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.594" endtime="20210205 12:52:15.599"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.593" endtime="20210205 12:52:15.599"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:15.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.600" endtime="20210205 12:52:15.601"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.599" endtime="20210205 12:52:15.601"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.603" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:15.603" endtime="20210205 12:52:15.603"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.674" level="INFO">${idvalue} = [30]</msg>
<status status="PASS" starttime="20210205 12:52:15.603" endtime="20210205 12:52:15.674"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:15.675" level="INFO">${responseid} = 30</msg>
<status status="PASS" starttime="20210205 12:52:15.674" endtime="20210205 12:52:15.675"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:15.675" endtime="20210205 12:52:15.676"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.676" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:15.676" endtime="20210205 12:52:15.676"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.602" endtime="20210205 12:52:15.677"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.431" endtime="20210205 12:52:15.677"></status>
</kw>
<kw name="${postid} = 31" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:15.679" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:15.678" endtime="20210205 12:52:15.679"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:15.835" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/31 
 path_url=/posts/31 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:15.836" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/31 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:15 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db67430b0627dd741aa9a49eaeb8cbe7b1612547535; expires=Sun, 07-Mar-21 17:52:15 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '992', 'X-Ratelimit-Reset': '1610900126', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"114-fvaKvcE5R6RW/jKcF4ij0mXJXnI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7467', 'cf-request-id': '0814ebcc000000154afe8de000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=jig382NCbYXumhPSnv0V9LVLp8pQjMmrHZlRykgO1W1%2BWoUzb5QuuQGNn2JMNmhWFFsNGRdTAMoLD3JJU%2FJbYh9Al7Yno9FKlktpzcAyfIOhfagVwacCjsUtjhRU"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bf338a1154a-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 31,
  "title": "ullam ut quidem id aut vel consequuntur",
  "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
} 
 </msg>
<msg timestamp="20210205 12:52:15.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.679" endtime="20210205 12:52:15.837"></status>
</kw>
<msg timestamp="20210205 12:52:15.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.677" endtime="20210205 12:52:15.837"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:15.839" endtime="20210205 12:52:15.842"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.838" endtime="20210205 12:52:15.842"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.837" endtime="20210205 12:52:15.843"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:15.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.844" endtime="20210205 12:52:15.845"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.843" endtime="20210205 12:52:15.845"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.846" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:15.846" endtime="20210205 12:52:15.846"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.912" level="INFO">${idvalue} = [31]</msg>
<status status="PASS" starttime="20210205 12:52:15.847" endtime="20210205 12:52:15.913"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:15.914" level="INFO">${responseid} = 31</msg>
<status status="PASS" starttime="20210205 12:52:15.913" endtime="20210205 12:52:15.914"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:15.914" endtime="20210205 12:52:15.915"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.915" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:15.915" endtime="20210205 12:52:15.915"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.845" endtime="20210205 12:52:15.916"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.677" endtime="20210205 12:52:15.916"></status>
</kw>
<kw name="${postid} = 32" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:15.918" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:15.917" endtime="20210205 12:52:15.918"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:15.978" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/32 
 path_url=/posts/32 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:15.978" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/32 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3d1e75829b12a5b445ec3679cd2b87941612547536; expires=Sun, 07-Mar-21 17:52:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '975', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"118-gU6x6yKuGnLxOVfx4b/csDm80xc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7468', 'cf-request-id': '0814ebccef0000f059842ec000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Ni8SnWR9byKWnK3Tyf2ppYBcWh0d65mAT%2BJf%2FfC3kB7dciuifNCt%2F9zuaDFKD%2FlPYTlZgNcksDUx4ymgjQ4In%2BV1DKR8%2F4blJe9ngu4liartUJHGZ9340FyHx567"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bf4be20f059-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 32,
  "title": "doloremque illum aliquid sunt",
  "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
} 
 </msg>
<msg timestamp="20210205 12:52:15.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.918" endtime="20210205 12:52:15.979"></status>
</kw>
<msg timestamp="20210205 12:52:15.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.916" endtime="20210205 12:52:15.979"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:15.982" endtime="20210205 12:52:15.985"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.981" endtime="20210205 12:52:15.985"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.980" endtime="20210205 12:52:15.985"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:15.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:15.986" endtime="20210205 12:52:15.987"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.985" endtime="20210205 12:52:15.987"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:15.989" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:15.988" endtime="20210205 12:52:15.989"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.057" level="INFO">${idvalue} = [32]</msg>
<status status="PASS" starttime="20210205 12:52:15.989" endtime="20210205 12:52:16.057"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:16.059" level="INFO">${responseid} = 32</msg>
<status status="PASS" starttime="20210205 12:52:16.058" endtime="20210205 12:52:16.059"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.059" endtime="20210205 12:52:16.060"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.061" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.060" endtime="20210205 12:52:16.061"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.987" endtime="20210205 12:52:16.061"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:15.916" endtime="20210205 12:52:16.061"></status>
</kw>
<kw name="${postid} = 33" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.063" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:16.063" endtime="20210205 12:52:16.064"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:16.143" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/33 
 path_url=/posts/33 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:16.143" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/33 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5a6c11663349cce517cd58e0e61e2ceb1612547536; expires=Sun, 07-Mar-21 17:52:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '988', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e4-eJS5AAgYswVFXcpPGUc/6yS0JGs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7468', 'cf-request-id': '0814ebcd9c000091a45d202000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=oY1Be9OIXMg6%2Bpd4iQU1zkx3uY8x%2FJdPj3t%2B5WcWHbgleB1LEysBfWfTXND%2BeFsp78lHw2ZuEfwQtXM0P3L3bJFEW7ZFO%2BZ856Z8U0wnVq6I6id7r57FyGjKdM9b"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bf5cfa491a4-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 33,
  "title": "qui explicabo molestiae dolorem",
  "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
} 
 </msg>
<msg timestamp="20210205 12:52:16.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.064" endtime="20210205 12:52:16.144"></status>
</kw>
<msg timestamp="20210205 12:52:16.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.062" endtime="20210205 12:52:16.144"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.147" endtime="20210205 12:52:16.150"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.146" endtime="20210205 12:52:16.150"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.145" endtime="20210205 12:52:16.150"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.151" endtime="20210205 12:52:16.152"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.150" endtime="20210205 12:52:16.152"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.154" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.153" endtime="20210205 12:52:16.154"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.225" level="INFO">${idvalue} = [33]</msg>
<status status="PASS" starttime="20210205 12:52:16.154" endtime="20210205 12:52:16.225"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:16.226" level="INFO">${responseid} = 33</msg>
<status status="PASS" starttime="20210205 12:52:16.225" endtime="20210205 12:52:16.226"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.226" endtime="20210205 12:52:16.227"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.227" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.227" endtime="20210205 12:52:16.227"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.153" endtime="20210205 12:52:16.228"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.061" endtime="20210205 12:52:16.228"></status>
</kw>
<kw name="${postid} = 34" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.230" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:16.229" endtime="20210205 12:52:16.230"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:16.292" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/34 
 path_url=/posts/34 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:16.292" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/34 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d38b4c53e104fdf3c4c82e011ef7339ae1612547536; expires=Sun, 07-Mar-21 17:52:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '973', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"125-Vy2bCExpJwbgL2QLF7SvYE5QZaQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7468', 'cf-request-id': '0814ebce2a00003e511511a000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BaDBf83v8mg%2BUwyrqxnmumYmCgmmL7XZ%2FW6kHtz8ro67YIQsgmJZBdJtpeXe22PydGhIypRyy6uD2qdqa0FZiPXJsQXNAVsE4gG3XhCbcC%2Fv23c8tTr9e9N%2FrRf7"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bf6a8443e51-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 34,
  "title": "magnam ut rerum iure",
  "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
} 
 </msg>
<msg timestamp="20210205 12:52:16.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.231" endtime="20210205 12:52:16.293"></status>
</kw>
<msg timestamp="20210205 12:52:16.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.228" endtime="20210205 12:52:16.293"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.296" endtime="20210205 12:52:16.300"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.295" endtime="20210205 12:52:16.300"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.293" endtime="20210205 12:52:16.300"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.303" endtime="20210205 12:52:16.304"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.301" endtime="20210205 12:52:16.304"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.307" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.306" endtime="20210205 12:52:16.307"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.372" level="INFO">${idvalue} = [34]</msg>
<status status="PASS" starttime="20210205 12:52:16.307" endtime="20210205 12:52:16.372"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:16.373" level="INFO">${responseid} = 34</msg>
<status status="PASS" starttime="20210205 12:52:16.373" endtime="20210205 12:52:16.373"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.374" endtime="20210205 12:52:16.374"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.375" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.375" endtime="20210205 12:52:16.375"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.304" endtime="20210205 12:52:16.375"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.228" endtime="20210205 12:52:16.375"></status>
</kw>
<kw name="${postid} = 35" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.377" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:16.377" endtime="20210205 12:52:16.378"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:16.432" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/35 
 path_url=/posts/35 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:16.433" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/35 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df0a9481e8844f458b168c5d0443032481612547536; expires=Sun, 07-Mar-21 17:52:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611536052', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11b-iEiJpVAW3iKhqKkCM+WpQc2jSXM"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7468', 'cf-request-id': '0814ebceba0000156baa945000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=y5W5%2FllylQDGtayKSBcFj40zeRpwzyZbZ3Zx1GAvptqrA2GGVsl%2F521r3y%2FMzyngqItIzR4XNTqbTpTBQB86xrKORMjRWxCMlV3nGTqQkHHRNv8fjwuzsSGiU6ro"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bf78a54156b-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 35,
  "title": "id nihil consequatur molestias animi provident",
  "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
} 
 </msg>
<msg timestamp="20210205 12:52:16.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.378" endtime="20210205 12:52:16.433"></status>
</kw>
<msg timestamp="20210205 12:52:16.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.376" endtime="20210205 12:52:16.434"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.436" endtime="20210205 12:52:16.439"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.435" endtime="20210205 12:52:16.439"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.434" endtime="20210205 12:52:16.439"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.440" endtime="20210205 12:52:16.441"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.439" endtime="20210205 12:52:16.441"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.443" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.442" endtime="20210205 12:52:16.443"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.510" level="INFO">${idvalue} = [35]</msg>
<status status="PASS" starttime="20210205 12:52:16.443" endtime="20210205 12:52:16.510"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:16.511" level="INFO">${responseid} = 35</msg>
<status status="PASS" starttime="20210205 12:52:16.511" endtime="20210205 12:52:16.511"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.511" endtime="20210205 12:52:16.512"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.512" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.512" endtime="20210205 12:52:16.512"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.441" endtime="20210205 12:52:16.512"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.375" endtime="20210205 12:52:16.512"></status>
</kw>
<kw name="${postid} = 36" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.513" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:16.513" endtime="20210205 12:52:16.514"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:16.564" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/36 
 path_url=/posts/36 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:16.565" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/36 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dffb07947817d9797c597efae90fd4b3f1612547536; expires=Sun, 07-Mar-21 17:52:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '971', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"137-0d4vuWkf3JGVhfhGGDlsOUqEBTg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7468', 'cf-request-id': '0814ebcf4200003dcdcc932000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=YA9zKY3hHv6lTxsDwkj5EGGMDucJW0YUuH9HXkRFE2%2BmcUD7SxdguDJUT9zuPnY%2FTqR05yYeBjafURfAlHTSiLumzseTTnAhVzidY4gq3EJ6vVqSW%2FHtY7z3Quvk"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bf869e13dcd-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 36,
  "title": "fuga nam accusamus voluptas reiciendis itaque",
  "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
} 
 </msg>
<msg timestamp="20210205 12:52:16.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.514" endtime="20210205 12:52:16.565"></status>
</kw>
<msg timestamp="20210205 12:52:16.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.512" endtime="20210205 12:52:16.566"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.568" endtime="20210205 12:52:16.571"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.567" endtime="20210205 12:52:16.571"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.566" endtime="20210205 12:52:16.572"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.573" endtime="20210205 12:52:16.574"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.572" endtime="20210205 12:52:16.574"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.575" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.575" endtime="20210205 12:52:16.576"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.655" level="INFO">${idvalue} = [36]</msg>
<status status="PASS" starttime="20210205 12:52:16.576" endtime="20210205 12:52:16.655"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:16.656" level="INFO">${responseid} = 36</msg>
<status status="PASS" starttime="20210205 12:52:16.655" endtime="20210205 12:52:16.656"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.657" endtime="20210205 12:52:16.657"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.658" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.657" endtime="20210205 12:52:16.658"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.574" endtime="20210205 12:52:16.658"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.512" endtime="20210205 12:52:16.658"></status>
</kw>
<kw name="${postid} = 37" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.660" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:16.660" endtime="20210205 12:52:16.661"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:16.713" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/37 
 path_url=/posts/37 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:16.713" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/37 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d643d78e46590babd847e22e01b31d0a71612547536; expires=Sun, 07-Mar-21 17:52:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '969', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10d-xivyKLJTyyTwJlVChjsxbkyN93k"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7468', 'cf-request-id': '0814ebcfd600000cc19333d000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Ht2zw2jUaZKd1ERb2JGHyFTrT1suwWHk9j232O%2B1h1XD5WfPBMyEyNLCosaHrfgeGJ6VQBzlNawoIdxK%2F7XeW7bnRW%2BwozgERe%2FBS1r0c2kc5a6YTtPMs%2FAyYVNR"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bf95ddd0cc1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 37,
  "title": "provident vel ut sit ratione est",
  "body": "debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nvoluptates omnis consequatur aut enim officiis in quam qui"
} 
 </msg>
<msg timestamp="20210205 12:52:16.713" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.661" endtime="20210205 12:52:16.713"></status>
</kw>
<msg timestamp="20210205 12:52:16.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.659" endtime="20210205 12:52:16.714"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.717" endtime="20210205 12:52:16.720"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.716" endtime="20210205 12:52:16.720"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.715" endtime="20210205 12:52:16.720"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.721" endtime="20210205 12:52:16.722"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.720" endtime="20210205 12:52:16.722"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.724" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.723" endtime="20210205 12:52:16.724"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.792" level="INFO">${idvalue} = [37]</msg>
<status status="PASS" starttime="20210205 12:52:16.724" endtime="20210205 12:52:16.792"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:16.793" level="INFO">${responseid} = 37</msg>
<status status="PASS" starttime="20210205 12:52:16.792" endtime="20210205 12:52:16.793"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.793" endtime="20210205 12:52:16.794"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.795" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.794" endtime="20210205 12:52:16.795"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.722" endtime="20210205 12:52:16.795"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.658" endtime="20210205 12:52:16.795"></status>
</kw>
<kw name="${postid} = 38" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.797" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:16.796" endtime="20210205 12:52:16.798"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:16.855" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/38 
 path_url=/posts/38 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:16.856" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/38 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da63533b56307e90e3e794f0ec203a8801612547536; expires=Sun, 07-Mar-21 17:52:16 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '970', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"13a-HzjuaEKBfsU2W89T3U0Yxx0R1zE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7469', 'cf-request-id': '0814ebd05e00000cd15610c000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=rCWFcKgmp%2BFRpY8scq%2BWvde9yRWe44Akr3DKNXLgjRZLOz7m3sK2KnWWQeAZ3ZUdwCgWwHQp%2BdcVg%2F6Ec0Rsj9gHbhfAEk7YvptDga9tPnfe8oHjaHXiuVR0a7YI"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bfa3cc30cd1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 38,
  "title": "explicabo et eos deleniti nostrum ab id repellendus",
  "body": "animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus ea\nrerum repudiandae quia voluptatem delectus fugit aut id quia\nratione optio eos iusto veniam iure"
} 
 </msg>
<msg timestamp="20210205 12:52:16.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.798" endtime="20210205 12:52:16.856"></status>
</kw>
<msg timestamp="20210205 12:52:16.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.795" endtime="20210205 12:52:16.857"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.859" endtime="20210205 12:52:16.862"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.858" endtime="20210205 12:52:16.862"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.857" endtime="20210205 12:52:16.863"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.864" endtime="20210205 12:52:16.865"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.863" endtime="20210205 12:52:16.865"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.866" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.866" endtime="20210205 12:52:16.866"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.938" level="INFO">${idvalue} = [38]</msg>
<status status="PASS" starttime="20210205 12:52:16.867" endtime="20210205 12:52:16.938"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:16.939" level="INFO">${responseid} = 38</msg>
<status status="PASS" starttime="20210205 12:52:16.938" endtime="20210205 12:52:16.939"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:16.939" endtime="20210205 12:52:16.940"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:16.940" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:16.940" endtime="20210205 12:52:16.940"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.865" endtime="20210205 12:52:16.941"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.795" endtime="20210205 12:52:16.941"></status>
</kw>
<kw name="${postid} = 39" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:16.942" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:16.942" endtime="20210205 12:52:16.943"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:17.024" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/39 
 path_url=/posts/39 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:17.024" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/39 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0b8fb71c43ec18f72a0e02f90ca464ed1612547537; expires=Sun, 07-Mar-21 17:52:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '993', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11e-UefH5pVf0iJOGuchVJ4dBA7q9aw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7469', 'cf-request-id': '0814ebd10800003e044e9b6000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=sslEQPImnU6ykrNsLc%2F%2FC6nK5Sk%2FOzS0v%2BqcMrXfIDtxcPRWrkALvIjV9HAJwqF3up3M6UvXJZJUic39rny%2FWaFvPpMZns51P6IZE8StxRwwoa3%2B%2BdXrkeVEXPnr"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bfb3d933e04-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 39,
  "title": "eos dolorem iste accusantium est eaque quam",
  "body": "corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti asperiores fuga aut\nvoluptas sapiente vel dolore minus voluptatem incidunt ex"
} 
 </msg>
<msg timestamp="20210205 12:52:17.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.943" endtime="20210205 12:52:17.025"></status>
</kw>
<msg timestamp="20210205 12:52:17.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:16.941" endtime="20210205 12:52:17.025"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.028" endtime="20210205 12:52:17.031"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.027" endtime="20210205 12:52:17.031"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.026" endtime="20210205 12:52:17.031"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.033" endtime="20210205 12:52:17.033"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.032" endtime="20210205 12:52:17.034"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.035" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.035" endtime="20210205 12:52:17.035"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.103" level="INFO">${idvalue} = [39]</msg>
<status status="PASS" starttime="20210205 12:52:17.036" endtime="20210205 12:52:17.103"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:17.104" level="INFO">${responseid} = 39</msg>
<status status="PASS" starttime="20210205 12:52:17.103" endtime="20210205 12:52:17.104"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.104" endtime="20210205 12:52:17.105"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.106" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.105" endtime="20210205 12:52:17.106"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.034" endtime="20210205 12:52:17.106"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:16.941" endtime="20210205 12:52:17.106"></status>
</kw>
<kw name="${postid} = 40" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.109" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:17.109" endtime="20210205 12:52:17.110"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:17.165" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/40 
 path_url=/posts/40 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:17.166" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/40 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dfb62ea63d0f233ae85d69b2970fa882c1612547537; expires=Sun, 07-Mar-21 17:52:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '997', 'x-ratelimit-reset': '1611642816', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"f4-I7RG0h0Rd47Iq9Rj+KpOcUnz3RA"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7469', 'cf-request-id': '0814ebd19c0000e74c632e6000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=9N4o9cQ80FBra%2BBbul2%2BxTCypXhO32d99aBR%2FoObQupZjfrUuOTnFdgCr15eL3W6emKXbB%2FnZ%2BYBkN8SXhkPh7l%2BPXhZ7hfUa7eOItNi7Xh4UgOnjFEIg1cVORJg"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bfc2da9e74c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 40,
  "title": "enim quo cumque",
  "body": "ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptatem iure quasi maxime voluptas nam"
} 
 </msg>
<msg timestamp="20210205 12:52:17.166" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.111" endtime="20210205 12:52:17.166"></status>
</kw>
<msg timestamp="20210205 12:52:17.167" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.107" endtime="20210205 12:52:17.167"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.169" endtime="20210205 12:52:17.172"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.168" endtime="20210205 12:52:17.173"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.167" endtime="20210205 12:52:17.173"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.174" endtime="20210205 12:52:17.175"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.173" endtime="20210205 12:52:17.175"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.176" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.176" endtime="20210205 12:52:17.177"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.245" level="INFO">${idvalue} = [40]</msg>
<status status="PASS" starttime="20210205 12:52:17.177" endtime="20210205 12:52:17.245"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:17.246" level="INFO">${responseid} = 40</msg>
<status status="PASS" starttime="20210205 12:52:17.245" endtime="20210205 12:52:17.246"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.246" endtime="20210205 12:52:17.247"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.247" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.247" endtime="20210205 12:52:17.248"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.175" endtime="20210205 12:52:17.248"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.107" endtime="20210205 12:52:17.248"></status>
</kw>
<kw name="${postid} = 41" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.250" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:17.249" endtime="20210205 12:52:17.250"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:17.308" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/41 
 path_url=/posts/41 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:17.308" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/41 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4b5020ffd31d5c558011b3eeffb1b7991612547537; expires=Sun, 07-Mar-21 17:52:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '966', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"100-Q8c9gEwMpBLWIJsW0KobJ16pdlE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7469', 'cf-request-id': '0814ebd22600003e4cb114f000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=CVLr0n3YqpLhF5YYHIADWXckNq39PHsolC1DtT3XKTg%2B5K%2Bn6ZrSW3Pb3OyKN2YR63S71twGWQZMLp0LH4MyR052LeJcL6mW9pUCNpnVSQBuKgovz8COByX6V76m"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bfd0e133e4c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 41,
  "title": "non est facere",
  "body": "molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\nnam quidem est ducimus sunt debitis saepe"
} 
 </msg>
<msg timestamp="20210205 12:52:17.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.251" endtime="20210205 12:52:17.309"></status>
</kw>
<msg timestamp="20210205 12:52:17.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.248" endtime="20210205 12:52:17.309"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.312" endtime="20210205 12:52:17.315"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.311" endtime="20210205 12:52:17.315"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.310" endtime="20210205 12:52:17.315"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.316" endtime="20210205 12:52:17.317"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.315" endtime="20210205 12:52:17.317"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.319" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.318" endtime="20210205 12:52:17.319"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.386" level="INFO">${idvalue} = [41]</msg>
<status status="PASS" starttime="20210205 12:52:17.319" endtime="20210205 12:52:17.386"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:17.387" level="INFO">${responseid} = 41</msg>
<status status="PASS" starttime="20210205 12:52:17.386" endtime="20210205 12:52:17.387"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.387" endtime="20210205 12:52:17.388"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.389" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.388" endtime="20210205 12:52:17.389"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.317" endtime="20210205 12:52:17.389"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.248" endtime="20210205 12:52:17.389"></status>
</kw>
<kw name="${postid} = 42" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.391" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:17.391" endtime="20210205 12:52:17.392"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:17.443" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/42 
 path_url=/posts/42 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:17.443" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/42 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1dc9113a06ec668a86d287b1ee85367d1612547537; expires=Sun, 07-Mar-21 17:52:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '928', 'X-Ratelimit-Reset': '1610899946', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"131-uHddi0mgHIPmmzZ13FEZKREc9o4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '1534', 'cf-request-id': '0814ebd2b00000e7448c985000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=K1fVCHY17M5GTLEOj8X26Vg28SFaqkD1wPw0lvpBqmFQ87kM7tQRR1D3UhtssFcoEUs0NLRt6YbOMD8IEac8lXVuB3qEHifMhcfTrPIv9miewZSkfCJOqyMYip2W"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bfde990e744-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 42,
  "title": "commodi ullam sint et excepturi error explicabo praesentium voluptas",
  "body": "odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis aliquam sunt sequi nulla dolorem\nnon facere repellendus voluptates quia\nratione harum vitae ut"
} 
 </msg>
<msg timestamp="20210205 12:52:17.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.392" endtime="20210205 12:52:17.444"></status>
</kw>
<msg timestamp="20210205 12:52:17.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.390" endtime="20210205 12:52:17.444"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.447" endtime="20210205 12:52:17.450"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.446" endtime="20210205 12:52:17.450"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.445" endtime="20210205 12:52:17.450"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.452" endtime="20210205 12:52:17.452"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.450" endtime="20210205 12:52:17.452"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.454" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.454" endtime="20210205 12:52:17.454"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.523" level="INFO">${idvalue} = [42]</msg>
<status status="PASS" starttime="20210205 12:52:17.454" endtime="20210205 12:52:17.523"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:17.524" level="INFO">${responseid} = 42</msg>
<status status="PASS" starttime="20210205 12:52:17.523" endtime="20210205 12:52:17.524"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.524" endtime="20210205 12:52:17.525"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.525" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.525" endtime="20210205 12:52:17.525"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.453" endtime="20210205 12:52:17.526"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.389" endtime="20210205 12:52:17.526"></status>
</kw>
<kw name="${postid} = 43" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.528" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:17.527" endtime="20210205 12:52:17.529"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:17.586" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/43 
 path_url=/posts/43 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:17.586" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/43 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4da87ff4edc5ec8c5c2f32b80669bc971612547537; expires=Sun, 07-Mar-21 17:52:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '980', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"149-CIe5MorMt/6eiC+lMhHtDjhofck"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7469', 'cf-request-id': '0814ebd33e0000f0099b14f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=aTGMatV79%2BRH2opvho6ZUhiyeTVK6r4%2BNqP%2B3%2FowwnJglL1tKLsj7Te8YPEYM4v42UTiCXRr%2FHYo2R9B8RX0qxbD0sYkCezHKRo4%2BlrYmLI1k4fCYAaSXCtH5365"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bfec871f009-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 43,
  "title": "eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis",
  "body": "similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexercitationem quos nam commodi possimus cum odio nihil nulla\ndolorum exercitationem magnam ex et a et distinctio debitis"
} 
 </msg>
<msg timestamp="20210205 12:52:17.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.529" endtime="20210205 12:52:17.587"></status>
</kw>
<msg timestamp="20210205 12:52:17.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.526" endtime="20210205 12:52:17.587"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.590" endtime="20210205 12:52:17.593"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.589" endtime="20210205 12:52:17.593"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.588" endtime="20210205 12:52:17.594"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.595" endtime="20210205 12:52:17.596"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.594" endtime="20210205 12:52:17.596"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.598" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.597" endtime="20210205 12:52:17.598"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.668" level="INFO">${idvalue} = [43]</msg>
<status status="PASS" starttime="20210205 12:52:17.598" endtime="20210205 12:52:17.668"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:17.669" level="INFO">${responseid} = 43</msg>
<status status="PASS" starttime="20210205 12:52:17.668" endtime="20210205 12:52:17.669"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.669" endtime="20210205 12:52:17.670"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.671" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.670" endtime="20210205 12:52:17.671"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.596" endtime="20210205 12:52:17.671"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.526" endtime="20210205 12:52:17.671"></status>
</kw>
<kw name="${postid} = 44" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.673" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:17.672" endtime="20210205 12:52:17.674"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:17.730" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/44 
 path_url=/posts/44 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:17.730" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/44 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2cac46b80cc7aaaf51ef4721a48958cb1612547537; expires=Sun, 07-Mar-21 17:52:17 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1610900306', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f9-qeEI4xhxJyQd+h1AmBEbRcZU5LE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7469', 'cf-request-id': '0814ebd3cc000091da34a7d000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BYXphvw3o3B1eTu6y0oEA6AmyDIHMA7MucwEoXebxUgWPP7QxCfmgjJ6DLs0nGxRLNmhz7pAJiyZi694E9t7KPuFKX6vV1secybb%2Fv1RudM9%2BOmoka85ALcYHD7%2B"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7bffaa2591da-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 44,
  "title": "optio dolor molestias sit",
  "body": "temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iure quam sed maxime ut distinctio quae"
} 
 </msg>
<msg timestamp="20210205 12:52:17.731" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.674" endtime="20210205 12:52:17.731"></status>
</kw>
<msg timestamp="20210205 12:52:17.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.671" endtime="20210205 12:52:17.732"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.734" endtime="20210205 12:52:17.737"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.733" endtime="20210205 12:52:17.737"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.732" endtime="20210205 12:52:17.737"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.739" endtime="20210205 12:52:17.739"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.738" endtime="20210205 12:52:17.740"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.741" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.741" endtime="20210205 12:52:17.741"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.812" level="INFO">${idvalue} = [44]</msg>
<status status="PASS" starttime="20210205 12:52:17.741" endtime="20210205 12:52:17.812"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:17.813" level="INFO">${responseid} = 44</msg>
<status status="PASS" starttime="20210205 12:52:17.812" endtime="20210205 12:52:17.813"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.813" endtime="20210205 12:52:17.814"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.814" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.814" endtime="20210205 12:52:17.814"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.740" endtime="20210205 12:52:17.815"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.671" endtime="20210205 12:52:17.815"></status>
</kw>
<kw name="${postid} = 45" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.816" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:17.816" endtime="20210205 12:52:17.817"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:17.879" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/45 
 path_url=/posts/45 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:17.880" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/45 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8b064c9756281990dc134679ba7b1e281612547538; expires=Sun, 07-Mar-21 17:52:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '989', 'X-Ratelimit-Reset': '1611536772', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ed-rWKwMfMntbkO4fMbZo0ZEINfI8c"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebd45b00003dae9b057000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=SCGqvEUpECMLu4gIAzJl1UiohpMZjMQrLcuy3RYu2SpEuffKtZ6TU640Bf%2BLxQVOjBbVQNL%2BYiMTqwyEMq9pa7zBa0vsZmiwPxR3dpRxTWTXsofVnyfks5XJm8jI"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c0098103dae-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 45,
  "title": "ut numquam possimus omnis eius suscipit laudantium iure",
  "body": "est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum repellendus dolorem autem"
} 
 </msg>
<msg timestamp="20210205 12:52:17.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.817" endtime="20210205 12:52:17.880"></status>
</kw>
<msg timestamp="20210205 12:52:17.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.815" endtime="20210205 12:52:17.881"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.884" endtime="20210205 12:52:17.886"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.882" endtime="20210205 12:52:17.887"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.881" endtime="20210205 12:52:17.887"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.888" endtime="20210205 12:52:17.889"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.887" endtime="20210205 12:52:17.889"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.891" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.890" endtime="20210205 12:52:17.891"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.952" level="INFO">${idvalue} = [45]</msg>
<status status="PASS" starttime="20210205 12:52:17.891" endtime="20210205 12:52:17.952"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:17.953" level="INFO">${responseid} = 45</msg>
<status status="PASS" starttime="20210205 12:52:17.953" endtime="20210205 12:52:17.953"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:17.953" endtime="20210205 12:52:17.954"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:17.954" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:17.954" endtime="20210205 12:52:17.954"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.889" endtime="20210205 12:52:17.954"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.815" endtime="20210205 12:52:17.954"></status>
</kw>
<kw name="${postid} = 46" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:17.955" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:17.955" endtime="20210205 12:52:17.956"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:18.009" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/46 
 path_url=/posts/46 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:18.009" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/46 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d801cfb037739d0b81e57acc80b64988c1612547538; expires=Sun, 07-Mar-21 17:52:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '927', 'X-Ratelimit-Reset': '1610900006', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d0-OhfTd80AsvDHSFm9T0Fi068MWcY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebd4e600003dcd0bb67000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=wIua38zzj%2FhMCI3wBSS0DLlsabGzDNOXPx79srMyFexjTP6cr8Kb7gjkoRryx6tddzWae1NXiiEzfk0UailnDHWdUgKb7mFvQFjjWs%2BiUsqfrP%2BP9oAcqKjCLPj4"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c017ddc3dcd-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 46,
  "title": "aut quo modi neque nostrum ducimus",
  "body": "voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid"
} 
 </msg>
<msg timestamp="20210205 12:52:18.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.956" endtime="20210205 12:52:18.010"></status>
</kw>
<msg timestamp="20210205 12:52:18.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:17.955" endtime="20210205 12:52:18.010"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.013" endtime="20210205 12:52:18.016"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.012" endtime="20210205 12:52:18.017"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.011" endtime="20210205 12:52:18.017"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.018" endtime="20210205 12:52:18.019"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.017" endtime="20210205 12:52:18.019"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.021" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.020" endtime="20210205 12:52:18.021"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.068" level="INFO">${idvalue} = [46]</msg>
<status status="PASS" starttime="20210205 12:52:18.021" endtime="20210205 12:52:18.068"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:18.069" level="INFO">${responseid} = 46</msg>
<status status="PASS" starttime="20210205 12:52:18.068" endtime="20210205 12:52:18.069"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.069" endtime="20210205 12:52:18.069"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.069" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.069" endtime="20210205 12:52:18.069"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.019" endtime="20210205 12:52:18.070"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:17.954" endtime="20210205 12:52:18.070"></status>
</kw>
<kw name="${postid} = 47" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.071" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:18.071" endtime="20210205 12:52:18.071"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:18.127" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/47 
 path_url=/posts/47 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:18.127" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/47 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d599897b5f1ff065618d22a9ec13c85ab1612547538; expires=Sun, 07-Mar-21 17:52:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '961', 'x-ratelimit-reset': '1611755940', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"109-s96ANlpy6qW0Y5CU7Xc8LI9hFKE"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebd55a00001546e91de000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=RrclNEV5jLWWmes6UqwjiAN%2BUueKjHju7CTEgBygvdE52kNRFCFgeDfPNETaeMEAka%2BZYdjy5cXrMAhfoXuJ881ZslAy98RIycCTtlXLBfKW2Q20V7mT79DsZsRc"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c022f601546-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 47,
  "title": "quibusdam cumque rem aut deserunt",
  "body": "voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beatae rerum ea iure soluta nostrum\neligendi et voluptate"
} 
 </msg>
<msg timestamp="20210205 12:52:18.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.071" endtime="20210205 12:52:18.128"></status>
</kw>
<msg timestamp="20210205 12:52:18.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.070" endtime="20210205 12:52:18.128"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.131" endtime="20210205 12:52:18.134"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.130" endtime="20210205 12:52:18.134"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.128" endtime="20210205 12:52:18.134"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.136" endtime="20210205 12:52:18.136"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.135" endtime="20210205 12:52:18.137"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.138" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.138" endtime="20210205 12:52:18.138"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.210" level="INFO">${idvalue} = [47]</msg>
<status status="PASS" starttime="20210205 12:52:18.139" endtime="20210205 12:52:18.210"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:18.211" level="INFO">${responseid} = 47</msg>
<status status="PASS" starttime="20210205 12:52:18.210" endtime="20210205 12:52:18.211"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.211" endtime="20210205 12:52:18.212"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.212" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.212" endtime="20210205 12:52:18.212"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.137" endtime="20210205 12:52:18.213"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.070" endtime="20210205 12:52:18.213"></status>
</kw>
<kw name="${postid} = 48" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.214" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:18.214" endtime="20210205 12:52:18.215"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:18.272" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/48 
 path_url=/posts/48 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:18.272" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/48 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d093eca193677b7e6cf7864ad1c9e7fcd1612547538; expires=Sun, 07-Mar-21 17:52:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '960', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"107-td+hSQ4ZRU5RdRcCg9ZABJ7WwQI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebd5e80000f04ddf971000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=T4N66AwOiplBExoatUDW02GZY8ul%2FpDQlvOv%2FDQT2saCwIN7YPkZw16Yyd5%2BckapRDsPZ%2FBFw2j8L3%2B7vnM2mqldZ4K6xQVWDxFqeidA35P98yl0mg3h0V0AX1KG"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c030e18f04d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 48,
  "title": "ut voluptatem illum ea doloribus itaque eos",
  "body": "voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab deleniti\nlaudantium repellat ad ut et autem reprehenderit"
} 
 </msg>
<msg timestamp="20210205 12:52:18.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.215" endtime="20210205 12:52:18.273"></status>
</kw>
<msg timestamp="20210205 12:52:18.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.213" endtime="20210205 12:52:18.273"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.276" endtime="20210205 12:52:18.279"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.274" endtime="20210205 12:52:18.279"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.274" endtime="20210205 12:52:18.279"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.281" endtime="20210205 12:52:18.281"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.279" endtime="20210205 12:52:18.282"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.283" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.283" endtime="20210205 12:52:18.283"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.356" level="INFO">${idvalue} = [48]</msg>
<status status="PASS" starttime="20210205 12:52:18.283" endtime="20210205 12:52:18.356"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:18.357" level="INFO">${responseid} = 48</msg>
<status status="PASS" starttime="20210205 12:52:18.356" endtime="20210205 12:52:18.357"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.357" endtime="20210205 12:52:18.358"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.359" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.358" endtime="20210205 12:52:18.359"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.282" endtime="20210205 12:52:18.359"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.213" endtime="20210205 12:52:18.359"></status>
</kw>
<kw name="${postid} = 49" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.361" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:18.361" endtime="20210205 12:52:18.362"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:18.414" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/49 
 path_url=/posts/49 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:18.414" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/49 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3d0f10f49d5b55fd6d97e3985f4a9bef1612547538; expires=Sun, 07-Mar-21 17:52:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '959', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"112-lKkCmj93YmY7yVGzoTlsICQTIV8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebd67a00003e03edab0000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=QzB5lhLMohUVO2y5Q%2FNUCzo%2BisScUwzAzrbdxJxLMS81uto4HXS71SN0kqEwX3C7aFJ14TNvfcJPcwAcVC796xr9pUCuqybwCNtTxNUrb6%2F49t8myQ7Ge%2FoDyCwu"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c03fb343e03-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 49,
  "title": "laborum non sunt aut ut assumenda perspiciatis voluptas",
  "body": "inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum veritatis non\nquibusdam officiis aspernatur cumque aut commodi aut"
} 
 </msg>
<msg timestamp="20210205 12:52:18.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.362" endtime="20210205 12:52:18.415"></status>
</kw>
<msg timestamp="20210205 12:52:18.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.360" endtime="20210205 12:52:18.415"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.418" endtime="20210205 12:52:18.421"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.416" endtime="20210205 12:52:18.421"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.415" endtime="20210205 12:52:18.421"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.423" endtime="20210205 12:52:18.423"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.422" endtime="20210205 12:52:18.424"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.425" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.425" endtime="20210205 12:52:18.425"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.492" level="INFO">${idvalue} = [49]</msg>
<status status="PASS" starttime="20210205 12:52:18.425" endtime="20210205 12:52:18.492"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:18.493" level="INFO">${responseid} = 49</msg>
<status status="PASS" starttime="20210205 12:52:18.492" endtime="20210205 12:52:18.493"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.493" endtime="20210205 12:52:18.494"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.494" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.494" endtime="20210205 12:52:18.494"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.424" endtime="20210205 12:52:18.495"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.359" endtime="20210205 12:52:18.495"></status>
</kw>
<kw name="${postid} = 50" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.497" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:18.496" endtime="20210205 12:52:18.497"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:18.547" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/50 
 path_url=/posts/50 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:18.547" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/50 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d203f03838424f5ce3c8dbf3e9b7461d41612547538; expires=Sun, 07-Mar-21 17:52:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1611642816', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"14d-XND1VIG+pZHF+RVMSi1awppS1XI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebd70200000cc1d4ab2000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=vDABC29tlfjEfx5a5HBncULmrmm0NXqyBFCs22qDTDowEPeFad2SoRm924e%2BaJI%2Fi0uw8EFlF2BBzXeY%2FVa3gwVqaa69ZnLaO7MUh3LPvaUeaXSV3KgW%2F5cVTMd5"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c04c8960cc1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 50,
  "title": "repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem",
  "body": "error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi et est et voluptates\nquia distinctio ab amet quaerat molestiae et vitae\nadipisci impedit sequi nesciunt quis consectetur"
} 
 </msg>
<msg timestamp="20210205 12:52:18.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.497" endtime="20210205 12:52:18.548"></status>
</kw>
<msg timestamp="20210205 12:52:18.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.495" endtime="20210205 12:52:18.549"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.551" endtime="20210205 12:52:18.554"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.550" endtime="20210205 12:52:18.554"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.549" endtime="20210205 12:52:18.554"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.556" endtime="20210205 12:52:18.556"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.555" endtime="20210205 12:52:18.557"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.558" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.558" endtime="20210205 12:52:18.558"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.631" level="INFO">${idvalue} = [50]</msg>
<status status="PASS" starttime="20210205 12:52:18.558" endtime="20210205 12:52:18.631"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:18.632" level="INFO">${responseid} = 50</msg>
<status status="PASS" starttime="20210205 12:52:18.631" endtime="20210205 12:52:18.632"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.632" endtime="20210205 12:52:18.633"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.633" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.633" endtime="20210205 12:52:18.633"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.557" endtime="20210205 12:52:18.634"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.495" endtime="20210205 12:52:18.634"></status>
</kw>
<kw name="${postid} = 51" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.636" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:18.635" endtime="20210205 12:52:18.636"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:18.713" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/51 
 path_url=/posts/51 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:18.714" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/51 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d16e6fd7dfcda7c6d521e757ef7aa8e681612547538; expires=Sun, 07-Mar-21 17:52:18 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '958', 'x-ratelimit-reset': '1611755940', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"ec-KSZLw8b2VyQH0CoS7Z65vSSln78"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebd7a50000f029ad343000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=MK5MfpVnjhSDRu8KhzGzo0ltC%2B3O3y4xjPoushAgKMPdb7okSo%2F%2F6JSO6BeEKN%2BUegUC8EkD%2FGDZO9%2BOGUGt8eIfGO8dnpVFAtBZ%2BGsX05iCVF4c1%2BRFPezQ7Z7q"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c05da0ff029-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 51,
  "title": "soluta aliquam aperiam consequatur illo quis voluptas",
  "body": "sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores sit consectetur dolorem"
} 
 </msg>
<msg timestamp="20210205 12:52:18.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.636" endtime="20210205 12:52:18.714"></status>
</kw>
<msg timestamp="20210205 12:52:18.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.634" endtime="20210205 12:52:18.715"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.717" endtime="20210205 12:52:18.720"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.716" endtime="20210205 12:52:18.720"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.715" endtime="20210205 12:52:18.720"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.722" endtime="20210205 12:52:18.722"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.720" endtime="20210205 12:52:18.723"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.724" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.724" endtime="20210205 12:52:18.724"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.794" level="INFO">${idvalue} = [51]</msg>
<status status="PASS" starttime="20210205 12:52:18.725" endtime="20210205 12:52:18.794"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:18.795" level="INFO">${responseid} = 51</msg>
<status status="PASS" starttime="20210205 12:52:18.795" endtime="20210205 12:52:18.795"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.796" endtime="20210205 12:52:18.796"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.797" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.796" endtime="20210205 12:52:18.797"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.723" endtime="20210205 12:52:18.797"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.634" endtime="20210205 12:52:18.797"></status>
</kw>
<kw name="${postid} = 52" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.799" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:18.799" endtime="20210205 12:52:18.800"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:18.867" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/52 
 path_url=/posts/52 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:18.867" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/52 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d121afeba820c08eae1fd92be91e6b1e21612547539; expires=Sun, 07-Mar-21 17:52:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '957', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11d-WmrD+HyY132p7brEZQ1rec9ZC6E"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebd83b0000e6e43ca83000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=oeXuB1KOSbYwQ6UTPLS%2BVUMPlvM67j13gx6ys6PM6Jgb4f7TEnh%2Fz%2FhPkmLLnmEXetIGmzK6viJtS%2FmhZDfRbFWMN94Hq3D1x%2FzhuF5%2BC7YLh9%2BNrygMgC707AFD"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c06c93ce6e4-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 52,
  "title": "qui enim et consequuntur quia animi quis voluptate quibusdam",
  "body": "iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iusto accusantium provident architecto\nsoluta esse reprehenderit qui laborum"
} 
 </msg>
<msg timestamp="20210205 12:52:18.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.800" endtime="20210205 12:52:18.868"></status>
</kw>
<msg timestamp="20210205 12:52:18.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.798" endtime="20210205 12:52:18.869"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.871" endtime="20210205 12:52:18.874"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.870" endtime="20210205 12:52:18.874"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.869" endtime="20210205 12:52:18.874"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.876" endtime="20210205 12:52:18.876"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.875" endtime="20210205 12:52:18.877"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.878" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.878" endtime="20210205 12:52:18.878"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.948" level="INFO">${idvalue} = [52]</msg>
<status status="PASS" starttime="20210205 12:52:18.878" endtime="20210205 12:52:18.948"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:18.949" level="INFO">${responseid} = 52</msg>
<status status="PASS" starttime="20210205 12:52:18.948" endtime="20210205 12:52:18.949"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:18.949" endtime="20210205 12:52:18.950"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:18.950" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:18.950" endtime="20210205 12:52:18.950"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.877" endtime="20210205 12:52:18.951"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.797" endtime="20210205 12:52:18.951"></status>
</kw>
<kw name="${postid} = 53" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:18.952" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:18.952" endtime="20210205 12:52:18.953"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:19.008" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/53 
 path_url=/posts/53 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:19.009" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/53 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dab5571eb1976797de89f76c1f5f259531612547539; expires=Sun, 07-Mar-21 17:52:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '956', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-X55YQF6JtuvUfAW398enLPpXN4M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebd8cc00003e1c02156000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=zPxJvEGNEd0NY09zQKij7A0Rnwxmlsgs4BeVSf8HgqymsMKjFbx%2FcJKiN4WD2UNJGwEguZFbv6QGCJriATUMhD%2Fm1kAKiCQv6W7JcrfALlzFZgSjB6gQpuzpvhZ8"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c07ae533e1c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 53,
  "title": "ut quo aut ducimus alias",
  "body": "minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quidem veritatis sunt non explicabo similique"
} 
 </msg>
<msg timestamp="20210205 12:52:19.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.953" endtime="20210205 12:52:19.009"></status>
</kw>
<msg timestamp="20210205 12:52:19.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:18.951" endtime="20210205 12:52:19.010"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.012" endtime="20210205 12:52:19.015"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.011" endtime="20210205 12:52:19.015"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.010" endtime="20210205 12:52:19.015"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.017" endtime="20210205 12:52:19.017"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.015" endtime="20210205 12:52:19.018"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.019" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.019" endtime="20210205 12:52:19.019"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.135" level="INFO">${idvalue} = [53]</msg>
<status status="PASS" starttime="20210205 12:52:19.019" endtime="20210205 12:52:19.135"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:19.136" level="INFO">${responseid} = 53</msg>
<status status="PASS" starttime="20210205 12:52:19.135" endtime="20210205 12:52:19.136"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.136" endtime="20210205 12:52:19.137"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.137" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.137" endtime="20210205 12:52:19.137"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.018" endtime="20210205 12:52:19.138"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:18.951" endtime="20210205 12:52:19.138"></status>
</kw>
<kw name="${postid} = 54" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.139" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:19.139" endtime="20210205 12:52:19.140"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:19.206" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/54 
 path_url=/posts/54 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:19.206" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/54 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1a4b82d7c92a7004405579dd1ba1942e1612547539; expires=Sun, 07-Mar-21 17:52:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611693280', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-/rMACUfvajsqfpLr5SV6d7Kh/pA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebd9890000efe9fb9cb000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=QNKAI1XQDAmUmbAgg51v%2ByC15ScmcI8GLfkUZMWw1KMWiSv3pVP8k2QhSKcGiWUcPmolWdV6Forv8GT1M2AiDO26tR%2BgBj7YB6AYyNTVxjsR%2BvJ504ZT73byV%2B9N"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c08d82eefe9-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 54,
  "title": "sit asperiores ipsam eveniet odio non quia",
  "body": "totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero incidunt corrupti mollitia"
} 
 </msg>
<msg timestamp="20210205 12:52:19.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.140" endtime="20210205 12:52:19.207"></status>
</kw>
<msg timestamp="20210205 12:52:19.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.138" endtime="20210205 12:52:19.207"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.210" endtime="20210205 12:52:19.213"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.209" endtime="20210205 12:52:19.213"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.208" endtime="20210205 12:52:19.213"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.215" endtime="20210205 12:52:19.215"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.214" endtime="20210205 12:52:19.216"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.217" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.217" endtime="20210205 12:52:19.217"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.272" level="INFO">${idvalue} = [54]</msg>
<status status="PASS" starttime="20210205 12:52:19.217" endtime="20210205 12:52:19.272"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:19.273" level="INFO">${responseid} = 54</msg>
<status status="PASS" starttime="20210205 12:52:19.272" endtime="20210205 12:52:19.273"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.273" endtime="20210205 12:52:19.273"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.274" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.273" endtime="20210205 12:52:19.274"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.216" endtime="20210205 12:52:19.274"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.138" endtime="20210205 12:52:19.274"></status>
</kw>
<kw name="${postid} = 55" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.275" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:19.275" endtime="20210205 12:52:19.275"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:19.326" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/55 
 path_url=/posts/55 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:19.327" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/55 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d413555d61b6389bffc2fb62882e4c8e21612547539; expires=Sun, 07-Mar-21 17:52:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f0-VxeBMfiov8SnmTjGIBYMw53XYbw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebda0c00000cf1402e1000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=0qHegIz05PkZy4HLdAGTe%2BIxq%2FyJE7rqAPnHXdpB3Gzju1FeKTrk4Ulwy4sWH9T2l3T8WBCwcEBjfsdzwqgYpbsKUu%2BukOrAgPnR1j%2FXJKIUwF%2FkBlJ2WdmQcEy1"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c09aa430cf1-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 55,
  "title": "sit vel voluptatem et non libero",
  "body": "debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis molestiae\nnihil ut eum odit"
} 
 </msg>
<msg timestamp="20210205 12:52:19.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.276" endtime="20210205 12:52:19.327"></status>
</kw>
<msg timestamp="20210205 12:52:19.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.274" endtime="20210205 12:52:19.328"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.330" endtime="20210205 12:52:19.333"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.329" endtime="20210205 12:52:19.333"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.328" endtime="20210205 12:52:19.334"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.335" endtime="20210205 12:52:19.336"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.334" endtime="20210205 12:52:19.336"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.338" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.337" endtime="20210205 12:52:19.338"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.400" level="INFO">${idvalue} = [55]</msg>
<status status="PASS" starttime="20210205 12:52:19.338" endtime="20210205 12:52:19.400"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:19.401" level="INFO">${responseid} = 55</msg>
<status status="PASS" starttime="20210205 12:52:19.400" endtime="20210205 12:52:19.401"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.401" endtime="20210205 12:52:19.402"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.403" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.402" endtime="20210205 12:52:19.403"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.336" endtime="20210205 12:52:19.403"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.274" endtime="20210205 12:52:19.403"></status>
</kw>
<kw name="${postid} = 56" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.405" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:19.405" endtime="20210205 12:52:19.406"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:19.460" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/56 
 path_url=/posts/56 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:19.460" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/56 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9fa4cbc34954e2374e00dc01fdeaa0da1612547539; expires=Sun, 07-Mar-21 17:52:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '969', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-u98FTQTucjGThpIemwDEky3CeT0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebda8d0000153a361ba000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=FgV5E640DCvfV496qfFO0fPIUJluRC1FCh2DddfCHdym8CQK1akRZMPcVhJrHyzI7m8BNn8hKd23kW%2FWCbTdTNx0nAwAppfWJlVyQtzRBDs8DKxXLt60iemoLqGm"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c0a7c19153a-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 56,
  "title": "qui et at rerum necessitatibus",
  "body": "aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis harum reprehenderit dolores eligendi"
} 
 </msg>
<msg timestamp="20210205 12:52:19.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.406" endtime="20210205 12:52:19.461"></status>
</kw>
<msg timestamp="20210205 12:52:19.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.404" endtime="20210205 12:52:19.461"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.464" endtime="20210205 12:52:19.467"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.463" endtime="20210205 12:52:19.467"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.462" endtime="20210205 12:52:19.467"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.469" endtime="20210205 12:52:19.469"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.468" endtime="20210205 12:52:19.470"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.471" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.471" endtime="20210205 12:52:19.471"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.539" level="INFO">${idvalue} = [56]</msg>
<status status="PASS" starttime="20210205 12:52:19.471" endtime="20210205 12:52:19.539"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:19.540" level="INFO">${responseid} = 56</msg>
<status status="PASS" starttime="20210205 12:52:19.539" endtime="20210205 12:52:19.540"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.540" endtime="20210205 12:52:19.541"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.541" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.541" endtime="20210205 12:52:19.541"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.470" endtime="20210205 12:52:19.542"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.403" endtime="20210205 12:52:19.542"></status>
</kw>
<kw name="${postid} = 57" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.543" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:19.543" endtime="20210205 12:52:19.544"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:19.598" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/57 
 path_url=/posts/57 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:19.599" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/57 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7829a5eded8ff637ac494573e092e5ff1612547539; expires=Sun, 07-Mar-21 17:52:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '952', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ce-Iwt4vkAV2fTGb7NKDpU2J1zQlLg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebdb180000e855748e3000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ek08rzUy2fUeHY%2BDFh1IIjtoJINZYVPD0n0Yux4ih2FZn6ydQEJ7nqKmnSqZGhkz1kTUeK7upaYmM69WV0H2%2B844Nycnth1ohX%2FNBu%2FkP6T%2FdTKCfXYqnb6ddoBH"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c0b5967e855-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 57,
  "title": "sed ab est est",
  "body": "at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est"
} 
 </msg>
<msg timestamp="20210205 12:52:19.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.544" endtime="20210205 12:52:19.599"></status>
</kw>
<msg timestamp="20210205 12:52:19.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.542" endtime="20210205 12:52:19.600"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.603" endtime="20210205 12:52:19.607"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.602" endtime="20210205 12:52:19.607"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.600" endtime="20210205 12:52:19.608"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.609" endtime="20210205 12:52:19.610"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.608" endtime="20210205 12:52:19.611"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.613" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.612" endtime="20210205 12:52:19.613"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.684" level="INFO">${idvalue} = [57]</msg>
<status status="PASS" starttime="20210205 12:52:19.613" endtime="20210205 12:52:19.684"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:19.685" level="INFO">${responseid} = 57</msg>
<status status="PASS" starttime="20210205 12:52:19.685" endtime="20210205 12:52:19.685"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.685" endtime="20210205 12:52:19.686"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.686" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.686" endtime="20210205 12:52:19.686"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.611" endtime="20210205 12:52:19.686"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.542" endtime="20210205 12:52:19.686"></status>
</kw>
<kw name="${postid} = 58" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.687" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:19.687" endtime="20210205 12:52:19.688"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:19.741" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/58 
 path_url=/posts/58 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:19.741" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/58 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcf419c9fd96f5f80d958dfaeda7c646b1612547539; expires=Sun, 07-Mar-21 17:52:19 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '949', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"df-bD3LY230qxsVBb8KHrs4UpWT93M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7470', 'cf-request-id': '0814ebdbab0000159f30b37000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=HXMH7SH98hidjiYFOaawsPZfi3%2F9eAyLygCMn7MBwpAtZ3Cwf0DW3oozlz7dmOQAU%2B5dviyDmF3wkcyA1lEudmTVaRsgDFzGQy6zVmziPe69RjLXyyKbCeQsfAIB"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c0c4ae6159f-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 58,
  "title": "voluptatum itaque dolores nisi et quasi",
  "body": "veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad similique veniam"
} 
 </msg>
<msg timestamp="20210205 12:52:19.742" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.688" endtime="20210205 12:52:19.742"></status>
</kw>
<msg timestamp="20210205 12:52:19.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.687" endtime="20210205 12:52:19.743"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.745" endtime="20210205 12:52:19.748"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.744" endtime="20210205 12:52:19.748"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.743" endtime="20210205 12:52:19.749"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.750" endtime="20210205 12:52:19.751"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.749" endtime="20210205 12:52:19.751"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.752" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.752" endtime="20210205 12:52:19.752"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.823" level="INFO">${idvalue} = [58]</msg>
<status status="PASS" starttime="20210205 12:52:19.753" endtime="20210205 12:52:19.823"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:19.824" level="INFO">${responseid} = 58</msg>
<status status="PASS" starttime="20210205 12:52:19.823" endtime="20210205 12:52:19.824"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.824" endtime="20210205 12:52:19.825"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.825" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.825" endtime="20210205 12:52:19.826"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.751" endtime="20210205 12:52:19.826"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.686" endtime="20210205 12:52:19.826"></status>
</kw>
<kw name="${postid} = 59" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.828" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:19.827" endtime="20210205 12:52:19.828"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:19.882" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/59 
 path_url=/posts/59 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:19.882" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/59 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5b6dca508c7ddb0254a50326287e0d641612547540; expires=Sun, 07-Mar-21 17:52:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '965', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"135-f8DoN5pkvK3E3Z4uNHbshLKUln0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7471', 'cf-request-id': '0814ebdc350000159f6a3d0000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2B6uQni0bUuJqvF0N5kShmN%2FhXonJ2%2FI9x4jJRY5gNiFF9DAWMYEHbyfhv2IL795IDBRYcnHAy4OZXDQZFA0zVul6%2BVwy2EW%2Bi%2BS6B0E12%2Faan2jHfNzsScBt2AhC"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c0d2d1f159f-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 59,
  "title": "qui commodi dolor at maiores et quis id accusantium",
  "body": "perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores suscipit voluptas et\nanimi doloribus cum rerum quas et magni\net hic ut ut commodi expedita sunt"
} 
 </msg>
<msg timestamp="20210205 12:52:19.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.829" endtime="20210205 12:52:19.883"></status>
</kw>
<msg timestamp="20210205 12:52:19.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.826" endtime="20210205 12:52:19.883"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.886" endtime="20210205 12:52:19.889"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.885" endtime="20210205 12:52:19.889"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.884" endtime="20210205 12:52:19.889"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.890" endtime="20210205 12:52:19.891"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.889" endtime="20210205 12:52:19.891"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.893" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.892" endtime="20210205 12:52:19.893"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.943" level="INFO">${idvalue} = [59]</msg>
<status status="PASS" starttime="20210205 12:52:19.893" endtime="20210205 12:52:19.943"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:19.945" level="INFO">${responseid} = 59</msg>
<status status="PASS" starttime="20210205 12:52:19.945" endtime="20210205 12:52:19.945"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:19.945" endtime="20210205 12:52:19.946"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:19.946" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:19.946" endtime="20210205 12:52:19.946"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.892" endtime="20210205 12:52:19.946"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.826" endtime="20210205 12:52:19.947"></status>
</kw>
<kw name="${postid} = 60" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:19.947" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:19.947" endtime="20210205 12:52:19.949"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:20.017" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/60 
 path_url=/posts/60 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:20.017" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/60 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9ec7bc159cee35991b2816fa9b2d2fd91612547540; expires=Sun, 07-Mar-21 17:52:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '995', 'X-Ratelimit-Reset': '1611642816', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10c-7tnlht60JBKnr58PtdEE+vo8WCI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7471', 'cf-request-id': '0814ebdcb30000e851c906e000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=wtGwL0X8pG4L%2BVzbh26Nvr7eivxcg%2FfKXWI4BhVsE6jSEKqDtuP5h2Sb1kR2Sw%2BQp8yzhC8y%2B%2FZPewyzJPAySKWmEzSsGtnRqYfLrVqM6k4V3RWQPN0cJEfg8qhI"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c0de97ae851-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 60,
  "title": "consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere",
  "body": "asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et fuga perferendis voluptas\nillo ratione amet aut et omnis"
} 
 </msg>
<msg timestamp="20210205 12:52:20.018" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.949" endtime="20210205 12:52:20.018"></status>
</kw>
<msg timestamp="20210205 12:52:20.018" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:19.947" endtime="20210205 12:52:20.018"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:20.021" endtime="20210205 12:52:20.024"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.020" endtime="20210205 12:52:20.024"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.019" endtime="20210205 12:52:20.024"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:20.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.026" endtime="20210205 12:52:20.026"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.024" endtime="20210205 12:52:20.027"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.028" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:20.028" endtime="20210205 12:52:20.028"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.097" level="INFO">${idvalue} = [60]</msg>
<status status="PASS" starttime="20210205 12:52:20.028" endtime="20210205 12:52:20.097"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:20.098" level="INFO">${responseid} = 60</msg>
<status status="PASS" starttime="20210205 12:52:20.097" endtime="20210205 12:52:20.098"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:20.098" endtime="20210205 12:52:20.099"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.099" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:20.099" endtime="20210205 12:52:20.099"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.027" endtime="20210205 12:52:20.100"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:19.947" endtime="20210205 12:52:20.100"></status>
</kw>
<kw name="${postid} = 61" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:20.102" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:20.101" endtime="20210205 12:52:20.102"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:20.153" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/61 
 path_url=/posts/61 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:20.154" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/61 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1eab7e2957d01f65e35f3172214523aa1612547540; expires=Sun, 07-Mar-21 17:52:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '950', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"117-2lMq4LJFOqWrZ3nCurXp4bbe50g"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7471', 'cf-request-id': '0814ebdd460000157bf5a66000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=0%2F58bYI1GUAaG4sJsBoyeM%2FVYAFOpqd1H5cdj9m0YnH6dayfaNLoteUWMUQMuozXCBsAa4tPKsQi7DpSFu%2Bb6HLss44G80Fwqjmz1uDUyI%2B%2FW1LklXnyPBaFidHc"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c0edba8157b-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 61,
  "title": "voluptatem doloribus consectetur est ut ducimus",
  "body": "ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blanditiis debitis in nesciunt doloribus dicta dolores\nmagnam minus velit"
} 
 </msg>
<msg timestamp="20210205 12:52:20.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.102" endtime="20210205 12:52:20.154"></status>
</kw>
<msg timestamp="20210205 12:52:20.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.100" endtime="20210205 12:52:20.155"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:20.157" endtime="20210205 12:52:20.160"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.156" endtime="20210205 12:52:20.160"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.155" endtime="20210205 12:52:20.160"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:20.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.162" endtime="20210205 12:52:20.162"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.161" endtime="20210205 12:52:20.163"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.164" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:20.164" endtime="20210205 12:52:20.164"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.236" level="INFO">${idvalue} = [61]</msg>
<status status="PASS" starttime="20210205 12:52:20.164" endtime="20210205 12:52:20.236"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:20.237" level="INFO">${responseid} = 61</msg>
<status status="PASS" starttime="20210205 12:52:20.236" endtime="20210205 12:52:20.237"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:20.237" endtime="20210205 12:52:20.238"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.239" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:20.238" endtime="20210205 12:52:20.239"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.163" endtime="20210205 12:52:20.239"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.100" endtime="20210205 12:52:20.239"></status>
</kw>
<kw name="${postid} = 62" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:20.241" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:20.241" endtime="20210205 12:52:20.242"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:20.299" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/62 
 path_url=/posts/62 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:20.299" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/62 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de0981d055bf03b6d01b2166cc5dd49651612547540; expires=Sun, 07-Mar-21 17:52:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611700481', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fc-wUwohCARVvkGoN5CwlwsirOR5iU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7471', 'cf-request-id': '0814ebddd600003e10b5aad000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Gh7zhEZGzhCKH2KYZNowPCv3DuXdYcSblUn3c4pLmpSWc1EAFdFGCpNqOZNvfNGboKxWB9djsQ0w6E4%2FdG%2Fo8hM6bEVcZ%2BvkraNBKzeJ1xYnfsaSVoMSXQwcJgr%2F"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c0fbebd3e10-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 62,
  "title": "beatae enim quia vel",
  "body": "enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omnis\nquo molestiae omnis ea eveniet optio"
} 
 </msg>
<msg timestamp="20210205 12:52:20.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.243" endtime="20210205 12:52:20.300"></status>
</kw>
<msg timestamp="20210205 12:52:20.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.240" endtime="20210205 12:52:20.300"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:20.303" endtime="20210205 12:52:20.306"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.302" endtime="20210205 12:52:20.306"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.301" endtime="20210205 12:52:20.306"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:20.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.307" endtime="20210205 12:52:20.308"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.306" endtime="20210205 12:52:20.308"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.310" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:20.310" endtime="20210205 12:52:20.310"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.381" level="INFO">${idvalue} = [62]</msg>
<status status="PASS" starttime="20210205 12:52:20.310" endtime="20210205 12:52:20.381"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:20.382" level="INFO">${responseid} = 62</msg>
<status status="PASS" starttime="20210205 12:52:20.381" endtime="20210205 12:52:20.382"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:20.382" endtime="20210205 12:52:20.383"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.384" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:20.383" endtime="20210205 12:52:20.384"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.309" endtime="20210205 12:52:20.384"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.240" endtime="20210205 12:52:20.384"></status>
</kw>
<kw name="${postid} = 63" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:20.387" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:20.386" endtime="20210205 12:52:20.387"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:20.565" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/63 
 path_url=/posts/63 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:20.565" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/63 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df835b956215010b51c6ad62e7bfda8391612547540; expires=Sun, 07-Mar-21 17:52:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1611700661', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"154-0kFmwh5nu5wS1Jzcpk0yszfjrjQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7471', 'cf-request-id': '0814ebdeda00003e397721a000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ZxeUrx5%2BZ%2FcuKE7qsf0BSMl4OxkcQ0FCO58JL1bCHytqtwNQLxMfTGr5lrPTla6s1WM0W83%2B0z1mwYlf0KEqbgcjgoIZLclRUCVkuXz3D%2B06Fb%2F0qMSREvl%2Bbn%2FH"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c1159183e39-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 63,
  "title": "voluptas blanditiis repellendus animi ducimus error sapiente et suscipit",
  "body": "enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\nab delectus culpa quo reprehenderit blanditiis asperiores\naccusantium ut quam in voluptatibus voluptas ipsam dicta"
} 
 </msg>
<msg timestamp="20210205 12:52:20.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.387" endtime="20210205 12:52:20.566"></status>
</kw>
<msg timestamp="20210205 12:52:20.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.385" endtime="20210205 12:52:20.566"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:20.569" endtime="20210205 12:52:20.572"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.568" endtime="20210205 12:52:20.572"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.567" endtime="20210205 12:52:20.572"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:20.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.573" endtime="20210205 12:52:20.574"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.572" endtime="20210205 12:52:20.574"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.576" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:20.576" endtime="20210205 12:52:20.576"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.646" level="INFO">${idvalue} = [63]</msg>
<status status="PASS" starttime="20210205 12:52:20.576" endtime="20210205 12:52:20.646"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:20.647" level="INFO">${responseid} = 63</msg>
<status status="PASS" starttime="20210205 12:52:20.646" endtime="20210205 12:52:20.647"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:20.647" endtime="20210205 12:52:20.648"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.648" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:20.648" endtime="20210205 12:52:20.648"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.574" endtime="20210205 12:52:20.649"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.384" endtime="20210205 12:52:20.649"></status>
</kw>
<kw name="${postid} = 64" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:20.650" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:20.650" endtime="20210205 12:52:20.651"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:20.832" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/64 
 path_url=/posts/64 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:20.832" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/64 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db4c21386e492de96c20ae5dcd5723a1a1612547540; expires=Sun, 07-Mar-21 17:52:20 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '960', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-fG+p7wNrgpgJUc/3oEW9IALNB1s"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7471', 'cf-request-id': '0814ebdfe60000f04de50c4000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Gy8nDe0eCpbqSuMdrmL7BgwpmMx2SYWiCBuR8%2BgfSX3NtK4gbyI9kKUbHuKMIx8To2mnQ6BhvFunfNElN%2BGlhl4uM90BeU7CkBBf5JXmlGBZHWauuWKOgBhVh6sM"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c130c42f04d-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 64,
  "title": "et fugit quas eum in in aperiam quod",
  "body": "id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaque aut aut qui"
} 
 </msg>
<msg timestamp="20210205 12:52:20.833" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.651" endtime="20210205 12:52:20.833"></status>
</kw>
<msg timestamp="20210205 12:52:20.833" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.649" endtime="20210205 12:52:20.833"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:20.836" endtime="20210205 12:52:20.839"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.835" endtime="20210205 12:52:20.839"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.834" endtime="20210205 12:52:20.839"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:20.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.841" endtime="20210205 12:52:20.841"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.840" endtime="20210205 12:52:20.842"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.843" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:20.843" endtime="20210205 12:52:20.843"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.914" level="INFO">${idvalue} = [64]</msg>
<status status="PASS" starttime="20210205 12:52:20.843" endtime="20210205 12:52:20.914"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:20.915" level="INFO">${responseid} = 64</msg>
<status status="PASS" starttime="20210205 12:52:20.914" endtime="20210205 12:52:20.915"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:20.915" endtime="20210205 12:52:20.916"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:20.917" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:20.916" endtime="20210205 12:52:20.917"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.842" endtime="20210205 12:52:20.917"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.649" endtime="20210205 12:52:20.917"></status>
</kw>
<kw name="${postid} = 65" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:20.919" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:20.919" endtime="20210205 12:52:20.920"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:21.105" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/65 
 path_url=/posts/65 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:21.105" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/65 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d92b4325d032201e719f84de0b0304cf91612547541; expires=Sun, 07-Mar-21 17:52:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '955', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"108-o7Djqn++3cXC+SK+HeS4ds9s4Dk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12752', 'cf-request-id': '0814ebe0fb00003e34769db000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=XGeUMOSyS1ZCbrXv7j9exYbq7yZac1dRok6WD5sxRk2YfS1eC4CGY1jRu67d35iWpCroO1SAgBwEC%2F%2BIynK9XHdSfguxoxRzOk7jhx46aFTOBNieAH6y36rAi9A9"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c14c88a3e34-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 65,
  "title": "consequatur id enim sunt et et",
  "body": "voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperiores et perferendis\nnatus id esse incidunt pariatur"
} 
 </msg>
<msg timestamp="20210205 12:52:21.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.921" endtime="20210205 12:52:21.106"></status>
</kw>
<msg timestamp="20210205 12:52:21.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:20.918" endtime="20210205 12:52:21.106"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:21.109" endtime="20210205 12:52:21.112"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.108" endtime="20210205 12:52:21.112"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.107" endtime="20210205 12:52:21.113"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:21.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.114" endtime="20210205 12:52:21.115"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.113" endtime="20210205 12:52:21.115"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.116" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:21.116" endtime="20210205 12:52:21.116"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.187" level="INFO">${idvalue} = [65]</msg>
<status status="PASS" starttime="20210205 12:52:21.117" endtime="20210205 12:52:21.187"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:21.188" level="INFO">${responseid} = 65</msg>
<status status="PASS" starttime="20210205 12:52:21.187" endtime="20210205 12:52:21.188"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:21.188" endtime="20210205 12:52:21.189"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.189" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:21.189" endtime="20210205 12:52:21.189"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.115" endtime="20210205 12:52:21.190"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:20.917" endtime="20210205 12:52:21.190"></status>
</kw>
<kw name="${postid} = 66" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:21.191" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:21.191" endtime="20210205 12:52:21.192"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:21.355" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/66 
 path_url=/posts/66 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:21.355" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/66 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=ddec30a6ff5cf5560e5e9bc49e5aa1e401612547541; expires=Sun, 07-Mar-21 17:52:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '943', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-wkA8VfsJ18Eh0sMF7Ua9wR/8DVg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7472', 'cf-request-id': '0814ebe1890000f021bb8c2000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Rficw4OmcQzJPZVTK1k6SeldPd%2FLVQo7T2A%2BgLdWQGGlOcy%2F2jl%2BVo8EEVHkVkgeg9sdT7hKEDKvPkfD4zAhtirLhanpVRSAlhW1DFi4oeYfutBJpvWEbqyP87fd"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c15aef8f021-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 66,
  "title": "repudiandae ea animi iusto",
  "body": "officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusdam et nemo iusto saepe"
} 
 </msg>
<msg timestamp="20210205 12:52:21.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.192" endtime="20210205 12:52:21.356"></status>
</kw>
<msg timestamp="20210205 12:52:21.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.190" endtime="20210205 12:52:21.356"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:21.359" endtime="20210205 12:52:21.362"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.358" endtime="20210205 12:52:21.362"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.357" endtime="20210205 12:52:21.362"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:21.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.364" endtime="20210205 12:52:21.365"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.363" endtime="20210205 12:52:21.365"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.367" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:21.366" endtime="20210205 12:52:21.367"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.438" level="INFO">${idvalue} = [66]</msg>
<status status="PASS" starttime="20210205 12:52:21.367" endtime="20210205 12:52:21.438"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:21.439" level="INFO">${responseid} = 66</msg>
<status status="PASS" starttime="20210205 12:52:21.438" endtime="20210205 12:52:21.439"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:21.439" endtime="20210205 12:52:21.440"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.440" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:21.440" endtime="20210205 12:52:21.440"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.365" endtime="20210205 12:52:21.441"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.190" endtime="20210205 12:52:21.441"></status>
</kw>
<kw name="${postid} = 67" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:21.442" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:21.442" endtime="20210205 12:52:21.443"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:21.633" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/67 
 path_url=/posts/67 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:21.633" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/67 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4dcb88b7db3d52a807c65eff5c6d5b891612547541; expires=Sun, 07-Mar-21 17:52:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '959', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10a-zdbQphdSEl28vma+RxuMlor5ACo"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7472', 'cf-request-id': '0814ebe2850000e74c7e09d000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=AMCseNsn4181tJHxDn5M3VTspGL0C%2BVclYSDtty030Gj9lRieTFH4z9YjlRuAsOY0Q3vtrXj6sratkNsGxsxkvVTBAsjc9s91R8ut7jydngwxqZE6q0zKb5%2F5HWn"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c173de6e74c-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 67,
  "title": "aliquid eos sed fuga est maxime repellendus",
  "body": "reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet\nnon sapiente et consequatur necessitatibus molestiae"
} 
 </msg>
<msg timestamp="20210205 12:52:21.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.443" endtime="20210205 12:52:21.634"></status>
</kw>
<msg timestamp="20210205 12:52:21.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.441" endtime="20210205 12:52:21.634"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:21.637" endtime="20210205 12:52:21.639"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.635" endtime="20210205 12:52:21.639"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.634" endtime="20210205 12:52:21.640"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:21.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.641" endtime="20210205 12:52:21.642"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.640" endtime="20210205 12:52:21.642"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.644" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:21.643" endtime="20210205 12:52:21.644"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.717" level="INFO">${idvalue} = [67]</msg>
<status status="PASS" starttime="20210205 12:52:21.644" endtime="20210205 12:52:21.717"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:21.718" level="INFO">${responseid} = 67</msg>
<status status="PASS" starttime="20210205 12:52:21.717" endtime="20210205 12:52:21.718"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:21.718" endtime="20210205 12:52:21.719"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.720" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:21.719" endtime="20210205 12:52:21.720"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.643" endtime="20210205 12:52:21.720"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.441" endtime="20210205 12:52:21.720"></status>
</kw>
<kw name="${postid} = 68" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:21.722" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:21.722" endtime="20210205 12:52:21.723"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:21.829" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/68 
 path_url=/posts/68 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:21.830" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/68 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da87d643824217cb329956dee7716599f1612547541; expires=Sun, 07-Mar-21 17:52:21 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '941', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ec-n7dxDg5V05y/RJHBgoUuNuvDA5M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7472', 'cf-request-id': '0814ebe39f00003e396f0eb000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=giRFPIFAcHfVkj3lK8y0aTKx%2FQ2se141urJaD7aAwKN8NvFTKjfHYqdNqhZubuDh3mhxpuOfqykrljqZYEJ6VB5nEAuBLhuZCH8dylPR9ihO9iskvU2rx3eaMpnQ"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c18fc7d3e39-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 68,
  "title": "odio quis facere architecto reiciendis optio",
  "body": "magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti quidem saepe porro velit"
} 
 </msg>
<msg timestamp="20210205 12:52:21.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.723" endtime="20210205 12:52:21.830"></status>
</kw>
<msg timestamp="20210205 12:52:21.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.721" endtime="20210205 12:52:21.831"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:21.833" endtime="20210205 12:52:21.836"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.832" endtime="20210205 12:52:21.836"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.831" endtime="20210205 12:52:21.837"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:21.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.838" endtime="20210205 12:52:21.839"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.837" endtime="20210205 12:52:21.839"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.840" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:21.840" endtime="20210205 12:52:21.841"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.908" level="INFO">${idvalue} = [68]</msg>
<status status="PASS" starttime="20210205 12:52:21.841" endtime="20210205 12:52:21.908"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:21.909" level="INFO">${responseid} = 68</msg>
<status status="PASS" starttime="20210205 12:52:21.908" endtime="20210205 12:52:21.909"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:21.909" endtime="20210205 12:52:21.909"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.910" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:21.909" endtime="20210205 12:52:21.910"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.839" endtime="20210205 12:52:21.910"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.720" endtime="20210205 12:52:21.910"></status>
</kw>
<kw name="${postid} = 69" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:21.911" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:21.911" endtime="20210205 12:52:21.912"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:21.969" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/69 
 path_url=/posts/69 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:21.969" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/69 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8fe95e8a4323bddb43cb060a8108d1081612547542; expires=Sun, 07-Mar-21 17:52:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '939', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"137-6SkfkEH2vZX2tDrUhH6X9K8msxE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7473', 'cf-request-id': '0814ebe45500003dba1698f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=WkRiFkJ9VaeEagjsILtDndLhMscbmL2G%2B0Af28nwJAF6%2BBH%2F1RvEwrmr6nBMRP%2FZaBFufQHyzVwpmncqid8s%2FFeeQnX%2BEshKRBgKpqQ6EQy73Yv7JtEGeuAS7%2Bi4"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c1a2cba3dba-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 69,
  "title": "fugiat quod pariatur odit minima",
  "body": "officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\nsequi commodi repudiandae asperiores et saepe a"
} 
 </msg>
<msg timestamp="20210205 12:52:21.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.912" endtime="20210205 12:52:21.970"></status>
</kw>
<msg timestamp="20210205 12:52:21.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.910" endtime="20210205 12:52:21.970"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:21.972" endtime="20210205 12:52:21.975"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.971" endtime="20210205 12:52:21.975"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.971" endtime="20210205 12:52:21.975"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:21.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:21.977" endtime="20210205 12:52:21.977"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.976" endtime="20210205 12:52:21.978"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:21.979" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:21.979" endtime="20210205 12:52:21.979"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.052" level="INFO">${idvalue} = [69]</msg>
<status status="PASS" starttime="20210205 12:52:21.979" endtime="20210205 12:52:22.052"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:22.053" level="INFO">${responseid} = 69</msg>
<status status="PASS" starttime="20210205 12:52:22.053" endtime="20210205 12:52:22.053"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:22.054" endtime="20210205 12:52:22.054"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.055" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:22.055" endtime="20210205 12:52:22.055"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.978" endtime="20210205 12:52:22.055"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:21.910" endtime="20210205 12:52:22.056"></status>
</kw>
<kw name="${postid} = 70" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:22.058" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:22.057" endtime="20210205 12:52:22.058"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:22.220" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/70 
 path_url=/posts/70 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:22.221" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/70 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d35b2a634267e9d7afe7bf94baf1551b21612547542; expires=Sun, 07-Mar-21 17:52:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '954', 'X-Ratelimit-Reset': '1612465063', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d4-rM/RXlmI+ICK+LslODlpNGE3yUw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7473', 'cf-request-id': '0814ebe5580000e708c53ff000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=UUW3raxyQDIFRseieYyfE5ApwnNCF755KHt3N3jPIDBsOrAj6lJ8hruAMo1oCmULgz2YtzcU4gTDsl1v%2Fa0fcHws6t6G3R2kq%2FMdvaCXXRV4%2FElRPo40D%2FQV%2Bh71"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c1bc981e708-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 70,
  "title": "voluptatem laborum magni",
  "body": "sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore"
} 
 </msg>
<msg timestamp="20210205 12:52:22.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.059" endtime="20210205 12:52:22.221"></status>
</kw>
<msg timestamp="20210205 12:52:22.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.056" endtime="20210205 12:52:22.222"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:22.224" endtime="20210205 12:52:22.227"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.223" endtime="20210205 12:52:22.227"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.222" endtime="20210205 12:52:22.228"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:22.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.229" endtime="20210205 12:52:22.230"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.228" endtime="20210205 12:52:22.230"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.231" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:22.231" endtime="20210205 12:52:22.231"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.301" level="INFO">${idvalue} = [70]</msg>
<status status="PASS" starttime="20210205 12:52:22.232" endtime="20210205 12:52:22.301"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:22.302" level="INFO">${responseid} = 70</msg>
<status status="PASS" starttime="20210205 12:52:22.301" endtime="20210205 12:52:22.302"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:22.302" endtime="20210205 12:52:22.303"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.303" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:22.303" endtime="20210205 12:52:22.303"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.230" endtime="20210205 12:52:22.304"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.056" endtime="20210205 12:52:22.304"></status>
</kw>
<kw name="${postid} = 71" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:22.306" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:22.305" endtime="20210205 12:52:22.306"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:22.463" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/71 
 path_url=/posts/71 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:22.463" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/71 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da7037df53d788d9a7b4f9c0a695592641612547542; expires=Sun, 07-Mar-21 17:52:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '938', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e8-Yh7j20Q0i9NFG2BtR9OGdKEdmek"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7473', 'cf-request-id': '0814ebe64b0000e6c87e204000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=x69I3IktJKNFzgm%2FMR30P6kXo9m6xJPGmB7hyZxmXHCGaLIWI4GrmpNOoBXgkH3L2LBASdXG54UND%2F8HCCtZ%2B9qsDmcxHbd5lP1I8MBtDcli2mVI938c3I7D42Jm"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c1d4d3ce6c8-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 71,
  "title": "et iusto veniam et illum aut fuga",
  "body": "occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim velit est perferendis"
} 
 </msg>
<msg timestamp="20210205 12:52:22.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.306" endtime="20210205 12:52:22.464"></status>
</kw>
<msg timestamp="20210205 12:52:22.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.304" endtime="20210205 12:52:22.464"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:22.467" endtime="20210205 12:52:22.470"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.465" endtime="20210205 12:52:22.470"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.465" endtime="20210205 12:52:22.470"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:22.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.471" endtime="20210205 12:52:22.472"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.470" endtime="20210205 12:52:22.472"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.474" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:22.473" endtime="20210205 12:52:22.474"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.543" level="INFO">${idvalue} = [71]</msg>
<status status="PASS" starttime="20210205 12:52:22.474" endtime="20210205 12:52:22.544"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:22.545" level="INFO">${responseid} = 71</msg>
<status status="PASS" starttime="20210205 12:52:22.544" endtime="20210205 12:52:22.545"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:22.545" endtime="20210205 12:52:22.545"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.546" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:22.546" endtime="20210205 12:52:22.546"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.472" endtime="20210205 12:52:22.546"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.304" endtime="20210205 12:52:22.546"></status>
</kw>
<kw name="${postid} = 72" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:22.548" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:22.548" endtime="20210205 12:52:22.549"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:22.709" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/72 
 path_url=/posts/72 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:22.709" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/72 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d558f5c4b0148755021a9e2c2572098ee1612547542; expires=Sun, 07-Mar-21 17:52:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '935', 'X-Ratelimit-Reset': '1612110657', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"116-H6k0vQJtj/XCaxWK+1+y9a8ry70"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7473', 'cf-request-id': '0814ebe742000015b3a9893000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=3UD3kbzQkvld5UEG7ZdJClfQ2y5iCmkHi2iDtKMvPPCcWKsc92g8uq4seUIomnHS3H%2BW8%2BHdY14COy71ribrRmPA5xZBPDSY0c2FsySCqNehWs9fHEKaRXZRAuaI"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c1edc1a15b3-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 72,
  "title": "sint hic doloribus consequatur eos non id",
  "body": "quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque id sunt ut aut accusamus\nsunt consectetur expedita inventore velit"
} 
 </msg>
<msg timestamp="20210205 12:52:22.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.549" endtime="20210205 12:52:22.710"></status>
</kw>
<msg timestamp="20210205 12:52:22.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.547" endtime="20210205 12:52:22.711"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:22.713" endtime="20210205 12:52:22.716"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.712" endtime="20210205 12:52:22.716"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.711" endtime="20210205 12:52:22.717"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:22.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.718" endtime="20210205 12:52:22.719"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.717" endtime="20210205 12:52:22.719"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.720" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:22.720" endtime="20210205 12:52:22.720"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.791" level="INFO">${idvalue} = [72]</msg>
<status status="PASS" starttime="20210205 12:52:22.721" endtime="20210205 12:52:22.791"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:22.792" level="INFO">${responseid} = 72</msg>
<status status="PASS" starttime="20210205 12:52:22.791" endtime="20210205 12:52:22.792"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:22.792" endtime="20210205 12:52:22.793"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.793" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:22.793" endtime="20210205 12:52:22.793"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.719" endtime="20210205 12:52:22.794"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.547" endtime="20210205 12:52:22.794"></status>
</kw>
<kw name="${postid} = 73" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:22.796" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:22.795" endtime="20210205 12:52:22.796"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:22.950" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/73 
 path_url=/posts/73 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:22.950" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/73 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:22 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d448873ba99bb6d6611ec474d4ab3078a1612547542; expires=Sun, 07-Mar-21 17:52:22 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '936', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11f-rOkoGp9hOJP88vceK/3kAJdMgVE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7473', 'cf-request-id': '0814ebe7d000003e52ce9d6000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=bX4EwBam7l20lS4dGHSEjvKTIhfRzFoipFjruZzr1%2FPZGP%2BH8MOMJYLcKyGZF%2BcLna0x6Ny7Lnws17RryhSaDidF7qVy8ulrlQISNblyD68vTwh0FFR2bLPcdVhj"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c1fba5f3e52-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 73,
  "title": "consequuntur deleniti eos quia temporibus ab aliquid at",
  "body": "voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatur\ntempore cumque quae est et\net in consequuntur voluptatem voluptates aut"
} 
 </msg>
<msg timestamp="20210205 12:52:22.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.796" endtime="20210205 12:52:22.951"></status>
</kw>
<msg timestamp="20210205 12:52:22.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.794" endtime="20210205 12:52:22.952"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:22.954" endtime="20210205 12:52:22.957"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.953" endtime="20210205 12:52:22.957"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.952" endtime="20210205 12:52:22.957"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:22.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:22.959" endtime="20210205 12:52:22.959"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.958" endtime="20210205 12:52:22.960"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:22.961" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:22.961" endtime="20210205 12:52:22.961"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.032" level="INFO">${idvalue} = [73]</msg>
<status status="PASS" starttime="20210205 12:52:22.961" endtime="20210205 12:52:23.032"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:23.033" level="INFO">${responseid} = 73</msg>
<status status="PASS" starttime="20210205 12:52:23.032" endtime="20210205 12:52:23.033"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:23.033" endtime="20210205 12:52:23.034"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.034" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:23.034" endtime="20210205 12:52:23.034"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.960" endtime="20210205 12:52:23.035"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:22.794" endtime="20210205 12:52:23.035"></status>
</kw>
<kw name="${postid} = 74" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:23.037" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:23.036" endtime="20210205 12:52:23.037"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:23.097" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/74 
 path_url=/posts/74 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:23.097" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/74 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1442dc4bae28428fbfa2af16fc4733641612547543; expires=Sun, 07-Mar-21 17:52:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612369190', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"128-7qIwxKiVOzrfywOEfThc/blClHw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7474', 'cf-request-id': '0814ebe8be00003de5431c7000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=WvHQUv7rJsvbXWCloyBBcks3NoItK%2FiiOobS8xK76%2Bb87nJClJlzfFv%2BV2b0a2ckhxQgpmo%2F17e93sCJ97ZY%2F4XoqTTUdJeAl2g%2FmwGH8oz9w4mJdhniNXYNFuW5"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c21394f3de5-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 74,
  "title": "enim unde ratione doloribus quas enim ut sit sapiente",
  "body": "odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magnam et quam\nblanditiis est itaque\nquo et tenetur ratione occaecati molestiae tempora"
} 
 </msg>
<msg timestamp="20210205 12:52:23.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.037" endtime="20210205 12:52:23.098"></status>
</kw>
<msg timestamp="20210205 12:52:23.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.035" endtime="20210205 12:52:23.098"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:23.100" endtime="20210205 12:52:23.103"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.099" endtime="20210205 12:52:23.104"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.099" endtime="20210205 12:52:23.104"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:23.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.105" endtime="20210205 12:52:23.106"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.104" endtime="20210205 12:52:23.106"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.108" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:23.107" endtime="20210205 12:52:23.108"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.174" level="INFO">${idvalue} = [74]</msg>
<status status="PASS" starttime="20210205 12:52:23.108" endtime="20210205 12:52:23.175"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:23.176" level="INFO">${responseid} = 74</msg>
<status status="PASS" starttime="20210205 12:52:23.175" endtime="20210205 12:52:23.176"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:23.176" endtime="20210205 12:52:23.177"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.177" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:23.177" endtime="20210205 12:52:23.177"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.106" endtime="20210205 12:52:23.178"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.035" endtime="20210205 12:52:23.178"></status>
</kw>
<kw name="${postid} = 75" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:23.180" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:23.179" endtime="20210205 12:52:23.180"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:23.267" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/75 
 path_url=/posts/75 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:23.267" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/75 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d68dda959bd5bf9fd6b089cde2f8887b91612547543; expires=Sun, 07-Mar-21 17:52:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '931', 'X-Ratelimit-Reset': '1611755940', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"12d-f7+LvQ2H9gp0KtIQ9o5Rm53qeaE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7474', 'cf-request-id': '0814ebe96a0000ccfe00ae0000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=IPmgEGSDRoIx0AdTZVDHdhIUWUsAswriLnVz2SZnZtP564bEqvShSi0jASSXNfnLbTOOReOaRgJnxhFqXqaVJ7eatJSsizVKTob3WxGaCP%2B5n2GwrJ4TF9aK5rgH"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c223c48ccfe-EWR', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 75,
  "title": "dignissimos eum dolor ut enim et delectus in",
  "body": "commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui delectus facilis temporibus\nrerum amet et nemo voluptate expedita adipisci error dolorem"
} 
 </msg>
<msg timestamp="20210205 12:52:23.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.181" endtime="20210205 12:52:23.268"></status>
</kw>
<msg timestamp="20210205 12:52:23.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.178" endtime="20210205 12:52:23.268"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:23.271" endtime="20210205 12:52:23.273"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.269" endtime="20210205 12:52:23.273"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.268" endtime="20210205 12:52:23.274"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:23.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.275" endtime="20210205 12:52:23.276"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.274" endtime="20210205 12:52:23.276"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.278" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:23.277" endtime="20210205 12:52:23.278"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.351" level="INFO">${idvalue} = [75]</msg>
<status status="PASS" starttime="20210205 12:52:23.278" endtime="20210205 12:52:23.351"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:23.352" level="INFO">${responseid} = 75</msg>
<status status="PASS" starttime="20210205 12:52:23.351" endtime="20210205 12:52:23.352"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:23.352" endtime="20210205 12:52:23.353"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.353" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:23.353" endtime="20210205 12:52:23.353"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.276" endtime="20210205 12:52:23.354"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.178" endtime="20210205 12:52:23.354"></status>
</kw>
<kw name="${postid} = 76" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:23.355" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:23.355" endtime="20210205 12:52:23.356"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:23.514" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/76 
 path_url=/posts/76 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:23.514" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/76 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=daa023698b7b952473cc5dfee677af5a01612547543; expires=Sun, 07-Mar-21 17:52:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '934', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"cc-u0/g+lWkxIsGyIKpelypYLpuJj8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebea6600003824b91ad000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=lQ5oMlrtx52hY6C0ZkWDmjB6OprkFXu%2FP2DSi1yn%2FsD9D0vvwr4PdFabf9sL9BCjIPGmfHxMhpArBbiWXDY3Xa8FoXrZ9k9%2BHo1wehpyDZDzn08l25Gr7APXpudf"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c23dc963824-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 76,
  "title": "doloremque officiis ad et non perferendis",
  "body": "ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio"
} 
 </msg>
<msg timestamp="20210205 12:52:23.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.356" endtime="20210205 12:52:23.515"></status>
</kw>
<msg timestamp="20210205 12:52:23.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.354" endtime="20210205 12:52:23.516"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:23.518" endtime="20210205 12:52:23.521"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.517" endtime="20210205 12:52:23.521"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.516" endtime="20210205 12:52:23.521"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:23.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.523" endtime="20210205 12:52:23.523"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.522" endtime="20210205 12:52:23.524"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.525" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:23.525" endtime="20210205 12:52:23.525"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.592" level="INFO">${idvalue} = [76]</msg>
<status status="PASS" starttime="20210205 12:52:23.525" endtime="20210205 12:52:23.592"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:23.593" level="INFO">${responseid} = 76</msg>
<status status="PASS" starttime="20210205 12:52:23.592" endtime="20210205 12:52:23.593"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:23.593" endtime="20210205 12:52:23.594"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.595" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:23.594" endtime="20210205 12:52:23.595"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.524" endtime="20210205 12:52:23.595"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.354" endtime="20210205 12:52:23.595"></status>
</kw>
<kw name="${postid} = 77" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:23.597" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:23.596" endtime="20210205 12:52:23.597"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:23.744" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/77 
 path_url=/posts/77 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:23.744" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/77 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7aa29a12946c9209900ee1a0a5fc17ed1612547543; expires=Sun, 07-Mar-21 17:52:23 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '933', 'x-ratelimit-reset': '1611555792', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"11f-2lbe4Q56bYTg/IcJf6JOSbSCscI"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebeae70000cf3c0838e000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=WYHYOja6BNCF0oHspB6mUKxdkRLRTnCjBWPAyWdn7qc0fTs%2BFEKHdYrT6%2BpIwU5Naq6J38aSSFjnFdPDOaZpXgz2SFr4XCN7buSmskdVSk4BRxBVM6%2F2%2B0K7brRN"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c24ad46cf3c-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 77,
  "title": "necessitatibus quasi exercitationem odio",
  "body": "modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident"
} 
 </msg>
<msg timestamp="20210205 12:52:23.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.598" endtime="20210205 12:52:23.745"></status>
</kw>
<msg timestamp="20210205 12:52:23.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.595" endtime="20210205 12:52:23.745"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:23.747" endtime="20210205 12:52:23.750"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.746" endtime="20210205 12:52:23.750"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.745" endtime="20210205 12:52:23.751"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:23.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.752" endtime="20210205 12:52:23.753"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.751" endtime="20210205 12:52:23.753"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.754" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:23.754" endtime="20210205 12:52:23.754"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.825" level="INFO">${idvalue} = [77]</msg>
<status status="PASS" starttime="20210205 12:52:23.755" endtime="20210205 12:52:23.825"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:23.826" level="INFO">${responseid} = 77</msg>
<status status="PASS" starttime="20210205 12:52:23.825" endtime="20210205 12:52:23.826"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:23.826" endtime="20210205 12:52:23.827"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:23.828" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:23.827" endtime="20210205 12:52:23.828"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.753" endtime="20210205 12:52:23.828"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.595" endtime="20210205 12:52:23.828"></status>
</kw>
<kw name="${postid} = 78" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:23.830" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:23.830" endtime="20210205 12:52:23.831"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:24.008" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/78 
 path_url=/posts/78 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:24.008" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/78 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db58d1a529258ede1b1c620d6758096ee1612547544; expires=Sun, 07-Mar-21 17:52:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '934', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d3-xKs0MgAtIORio5QR/VxM9bC/XYc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebebd40000e0b290205000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=GUXR7b7beYZcUzEbmm7iCq0VAf6UPUBYhfms1wWLDJGhRHoXOWeKE7O62jSgOm62gJuSeWewXNrOA7a%2BYEaOJ6NdqNHyRUh9c2UpfXol51VyTfsFmmeGw9rxTHEl"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c261d7ee0b2-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 78,
  "title": "quam voluptatibus rerum veritatis",
  "body": "nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus"
} 
 </msg>
<msg timestamp="20210205 12:52:24.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.831" endtime="20210205 12:52:24.009"></status>
</kw>
<msg timestamp="20210205 12:52:24.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:23.829" endtime="20210205 12:52:24.009"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:24.012" endtime="20210205 12:52:24.015"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.010" endtime="20210205 12:52:24.015"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.010" endtime="20210205 12:52:24.015"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:24.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.017" endtime="20210205 12:52:24.017"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.016" endtime="20210205 12:52:24.018"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.019" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:24.019" endtime="20210205 12:52:24.019"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.090" level="INFO">${idvalue} = [78]</msg>
<status status="PASS" starttime="20210205 12:52:24.019" endtime="20210205 12:52:24.090"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:24.091" level="INFO">${responseid} = 78</msg>
<status status="PASS" starttime="20210205 12:52:24.090" endtime="20210205 12:52:24.091"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:24.091" endtime="20210205 12:52:24.092"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.092" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:24.092" endtime="20210205 12:52:24.092"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.018" endtime="20210205 12:52:24.093"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:23.829" endtime="20210205 12:52:24.093"></status>
</kw>
<kw name="${postid} = 79" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:24.095" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:24.095" endtime="20210205 12:52:24.096"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:24.149" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/79 
 path_url=/posts/79 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:24.149" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/79 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da94b902c8b3c677059e38b2928970c7a1612547544; expires=Sun, 07-Mar-21 17:52:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '932', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"110-2pubCm1Sfl7Y7qFtirsYZCcorgA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebecda000025683792a000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2FHRrdaPfAWRQTjVBG6AAivcEaUsDZmbAsaxt81har01QuvmZ%2FzS2cpCs%2BNlUTReTH%2BbXvvHKfRsJWYjKTJh9juGwIrotF7e8ZNshbjMm7iEQOAlQ%2F1%2FTVdMCDSxi"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c27b8592568-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 79,
  "title": "pariatur consequatur quia magnam autem omnis non amet",
  "body": "libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam molestiae ducimus est\nofficiis esse molestiae iste et quos"
} 
 </msg>
<msg timestamp="20210205 12:52:24.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.096" endtime="20210205 12:52:24.150"></status>
</kw>
<msg timestamp="20210205 12:52:24.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.093" endtime="20210205 12:52:24.150"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:24.153" endtime="20210205 12:52:24.156"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.152" endtime="20210205 12:52:24.156"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.151" endtime="20210205 12:52:24.156"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:24.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.158" endtime="20210205 12:52:24.158"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.156" endtime="20210205 12:52:24.158"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.160" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:24.159" endtime="20210205 12:52:24.160"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.222" level="INFO">${idvalue} = [79]</msg>
<status status="PASS" starttime="20210205 12:52:24.160" endtime="20210205 12:52:24.222"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:24.223" level="INFO">${responseid} = 79</msg>
<status status="PASS" starttime="20210205 12:52:24.222" endtime="20210205 12:52:24.223"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:24.223" endtime="20210205 12:52:24.223"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.224" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:24.223" endtime="20210205 12:52:24.224"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.159" endtime="20210205 12:52:24.224"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.093" endtime="20210205 12:52:24.224"></status>
</kw>
<kw name="${postid} = 80" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:24.225" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:24.225" endtime="20210205 12:52:24.225"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:24.318" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/80 
 path_url=/posts/80 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:24.318" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/80 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d772e73f18e3d5989f470f945943be9871612547544; expires=Sun, 07-Mar-21 17:52:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '932', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11c-0HY/hHFa5y+uiyBfjGo3n4UDzu8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebed800000e0da96006000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ulM0kWCMZXz9bmBkertox%2BrVnjMYxVnQ8QDBfe9BAqTQSjaTj9mcAgs2g4CUEWTKV5Aijo%2F78G1hGApPlJhsAQV4o6uUQv9QUTdXR5C5%2Bpav5HIsljRWojHNo8QU"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c28ca94e0da-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 80,
  "title": "labore in ex et explicabo corporis aut quas",
  "body": "ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias provident\nminus incidunt vero fugit rerum sint sunt excepturi provident"
} 
 </msg>
<msg timestamp="20210205 12:52:24.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.225" endtime="20210205 12:52:24.319"></status>
</kw>
<msg timestamp="20210205 12:52:24.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.224" endtime="20210205 12:52:24.319"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:24.322" endtime="20210205 12:52:24.325"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.321" endtime="20210205 12:52:24.325"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.320" endtime="20210205 12:52:24.325"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:24.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.326" endtime="20210205 12:52:24.327"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.325" endtime="20210205 12:52:24.327"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.329" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:24.329" endtime="20210205 12:52:24.329"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.440" level="INFO">${idvalue} = [80]</msg>
<status status="PASS" starttime="20210205 12:52:24.329" endtime="20210205 12:52:24.440"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:24.441" level="INFO">${responseid} = 80</msg>
<status status="PASS" starttime="20210205 12:52:24.440" endtime="20210205 12:52:24.441"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:24.441" endtime="20210205 12:52:24.441"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.442" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:24.441" endtime="20210205 12:52:24.442"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.328" endtime="20210205 12:52:24.442"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.224" endtime="20210205 12:52:24.442"></status>
</kw>
<kw name="${postid} = 81" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:24.443" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:24.443" endtime="20210205 12:52:24.443"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:24.579" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/81 
 path_url=/posts/81 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:24.579" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/81 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db7591d1aad7338321a77bf2d8b6aefb61612547544; expires=Sun, 07-Mar-21 17:52:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '926', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"132-WQvU4RaGGtekXO5F/gjY3m5r2rE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebee89000073cdf93c7000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=FXsdhC6pefZoO1ePlomEJ6F2xhVBHIhXyiQG3HP2WkxNBcnwlMqtG8Sn3NFYtv7A9LJ7nAcuRNx1BK%2FY5Pb8wULvZp8aAyV4uwvpNYP8140heU6yuk4GqAhAligN"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c2a791373cd-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 81,
  "title": "tempora rem veritatis voluptas quo dolores vero",
  "body": "facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum non ratione velit laboriosam quis consequuntur\nex officiis minima doloremque voluptas ut aut"
} 
 </msg>
<msg timestamp="20210205 12:52:24.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.444" endtime="20210205 12:52:24.580"></status>
</kw>
<msg timestamp="20210205 12:52:24.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.442" endtime="20210205 12:52:24.580"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:24.583" endtime="20210205 12:52:24.586"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.582" endtime="20210205 12:52:24.586"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.581" endtime="20210205 12:52:24.586"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:24.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.587" endtime="20210205 12:52:24.588"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.586" endtime="20210205 12:52:24.588"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.590" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:24.589" endtime="20210205 12:52:24.590"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.648" level="INFO">${idvalue} = [81]</msg>
<status status="PASS" starttime="20210205 12:52:24.590" endtime="20210205 12:52:24.648"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:24.649" level="INFO">${responseid} = 81</msg>
<status status="PASS" starttime="20210205 12:52:24.648" endtime="20210205 12:52:24.649"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:24.649" endtime="20210205 12:52:24.649"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.650" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:24.649" endtime="20210205 12:52:24.650"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.588" endtime="20210205 12:52:24.650"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.442" endtime="20210205 12:52:24.650"></status>
</kw>
<kw name="${postid} = 82" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:24.651" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:24.651" endtime="20210205 12:52:24.652"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:24.803" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/82 
 path_url=/posts/82 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:24.803" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/82 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:24 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5273000d66082e21bc6d50ff01cc8ff41612547544; expires=Sun, 07-Mar-21 17:52:24 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '929', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11c-eeFdAk1e1gEi8uyXsudyKBm1kV0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14097', 'cf-request-id': '0814ebef0400002a573b877000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=jpbKoFGblqs%2BpENZ6mms6L7PwEGr6GOzbGlevmYvwmNMtZDj1fb0n4pCo9Fiiu18xvOvw9J5YM0pG34prVxKqv21x%2FcWnqiEG3n5OfzVWyhT0TQhkSIXNt1XaF%2BG"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c2b3d502a57-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 82,
  "title": "laudantium voluptate suscipit sunt enim enim",
  "body": "ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus adipisci\ndolor enim assumenda soluta laboriosam amet iste delectus hic"
} 
 </msg>
<msg timestamp="20210205 12:52:24.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.652" endtime="20210205 12:52:24.804"></status>
</kw>
<msg timestamp="20210205 12:52:24.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.650" endtime="20210205 12:52:24.804"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:24.807" endtime="20210205 12:52:24.810"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.806" endtime="20210205 12:52:24.810"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.805" endtime="20210205 12:52:24.810"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:24.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.812" endtime="20210205 12:52:24.813"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.811" endtime="20210205 12:52:24.813"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.814" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:24.814" endtime="20210205 12:52:24.814"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.881" level="INFO">${idvalue} = [82]</msg>
<status status="PASS" starttime="20210205 12:52:24.815" endtime="20210205 12:52:24.881"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:24.882" level="INFO">${responseid} = 82</msg>
<status status="PASS" starttime="20210205 12:52:24.882" endtime="20210205 12:52:24.883"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:24.883" endtime="20210205 12:52:24.883"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.884" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:24.884" endtime="20210205 12:52:24.884"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.813" endtime="20210205 12:52:24.884"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.650" endtime="20210205 12:52:24.884"></status>
</kw>
<kw name="${postid} = 83" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:24.886" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:24.886" endtime="20210205 12:52:24.887"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:24.933" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/83 
 path_url=/posts/83 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:24.933" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/83 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d27dfa0346907e92f31f7d01e473757a11612547545; expires=Sun, 07-Mar-21 17:52:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612010777', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11d-e5gcZg196MbfLRv+N5/t/INg4U4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebefef0000f0dd0614b000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=i%2FZdVG%2FrjiZT21yUjkrb2MqNayg80VrDFo99FZV4bJWEDIZ%2FVs13u2RQNx67JCAM%2BD5J7nR4GoqKdxqx2jSqNDUsHUxst9XS522OS%2FLYqnetgdBRVqld4dxOANLE"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c2cabe4f0dd-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 83,
  "title": "odit et voluptates doloribus alias odio et",
  "body": "est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\nreprehenderit eius rem quibusdam"
} 
 </msg>
<msg timestamp="20210205 12:52:24.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.887" endtime="20210205 12:52:24.934"></status>
</kw>
<msg timestamp="20210205 12:52:24.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.885" endtime="20210205 12:52:24.934"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:24.937" endtime="20210205 12:52:24.940"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.936" endtime="20210205 12:52:24.940"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.935" endtime="20210205 12:52:24.940"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:24.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:24.942" endtime="20210205 12:52:24.942"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.941" endtime="20210205 12:52:24.943"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:24.944" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:24.944" endtime="20210205 12:52:24.944"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.003" level="INFO">${idvalue} = [83]</msg>
<status status="PASS" starttime="20210205 12:52:24.944" endtime="20210205 12:52:25.003"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:25.004" level="INFO">${responseid} = 83</msg>
<status status="PASS" starttime="20210205 12:52:25.004" endtime="20210205 12:52:25.004"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:25.004" endtime="20210205 12:52:25.005"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.005" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:25.005" endtime="20210205 12:52:25.006"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.943" endtime="20210205 12:52:25.006"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:24.885" endtime="20210205 12:52:25.006"></status>
</kw>
<kw name="${postid} = 84" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:25.007" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:25.007" endtime="20210205 12:52:25.008"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:25.108" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/84 
 path_url=/posts/84 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:25.108" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/84 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df57a47c73cdf3f50d9c1ee05e4f513e11612547545; expires=Sun, 07-Mar-21 17:52:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '927', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10f-9j78zFP2xPokwlOnDdjXgjDNtRw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebf09f00002751bb9e0000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=T%2FbTdMokXIL5O0OENqEidR4H4l12O01KSbbs9LFS2PScLthNmd3fBcqvTYfkLhTT3z2OO4reIllda2CB3wNTwElSw2Dvyk1WOGGLK%2BbjLY4%2ByvOS9QVuOkmTecwY"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c2dccf22751-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 84,
  "title": "optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut",
  "body": "sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique veniam\nrecusandae dignissimos dolor incidunt consequatur odio"
} 
 </msg>
<msg timestamp="20210205 12:52:25.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.008" endtime="20210205 12:52:25.109"></status>
</kw>
<msg timestamp="20210205 12:52:25.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.006" endtime="20210205 12:52:25.109"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:25.112" endtime="20210205 12:52:25.115"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.111" endtime="20210205 12:52:25.115"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.110" endtime="20210205 12:52:25.115"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:25.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.117" endtime="20210205 12:52:25.117"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.116" endtime="20210205 12:52:25.118"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.119" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:25.119" endtime="20210205 12:52:25.119"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.190" level="INFO">${idvalue} = [84]</msg>
<status status="PASS" starttime="20210205 12:52:25.120" endtime="20210205 12:52:25.190"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:25.192" level="INFO">${responseid} = 84</msg>
<status status="PASS" starttime="20210205 12:52:25.191" endtime="20210205 12:52:25.192"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:25.192" endtime="20210205 12:52:25.193"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.193" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:25.193" endtime="20210205 12:52:25.193"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.118" endtime="20210205 12:52:25.194"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.006" endtime="20210205 12:52:25.194"></status>
</kw>
<kw name="${postid} = 85" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:25.195" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:25.195" endtime="20210205 12:52:25.196"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:25.359" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/85 
 path_url=/posts/85 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:25.359" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/85 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0c12d15dc44239f587986e886ce7cd841612547545; expires=Sun, 07-Mar-21 17:52:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '926', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-EiZY//e3eHc6o7YCr0c2BxbG4NU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebf199000073c9beaa0000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=nunoRE%2FTgIANSa15VGC6JV4sRzxLfbUFKLkXHOO94hz7F%2FfJvwaUnNomEYPJ%2FbeinFc%2FiQjG%2B4H6lmQH1irC2rzttPNgGrBeSyhL6whUMAQYSY4dlkEEJUX2HztY"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c2f5ea873c9-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 85,
  "title": "dolore veritatis porro provident adipisci blanditiis et sunt",
  "body": "similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam sint sed tempora\nenim provident pariatur praesentium atque animi amet ratione"
} 
 </msg>
<msg timestamp="20210205 12:52:25.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.196" endtime="20210205 12:52:25.360"></status>
</kw>
<msg timestamp="20210205 12:52:25.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.194" endtime="20210205 12:52:25.360"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:25.363" endtime="20210205 12:52:25.366"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.361" endtime="20210205 12:52:25.366"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.361" endtime="20210205 12:52:25.366"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:25.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.368" endtime="20210205 12:52:25.368"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.366" endtime="20210205 12:52:25.369"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.370" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:25.370" endtime="20210205 12:52:25.370"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.438" level="INFO">${idvalue} = [85]</msg>
<status status="PASS" starttime="20210205 12:52:25.370" endtime="20210205 12:52:25.438"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:25.439" level="INFO">${responseid} = 85</msg>
<status status="PASS" starttime="20210205 12:52:25.438" endtime="20210205 12:52:25.439"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:25.439" endtime="20210205 12:52:25.440"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.440" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:25.440" endtime="20210205 12:52:25.440"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.369" endtime="20210205 12:52:25.441"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.194" endtime="20210205 12:52:25.441"></status>
</kw>
<kw name="${postid} = 86" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:25.443" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:25.442" endtime="20210205 12:52:25.443"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:25.598" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/86 
 path_url=/posts/86 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:25.598" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/86 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9dfe8f1418e1d8447373065935625e991612547545; expires=Sun, 07-Mar-21 17:52:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '925', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"102-z1kgT9P52YzKL5Lr1auwY9AtvAY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebf2200000cf304b1d5000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=aavwT00Pze1iKCU5ZK%2BMx%2FU%2BmO%2FgSz9Vm1zjcOnj%2F%2F600TYrw4zhfvFWXAKoP%2FN36Oo8uMJt9At9OO3ZcAaQ0xFckYIcgUHhRRJ%2BaS77Cd4lY7s%2BLD2bxrQmdkJI"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c302d86cf30-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 86,
  "title": "placeat quia et porro iste",
  "body": "quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel explicabo autem\nasperiores pariatur deserunt optio"
} 
 </msg>
<msg timestamp="20210205 12:52:25.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.443" endtime="20210205 12:52:25.599"></status>
</kw>
<msg timestamp="20210205 12:52:25.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.441" endtime="20210205 12:52:25.599"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:25.602" endtime="20210205 12:52:25.606"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.601" endtime="20210205 12:52:25.606"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.600" endtime="20210205 12:52:25.607"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:25.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.608" endtime="20210205 12:52:25.609"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.607" endtime="20210205 12:52:25.609"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.610" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:25.610" endtime="20210205 12:52:25.611"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.681" level="INFO">${idvalue} = [86]</msg>
<status status="PASS" starttime="20210205 12:52:25.611" endtime="20210205 12:52:25.681"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:25.682" level="INFO">${responseid} = 86</msg>
<status status="PASS" starttime="20210205 12:52:25.681" endtime="20210205 12:52:25.682"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:25.683" endtime="20210205 12:52:25.683"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.684" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:25.684" endtime="20210205 12:52:25.684"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.609" endtime="20210205 12:52:25.685"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.441" endtime="20210205 12:52:25.685"></status>
</kw>
<kw name="${postid} = 87" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:25.687" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:25.686" endtime="20210205 12:52:25.687"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:25.862" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/87 
 path_url=/posts/87 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:25.863" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/87 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:25 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8bac7c72eae268b308a8ebffecab62c51612547545; expires=Sun, 07-Mar-21 17:52:25 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '924', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"c1-StXbFLxw6d815/mITyDVkJUK2xI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14097', 'cf-request-id': '0814ebf3180000cf5ce616e000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mHFZ4oSv8l13LhxKXwq1L6kyf%2F5DgyhMK2CZk4WfraAPgNdHLNSl92r2eID462zO937oQMXQVLzu2iis8SuRR%2BVbJ6e5dWfxoT3Tts0Mva4h9fy7W0kxYPQjoMkY"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c31be9bcf5c-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 87,
  "title": "nostrum quis quasi placeat",
  "body": "eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est"
} 
 </msg>
<msg timestamp="20210205 12:52:25.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.688" endtime="20210205 12:52:25.863"></status>
</kw>
<msg timestamp="20210205 12:52:25.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.685" endtime="20210205 12:52:25.864"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:25.866" endtime="20210205 12:52:25.869"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.865" endtime="20210205 12:52:25.869"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.864" endtime="20210205 12:52:25.870"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:25.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.871" endtime="20210205 12:52:25.872"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.870" endtime="20210205 12:52:25.872"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.873" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:25.873" endtime="20210205 12:52:25.874"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.938" level="INFO">${idvalue} = [87]</msg>
<status status="PASS" starttime="20210205 12:52:25.874" endtime="20210205 12:52:25.939"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:25.940" level="INFO">${responseid} = 87</msg>
<status status="PASS" starttime="20210205 12:52:25.939" endtime="20210205 12:52:25.940"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:25.940" endtime="20210205 12:52:25.941"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:25.941" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:25.941" endtime="20210205 12:52:25.942"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.872" endtime="20210205 12:52:25.942"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.685" endtime="20210205 12:52:25.942"></status>
</kw>
<kw name="${postid} = 88" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:25.944" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:25.944" endtime="20210205 12:52:25.945"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:25.991" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/88 
 path_url=/posts/88 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:25.991" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/88 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9ab17efbf7299122584aab5f783c96941612547546; expires=Sun, 07-Mar-21 17:52:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '924', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"bf-99RNmrovk8IKMxPgFxxzF7hL4oc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebf41300002ae0903ee000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=TQ7mz10kmO8yoAhTqhOtMtjGv6j4%2Fsf7AYJhENupLK9yvFwICLcyoO7rr4D8Ks8pEFQvr0EdERdMH60lY%2BDL2C1U5EJ%2FzPRgtGlfYMsC1RRMNiTze8oHJ30PIuUU"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c335ad12ae0-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 88,
  "title": "sapiente omnis fugit eos",
  "body": "consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed"
} 
 </msg>
<msg timestamp="20210205 12:52:25.991" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.945" endtime="20210205 12:52:25.991"></status>
</kw>
<msg timestamp="20210205 12:52:25.992" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.943" endtime="20210205 12:52:25.992"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:25.994" endtime="20210205 12:52:25.997"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.993" endtime="20210205 12:52:25.998"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.992" endtime="20210205 12:52:25.998"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:25.999" endtime="20210205 12:52:26.000"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.998" endtime="20210205 12:52:26.000"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.002" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.001" endtime="20210205 12:52:26.002"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.070" level="INFO">${idvalue} = [88]</msg>
<status status="PASS" starttime="20210205 12:52:26.002" endtime="20210205 12:52:26.070"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:26.071" level="INFO">${responseid} = 88</msg>
<status status="PASS" starttime="20210205 12:52:26.070" endtime="20210205 12:52:26.071"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:26.072" endtime="20210205 12:52:26.073"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.073" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.073" endtime="20210205 12:52:26.073"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.000" endtime="20210205 12:52:26.074"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:25.942" endtime="20210205 12:52:26.074"></status>
</kw>
<kw name="${postid} = 89" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.076" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:26.075" endtime="20210205 12:52:26.076"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:26.178" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/89 
 path_url=/posts/89 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:26.178" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/89 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da2aa64c04bdf063a3a7336bccbdd4a6f1612547546; expires=Sun, 07-Mar-21 17:52:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '918', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-AJIAh/kcPdTbwy1rCjIlUhHPTtE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebf4c400000337b29b5000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=oNTdNHH7RFrjm%2FYNkMRhuf%2BInck5M3pI33T43CUxEXu5yqJ3cgSnChNa4F0hqYcE0PRKe7WHbd2juyD2ems6rSxG0icaD5k0b%2FoQySXUbzjGIJQuqAhQOcyEeaPX"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c346b880337-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 89,
  "title": "sint soluta et vel magnam aut ut sed qui",
  "body": "repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\ntempore quas est"
} 
 </msg>
<msg timestamp="20210205 12:52:26.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.076" endtime="20210205 12:52:26.179"></status>
</kw>
<msg timestamp="20210205 12:52:26.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.074" endtime="20210205 12:52:26.179"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:26.182" endtime="20210205 12:52:26.185"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.180" endtime="20210205 12:52:26.185"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.180" endtime="20210205 12:52:26.185"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.187" endtime="20210205 12:52:26.187"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.186" endtime="20210205 12:52:26.188"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.189" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.189" endtime="20210205 12:52:26.189"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.259" level="INFO">${idvalue} = [89]</msg>
<status status="PASS" starttime="20210205 12:52:26.189" endtime="20210205 12:52:26.259"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:26.260" level="INFO">${responseid} = 89</msg>
<status status="PASS" starttime="20210205 12:52:26.260" endtime="20210205 12:52:26.260"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:26.261" endtime="20210205 12:52:26.261"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.262" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.262" endtime="20210205 12:52:26.262"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.188" endtime="20210205 12:52:26.262"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.074" endtime="20210205 12:52:26.262"></status>
</kw>
<kw name="${postid} = 90" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.264" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:26.264" endtime="20210205 12:52:26.265"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:26.324" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/90 
 path_url=/posts/90 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:26.324" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/90 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d40541a5ab6fa40aeff75767d0c6647851612547546; expires=Sun, 07-Mar-21 17:52:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '921', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fa-J+W5iw5qyzTS6afRH4pq7cvG7wg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebf5550000ea49d0a3e000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=vgWyU%2BILMtiGW64M6tAcfEhmjypg5k71N4hid6bIsmRZ11YYxRfjmwGDqNduZAw88Tly4BOto7Vs%2B9P6ka6yIGuiABxWgvA95IGEIWapTGgPXAVrJXhxRBlrGCvV"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c35582eea49-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 90,
  "title": "ad iusto omnis odit dolor voluptatibus",
  "body": "minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta similique molestias praesentium blanditiis"
} 
 </msg>
<msg timestamp="20210205 12:52:26.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.265" endtime="20210205 12:52:26.325"></status>
</kw>
<msg timestamp="20210205 12:52:26.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.263" endtime="20210205 12:52:26.326"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:26.328" endtime="20210205 12:52:26.331"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.327" endtime="20210205 12:52:26.332"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.326" endtime="20210205 12:52:26.332"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.333" endtime="20210205 12:52:26.334"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.332" endtime="20210205 12:52:26.334"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.336" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.336" endtime="20210205 12:52:26.336"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.403" level="INFO">${idvalue} = [90]</msg>
<status status="PASS" starttime="20210205 12:52:26.336" endtime="20210205 12:52:26.403"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:26.404" level="INFO">${responseid} = 90</msg>
<status status="PASS" starttime="20210205 12:52:26.404" endtime="20210205 12:52:26.404"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:26.404" endtime="20210205 12:52:26.405"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.405" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.405" endtime="20210205 12:52:26.405"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.335" endtime="20210205 12:52:26.405"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.263" endtime="20210205 12:52:26.405"></status>
</kw>
<kw name="${postid} = 91" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.407" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:26.406" endtime="20210205 12:52:26.407"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:26.453" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/91 
 path_url=/posts/91 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:26.454" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/91 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d88f0758c1ad5464e61fcf5ea1adf5f6e1612547546; expires=Sun, 07-Mar-21 17:52:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '929', 'X-Ratelimit-Reset': '1611283708', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e5-l9aQa2/gJFY5FFG1O9x9F+UJRfA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebf5dc000029a3ca89c000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=4c5ex%2F812kqLX7zZQBE90WaQ2%2BMvh8XwB9ossOa2Hj1BO5byeBgGgI8F%2B9lTq4xxRnvBl6R0xbZtLG%2F4TNTvFF%2F8NFqBc9C0eUvkYC2vl2nEM%2BcbcCs6k2paVlH1"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c36291b29a3-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 91,
  "title": "aut amet sed",
  "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
} 
 </msg>
<msg timestamp="20210205 12:52:26.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.407" endtime="20210205 12:52:26.454"></status>
</kw>
<msg timestamp="20210205 12:52:26.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.406" endtime="20210205 12:52:26.455"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:26.458" endtime="20210205 12:52:26.461"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.456" endtime="20210205 12:52:26.461"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.455" endtime="20210205 12:52:26.462"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.464" endtime="20210205 12:52:26.464"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.462" endtime="20210205 12:52:26.465"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.466" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.466" endtime="20210205 12:52:26.466"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.533" level="INFO">${idvalue} = [91]</msg>
<status status="PASS" starttime="20210205 12:52:26.466" endtime="20210205 12:52:26.533"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:26.534" level="INFO">${responseid} = 91</msg>
<status status="PASS" starttime="20210205 12:52:26.533" endtime="20210205 12:52:26.534"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:26.534" endtime="20210205 12:52:26.535"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.536" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.535" endtime="20210205 12:52:26.536"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.465" endtime="20210205 12:52:26.536"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.405" endtime="20210205 12:52:26.536"></status>
</kw>
<kw name="${postid} = 92" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.538" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:26.538" endtime="20210205 12:52:26.539"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:26.672" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/92 
 path_url=/posts/92 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:26.672" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/92 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d61b4a46711934bc63cf9fa199cf59cd11612547546; expires=Sun, 07-Mar-21 17:52:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '920', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e3-XfDSGc/SGdffvPSz0KEalY/lSfk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14097', 'cf-request-id': '0814ebf6650000c1cf71a38000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2B48TDXrsW1NBwndM0Om2fDH7QHFottLEogZ4U%2FcJtcDpFhQgBOI3ytVZY2H9FuR2hTxyRUiJzybgaS8nK5%2BWrKnZ7wXbaVrwy1CoFlSEhF4mLGDS5oN9IrZpdDxi"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c370f96c1cf-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 92,
  "title": "ratione ex tenetur perferendis",
  "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
} 
 </msg>
<msg timestamp="20210205 12:52:26.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.539" endtime="20210205 12:52:26.673"></status>
</kw>
<msg timestamp="20210205 12:52:26.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.537" endtime="20210205 12:52:26.673"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:26.676" endtime="20210205 12:52:26.679"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.675" endtime="20210205 12:52:26.679"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.674" endtime="20210205 12:52:26.679"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.681" endtime="20210205 12:52:26.682"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.680" endtime="20210205 12:52:26.682"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.683" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.683" endtime="20210205 12:52:26.683"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.756" level="INFO">${idvalue} = [92]</msg>
<status status="PASS" starttime="20210205 12:52:26.684" endtime="20210205 12:52:26.756"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:26.757" level="INFO">${responseid} = 92</msg>
<status status="PASS" starttime="20210205 12:52:26.756" endtime="20210205 12:52:26.757"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:26.757" endtime="20210205 12:52:26.758"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.759" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.758" endtime="20210205 12:52:26.759"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.682" endtime="20210205 12:52:26.759"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.536" endtime="20210205 12:52:26.759"></status>
</kw>
<kw name="${postid} = 93" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.761" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:26.761" endtime="20210205 12:52:26.762"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:26.810" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/93 
 path_url=/posts/93 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:26.810" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/93 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7f72f2231b2a51f8d27aafd51e748e4c1612547546; expires=Sun, 07-Mar-21 17:52:26 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611557052', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"107-ePXZ2FoBjuryDSZ4+6vLe92vrBs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14097', 'cf-request-id': '0814ebf74200000e36cd0a5000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ddGF6VxXMootfRFQZQXMD2zvUyNS4Zhq3eEn3Pro%2FERoO%2F7prqWnKYPGBz4bbLiDiMLSb0Tr1tN8VAyXoq%2Bb%2BDo9JjIHshMRY%2BB4TiqH6cohuyQDguEA%2B4tbA1X8"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c386d720e36-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 93,
  "title": "beatae soluta recusandae",
  "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
} 
 </msg>
<msg timestamp="20210205 12:52:26.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.762" endtime="20210205 12:52:26.811"></status>
</kw>
<msg timestamp="20210205 12:52:26.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.760" endtime="20210205 12:52:26.811"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:26.814" endtime="20210205 12:52:26.816"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.813" endtime="20210205 12:52:26.817"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.812" endtime="20210205 12:52:26.817"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.818" endtime="20210205 12:52:26.819"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.817" endtime="20210205 12:52:26.819"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.821" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.820" endtime="20210205 12:52:26.821"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.890" level="INFO">${idvalue} = [93]</msg>
<status status="PASS" starttime="20210205 12:52:26.821" endtime="20210205 12:52:26.891"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:26.892" level="INFO">${responseid} = 93</msg>
<status status="PASS" starttime="20210205 12:52:26.891" endtime="20210205 12:52:26.892"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:26.892" endtime="20210205 12:52:26.893"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:26.893" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:26.893" endtime="20210205 12:52:26.894"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.819" endtime="20210205 12:52:26.894"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.760" endtime="20210205 12:52:26.894"></status>
</kw>
<kw name="${postid} = 94" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:26.896" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:26.895" endtime="20210205 12:52:26.897"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:26.999" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/94 
 path_url=/posts/94 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:26.999" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/94 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1429eb787a077d1d4decf47eb4e3d3fc1612547547; expires=Sun, 07-Mar-21 17:52:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '919', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"108-YgH61+NkjOflAIB5ysSTcOx0QTQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebf7cd0000c198b5b63000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=bciPh0v5z95%2FVhLlrzcGzdMunOQ5PK6xELTEDopQVc8qyvRcXUKyW2zu3iwFSxq9bqjrzQyIpmRnCrjAT5pslTqQUSeMmkzEh9837RYxtxKas%2BceOZtjRjfQS%2Fzj"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c394e2ac198-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 94,
  "title": "qui qui voluptates illo iste minima",
  "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
} 
 </msg>
<msg timestamp="20210205 12:52:27.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.897" endtime="20210205 12:52:27.000"></status>
</kw>
<msg timestamp="20210205 12:52:27.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:26.894" endtime="20210205 12:52:27.000"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.003" endtime="20210205 12:52:27.006"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.002" endtime="20210205 12:52:27.006"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.001" endtime="20210205 12:52:27.006"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.008" endtime="20210205 12:52:27.008"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.006" endtime="20210205 12:52:27.009"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.010" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.010" endtime="20210205 12:52:27.010"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.081" level="INFO">${idvalue} = [94]</msg>
<status status="PASS" starttime="20210205 12:52:27.010" endtime="20210205 12:52:27.081"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:27.082" level="INFO">${responseid} = 94</msg>
<status status="PASS" starttime="20210205 12:52:27.081" endtime="20210205 12:52:27.082"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.082" endtime="20210205 12:52:27.083"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.083" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.083" endtime="20210205 12:52:27.083"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.009" endtime="20210205 12:52:27.084"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:26.894" endtime="20210205 12:52:27.084"></status>
</kw>
<kw name="${postid} = 95" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.086" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:27.085" endtime="20210205 12:52:27.086"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:27.143" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/95 
 path_url=/posts/95 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:27.143" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/95 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de97e3b7bf68b6119048384e59ba1c4ea1612547547; expires=Sun, 07-Mar-21 17:52:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '918', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"126-rrdOZSpMvdZiiYyTLDi2rkLG/Vw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebf88b0000f106d00e8000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=FKnN0lbfwOpmfYQMOIkhFhOYCZ%2F%2FbDbFdJx8oXCuzKAmCMWIKAt1GFLcwhgvs05pOc%2BWBliz8K8dsBoe57L172nVit0Bgjl96p8AqMqEgaM05TbaVJZ4YhWlXFPE"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c3a7af6f106-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 95,
  "title": "id minus libero illum nam ad officiis",
  "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
} 
 </msg>
<msg timestamp="20210205 12:52:27.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.087" endtime="20210205 12:52:27.144"></status>
</kw>
<msg timestamp="20210205 12:52:27.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.084" endtime="20210205 12:52:27.144"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.147" endtime="20210205 12:52:27.150"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.145" endtime="20210205 12:52:27.150"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.145" endtime="20210205 12:52:27.151"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.152" endtime="20210205 12:52:27.153"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.151" endtime="20210205 12:52:27.153"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.154" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.154" endtime="20210205 12:52:27.154"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.224" level="INFO">${idvalue} = [95]</msg>
<status status="PASS" starttime="20210205 12:52:27.155" endtime="20210205 12:52:27.224"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:27.225" level="INFO">${responseid} = 95</msg>
<status status="PASS" starttime="20210205 12:52:27.224" endtime="20210205 12:52:27.225"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.225" endtime="20210205 12:52:27.226"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.227" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.227" endtime="20210205 12:52:27.227"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.153" endtime="20210205 12:52:27.228"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.084" endtime="20210205 12:52:27.228"></status>
</kw>
<kw name="${postid} = 96" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.229" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:27.229" endtime="20210205 12:52:27.230"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:27.272" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/96 
 path_url=/posts/96 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:27.272" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/96 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=debc27de2f878b9eb39409d7e5a5833891612547547; expires=Sun, 07-Mar-21 17:52:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '909', 'X-Ratelimit-Reset': '1611704501', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-7coBGYTlaO8bCv0lNSqoAlkoszE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebf915000029d23fac7000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=tFECj4OJoidF7NK977iZ4Wtg%2BOMQIMH3QotSKhqHPj9YiQBQJqpXzGeCcrNsJcVtsrKbMRORxTmge642ocDA1A2ATqyBKUsaQ4GxQR2Dd57Q39xouEPa9OfHU%2F1w"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c3b5f2f29d2-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 96,
  "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
  "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
} 
 </msg>
<msg timestamp="20210205 12:52:27.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.230" endtime="20210205 12:52:27.273"></status>
</kw>
<msg timestamp="20210205 12:52:27.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.228" endtime="20210205 12:52:27.273"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.276" endtime="20210205 12:52:27.279"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.275" endtime="20210205 12:52:27.279"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.274" endtime="20210205 12:52:27.279"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.281" endtime="20210205 12:52:27.281"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.280" endtime="20210205 12:52:27.282"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.283" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.283" endtime="20210205 12:52:27.283"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.346" level="INFO">${idvalue} = [96]</msg>
<status status="PASS" starttime="20210205 12:52:27.283" endtime="20210205 12:52:27.346"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:27.347" level="INFO">${responseid} = 96</msg>
<status status="PASS" starttime="20210205 12:52:27.346" endtime="20210205 12:52:27.347"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.347" endtime="20210205 12:52:27.347"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.348" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.347" endtime="20210205 12:52:27.348"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.282" endtime="20210205 12:52:27.348"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.228" endtime="20210205 12:52:27.348"></status>
</kw>
<kw name="${postid} = 97" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.349" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:27.349" endtime="20210205 12:52:27.349"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:27.428" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/97 
 path_url=/posts/97 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:27.428" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/97 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9e04d1b12de76fe80e8be2aa9d1031d11612547547; expires=Sun, 07-Mar-21 17:52:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '916', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"13f-OIy2AGGq8mYJVydBUqG+k5NoCF4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebf98d0000ceb81a192000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=sAr1D40lg2LvwniMHckEg5%2F8f6xfYjbhuYXOvuyl5dcZIHD8UnCngfm4MJwtQzPPewoxdDaGFM4PY0Vuz4GwJ2xojFjJ3%2BA%2FnZbItX7GIZb79nPsF0636Qv4%2BScS"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c3c18afceb8-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 97,
  "title": "quas fugiat ut perspiciatis vero provident",
  "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
} 
 </msg>
<msg timestamp="20210205 12:52:27.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.350" endtime="20210205 12:52:27.429"></status>
</kw>
<msg timestamp="20210205 12:52:27.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.348" endtime="20210205 12:52:27.429"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.432" endtime="20210205 12:52:27.435"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.431" endtime="20210205 12:52:27.435"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.430" endtime="20210205 12:52:27.435"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.437" endtime="20210205 12:52:27.437"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.435" endtime="20210205 12:52:27.437"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.439" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.438" endtime="20210205 12:52:27.439"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.505" level="INFO">${idvalue} = [97]</msg>
<status status="PASS" starttime="20210205 12:52:27.439" endtime="20210205 12:52:27.505"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:27.507" level="INFO">${responseid} = 97</msg>
<status status="PASS" starttime="20210205 12:52:27.506" endtime="20210205 12:52:27.507"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.507" endtime="20210205 12:52:27.507"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.508" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.507" endtime="20210205 12:52:27.508"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.438" endtime="20210205 12:52:27.508"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.348" endtime="20210205 12:52:27.508"></status>
</kw>
<kw name="${postid} = 98" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.509" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:27.509" endtime="20210205 12:52:27.510"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:27.559" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/98 
 path_url=/posts/98 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:27.559" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/98 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3855d69d5061effd0e557c4ed31a43ad1612547547; expires=Sun, 07-Mar-21 17:52:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '908', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d1-AdCHAQW37rE37t8vXTeQZeKV7Cg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14098', 'cf-request-id': '0814ebfa2d0000c18ea4008000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BIpOBGaxzLeWBCbur38sNoEF991YrZhdOwTydPVatOAAyb6iejn8oQ%2Blb8eIffsnXdkC0VV1jwukL7ZvkIbT9%2F7Yk9i0OqGluQKKmAa2B0n1PJg2tufk2Euzl6ur"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c3d1d03c18e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 98,
  "title": "laboriosam dolor voluptates",
  "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
} 
 </msg>
<msg timestamp="20210205 12:52:27.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.510" endtime="20210205 12:52:27.560"></status>
</kw>
<msg timestamp="20210205 12:52:27.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.508" endtime="20210205 12:52:27.560"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.563" endtime="20210205 12:52:27.566"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.562" endtime="20210205 12:52:27.566"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.561" endtime="20210205 12:52:27.566"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.567" endtime="20210205 12:52:27.568"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.566" endtime="20210205 12:52:27.568"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.570" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.570" endtime="20210205 12:52:27.570"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.636" level="INFO">${idvalue} = [98]</msg>
<status status="PASS" starttime="20210205 12:52:27.570" endtime="20210205 12:52:27.636"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:27.637" level="INFO">${responseid} = 98</msg>
<status status="PASS" starttime="20210205 12:52:27.636" endtime="20210205 12:52:27.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.637" endtime="20210205 12:52:27.637"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.638" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.637" endtime="20210205 12:52:27.638"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.569" endtime="20210205 12:52:27.638"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.508" endtime="20210205 12:52:27.638"></status>
</kw>
<kw name="${postid} = 99" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.639" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:27.639" endtime="20210205 12:52:27.639"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:27.701" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/99 
 path_url=/posts/99 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:27.701" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/99 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dcd3112c3336a405b63705ebeff50ec561612547547; expires=Sun, 07-Mar-21 17:52:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '913', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e0-aXopzb0YfAN1tmSD/RVNZPaEz8g"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14097', 'cf-request-id': '0814ebfab5000038185b83a000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Gh5fXoJ43fGdvHrsLCYBHkM9bpzeoxHqVV6rOVBmnQaRXURVWa%2FzwfKDuX%2FS3LUmqSDoLgeGVXS9Qzvjtd0iFBoEtV6soaHx2Jslo%2BdrWug5IkC3iO6bZem3a8HF"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c3de88b3818-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 99,
  "title": "temporibus sit alias delectus eligendi possimus magni",
  "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
} 
 </msg>
<msg timestamp="20210205 12:52:27.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.640" endtime="20210205 12:52:27.702"></status>
</kw>
<msg timestamp="20210205 12:52:27.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.638" endtime="20210205 12:52:27.702"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.705" endtime="20210205 12:52:27.708"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.704" endtime="20210205 12:52:27.708"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.703" endtime="20210205 12:52:27.708"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.709" endtime="20210205 12:52:27.710"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.708" endtime="20210205 12:52:27.710"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.712" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.712" endtime="20210205 12:52:27.712"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.777" level="INFO">${idvalue} = [99]</msg>
<status status="PASS" starttime="20210205 12:52:27.713" endtime="20210205 12:52:27.777"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:27.778" level="INFO">${responseid} = 99</msg>
<status status="PASS" starttime="20210205 12:52:27.778" endtime="20210205 12:52:27.779"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.779" endtime="20210205 12:52:27.780"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.780" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.780" endtime="20210205 12:52:27.780"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.710" endtime="20210205 12:52:27.781"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.638" endtime="20210205 12:52:27.781"></status>
</kw>
<kw name="${postid} = 100" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.782" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 12:52:27.782" endtime="20210205 12:52:27.783"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 12:52:27.842" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 12:52:27.842" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Feb 2021 17:52:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d27d0012a0ca085d5efc893b3e31d701d1612547547; expires=Sun, 07-Mar-21 17:52:27 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '914', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14097', 'cf-request-id': '0814ebfb3f0000f19c382ba000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=thReUBjYFKRASKwy1SjVb8PV4V2vH2rUBaqjNlTapw2bbQMPX39jeecJWYyZ2X3YJe3H4idYlH0a3lBTpwOLgO6kDEmJ6lvwDnEa1aXgRP9mVJARY1iCfq0xbP5a"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61ce7c3ecf7ff19c-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<msg timestamp="20210205 12:52:27.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.783" endtime="20210205 12:52:27.843"></status>
</kw>
<msg timestamp="20210205 12:52:27.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.781" endtime="20210205 12:52:27.843"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.846" endtime="20210205 12:52:27.849"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.844" endtime="20210205 12:52:27.849"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.843" endtime="20210205 12:52:27.849"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 12:52:27.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 12:52:27.851" endtime="20210205 12:52:27.851"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.849" endtime="20210205 12:52:27.851"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.853" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.852" endtime="20210205 12:52:27.853"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.915" level="INFO">${idvalue} = [100]</msg>
<status status="PASS" starttime="20210205 12:52:27.853" endtime="20210205 12:52:27.915"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 12:52:27.917" level="INFO">${responseid} = 100</msg>
<status status="PASS" starttime="20210205 12:52:27.916" endtime="20210205 12:52:27.917"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 12:52:27.917" endtime="20210205 12:52:27.918"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 12:52:27.918" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 12:52:27.918" endtime="20210205 12:52:27.918"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.852" endtime="20210205 12:52:27.919"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:27.781" endtime="20210205 12:52:27.919"></status>
</kw>
<status status="PASS" starttime="20210205 12:52:09.169" endtime="20210205 12:52:27.919"></status>
</kw>
<doc>Validate Response for Getting post by passing single post id</doc>
<tags>
<tag>Positive Extensive</tag>
</tags>
<status status="PASS" starttime="20210205 12:52:09.140" endtime="20210205 12:52:27.920" critical="yes"></status>
</test>
<status status="PASS" starttime="20210205 12:52:06.842" endtime="20210205 12:52:27.932"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Negative Boundary</stat>
<stat pass="1" fail="0">Negative Smoke</stat>
<stat pass="1" fail="0">Positive</stat>
<stat pass="1" fail="0">Positive Boundary</stat>
<stat pass="1" fail="0">Positive Extensive</stat>
<stat pass="1" fail="0">Positive Smoke</stat>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="TS001 Posts">TS001 Posts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
